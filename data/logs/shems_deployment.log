Starting SHEMS deployment at Fri Apr 18 02:46:43 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Hit:3 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 6,581 B in 2s (2,769 B/s)
Reading package lists...
W: https://packages.grafana.com/oss/deb/dists/stable/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Reading package lists...
Building dependency tree...
Reading state information...
python3 is already the newest version (3.11.2-1).
python3-pip is already the newest version (23.0.1+dfsg-1+rpt1).
python3-venv is already the newest version (3.11.2-1).
mariadb-server is already the newest version (1:10.11.3-1+rpi1).
libmariadb-dev is already the newest version (1:10.11.3-1+rpi1).
The following packages were automatically installed and are no longer required:
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (23.0.1)
Collecting pip
  Using cached https://www.piwheels.org/simple/pip/pip-25.0.1-py3-none-any.whl (1.8 MB)
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 23.0.1
    Uninstalling pip-23.0.1:
      Successfully uninstalled pip-23.0.1
Successfully installed pip-25.0.1
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Collecting pymysql
  Using cached https://www.piwheels.org/simple/pymysql/PyMySQL-1.1.1-py3-none-any.whl (44 kB)
Collecting flask
  Using cached https://www.piwheels.org/simple/flask/flask-3.1.0-py3-none-any.whl (102 kB)
Collecting werkzeug
  Using cached https://www.piwheels.org/simple/werkzeug/werkzeug-3.1.3-py3-none-any.whl (224 kB)
Collecting tailscale
  Using cached https://www.piwheels.org/simple/tailscale/tailscale-0.6.1-py3-none-any.whl (7.9 kB)
Collecting Jinja2>=3.1.2 (from flask)
  Using cached https://www.piwheels.org/simple/jinja2/jinja2-3.1.6-py3-none-any.whl (134 kB)
Collecting itsdangerous>=2.2 (from flask)
  Using cached https://www.piwheels.org/simple/itsdangerous/itsdangerous-2.2.0-py3-none-any.whl (16 kB)
Collecting click>=8.1.3 (from flask)
  Using cached https://www.piwheels.org/simple/click/click-8.1.8-py3-none-any.whl (98 kB)
Collecting blinker>=1.9 (from flask)
  Using cached https://www.piwheels.org/simple/blinker/blinker-1.9.0-py3-none-any.whl (8.5 kB)
Collecting MarkupSafe>=2.1.1 (from werkzeug)
  Using cached markupsafe-3.0.2-cp311-cp311-linux_armv7l.whl
Collecting aiohttp>=3.0.0 (from tailscale)
  Using cached aiohttp-3.11.16-cp311-cp311-linux_armv7l.whl
Collecting mashumaro>=3.10 (from tailscale)
  Using cached https://www.piwheels.org/simple/mashumaro/mashumaro-3.15-py3-none-any.whl (93 kB)
Collecting orjson>=3.9.8 (from tailscale)
  Using cached orjson-3.10.16-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl.metadata (41 kB)
Collecting yarl>=1.6.0 (from tailscale)
  Downloading yarl-1.20.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl.metadata (72 kB)
Collecting aiohappyeyeballs>=2.3.0 (from aiohttp>=3.0.0->tailscale)
  Using cached https://www.piwheels.org/simple/aiohappyeyeballs/aiohappyeyeballs-2.6.1-py3-none-any.whl (15 kB)
Collecting aiosignal>=1.1.2 (from aiohttp>=3.0.0->tailscale)
  Using cached https://www.piwheels.org/simple/aiosignal/aiosignal-1.3.2-py2.py3-none-any.whl (7.6 kB)
Collecting attrs>=17.3.0 (from aiohttp>=3.0.0->tailscale)
  Using cached https://www.piwheels.org/simple/attrs/attrs-25.3.0-py3-none-any.whl (63 kB)
Collecting frozenlist>=1.1.1 (from aiohttp>=3.0.0->tailscale)
  Downloading frozenlist-1.6.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl.metadata (16 kB)
Collecting multidict<7.0,>=4.5 (from aiohttp>=3.0.0->tailscale)
  Using cached multidict-6.4.3-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl.metadata (5.3 kB)
Collecting propcache>=0.2.0 (from aiohttp>=3.0.0->tailscale)
  Using cached https://www.piwheels.org/simple/propcache/propcache-0.3.1-cp311-cp311-linux_armv7l.whl (179 kB)
Collecting typing_extensions>=4.1.0 (from mashumaro>=3.10->tailscale)
  Using cached typing_extensions-4.13.2-py3-none-any.whl.metadata (3.0 kB)
Collecting idna>=2.0 (from yarl>=1.6.0->tailscale)
  Using cached https://www.piwheels.org/simple/idna/idna-3.10-py3-none-any.whl (70 kB)
Using cached orjson-3.10.16-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl (132 kB)
Downloading yarl-1.20.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl (344 kB)
Downloading frozenlist-1.6.0-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl (304 kB)
Using cached multidict-6.4.3-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.manylinux_2_31_armv7l.whl (223 kB)
Using cached typing_extensions-4.13.2-py3-none-any.whl (45 kB)
Installing collected packages: typing_extensions, pymysql, propcache, orjson, multidict, MarkupSafe, itsdangerous, idna, frozenlist, click, blinker, attrs, aiohappyeyeballs, yarl, werkzeug, mashumaro, Jinja2, aiosignal, flask, aiohttp, tailscale
Successfully installed Jinja2-3.1.6 MarkupSafe-3.0.2 aiohappyeyeballs-2.6.1 aiohttp-3.11.16 aiosignal-1.3.2 attrs-25.3.0 blinker-1.9.0 click-8.1.8 flask-3.1.0 frozenlist-1.6.0 idna-3.10 itsdangerous-2.2.0 mashumaro-3.15 multidict-6.4.3 orjson-3.10.16 propcache-0.3.1 pymysql-1.1.1 tailscale-0.6.1 typing_extensions-4.13.2 werkzeug-3.1.3 yarl-1.20.0
Deploying HTML templates...
cp: cannot stat './shems_dashboard_input.html': No such file or directory
cp: cannot stat './shems_dashboard_visuals.html': No such file or directory
Deploying Python scripts...
cp: './shems_monitoring_server.py' and '/app/smarthome/dev/bin/shems_monitoring_server.py' are the same file
cp: './shems_data_simulation.py' and '/app/smarthome/dev/bin/shems_data_simulation.py' are the same file
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 02:48:10 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 02:49:16 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server failed to start within 30 seconds
Starting SHEMS deployment at Fri Apr 18 03:02:09 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Get:3 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Hit:4 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Fetched 6,581 B in 2s (3,056 B/s)
Reading package lists...
W: https://packages.grafana.com/oss/deb/dists/stable/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Reading package lists...
Building dependency tree...
Reading state information...
python3 is already the newest version (3.11.2-1).
python3-pip is already the newest version (23.0.1+dfsg-1+rpt1).
python3-venv is already the newest version (3.11.2-1).
mariadb-server is already the newest version (1:10.11.3-1+rpi1).
libmariadb-dev is already the newest version (1:10.11.3-1+rpi1).
The following packages were automatically installed and are no longer required:
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
cp: cannot stat './shems_dashboard_input.html': No such file or directory
cp: cannot stat './shems_dashboard_visuals.html': No such file or directory
Deploying Python scripts...
cp: './shems_monitoring_server.py' and '/app/smarthome/dev/bin/shems_monitoring_server.py' are the same file
cp: './shems_data_simulation.py' and '/app/smarthome/dev/bin/shems_data_simulation.py' are the same file
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 03:02:47 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Starting SHEMS deployment at Fri Apr 18 03:08:16 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 03:08:38 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Starting SHEMS deployment at Fri Apr 18 03:16:24 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 03:16:36 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 03:17:43 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server failed to start within 30 seconds
Starting SHEMS deployment at Fri Apr 18 03:22:15 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 03:22:28 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Starting SHEMS deployment at Fri Apr 18 03:23:32 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 03:23:45 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Starting SHEMS deployment at Fri Apr 18 03:41:49 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 03:42:10 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 03:43:16 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server failed to start within 30 seconds
Starting SHEMS deployment at Fri Apr 18 03:54:10 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
ERROR: Operation cancelled by user
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/venv/bin/pip", line 5, in <module>
    from pip._internal.cli.main import main
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pip/_internal/cli/main.py", line 11, in <module>
    from pip._internal.cli.autocompletion import autocomplete
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pip/_internal/cli/autocompletion.py", line 10, in <module>
    from pip._internal.cli.main_parser import create_main_parser
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pip/_internal/cli/main_parser.py", line 9, in <module>
    from pip._internal.build_env import get_runnable_pip
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pip/_internal/build_env.py", line 17, in <module>
    from pip._internal.cli.spinners import open_spinner
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pip/_internal/cli/spinners.py", line 8, in <module>
    from pip._internal.utils.compat import WINDOWS
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pip/_internal/utils/compat.py", line 4, in <module>
    import importlib.resources
  File "/usr/lib/python3.11/importlib/resources/__init__.py", line 3, in <module>
    from ._common import (
  File "/usr/lib/python3.11/importlib/resources/_common.py", line 3, in <module>
    import tempfile
  File "/usr/lib/python3.11/tempfile.py", line 820, in <module>
    class SpooledTemporaryFile(_io.IOBase):
  File "/usr/lib/python3.11/tempfile.py", line 927, in SpooledTemporaryFile
    @property
     ^^^^^^^^
KeyboardInterrupt

[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m Starting SHEMS deployment at Fri Apr 18 03:55:52 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 03:56:16 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt 1: Failed to configure data source, retrying...
Attempt 2: Failed to configure data source, retrying...
Attempt 3: Failed to configure data source, retrying...
Attempt 4: Failed to configure data source, retrying...
Attempt 5: Failed to configure data source, retrying...
Attempt 6: Failed to configure data source, retrying...
Attempt 7: Failed to configure data source, retrying...
Attempt 8: Failed to configure data source, retrying...
Attempt 9: Failed to configure data source, retrying...
Attempt 10: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 03:57:50 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Starting SHEMS deployment at Fri Apr 18 04:04:30 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 04:04:52 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt 1: Failed to configure data source, retrying...
Attempt 2: Failed to configure data source, retrying...
Attempt 3: Failed to configure data source, retrying...
Attempt 4: Failed to configure data source, retrying...
Attempt 5: Failed to configure data source, retrying...
Attempt 6: Failed to configure data source, retrying...
Attempt 7: Failed to configure data source, retrying...
Attempt 8: Failed to configure data source, retrying...
Attempt 9: Failed to configure data source, retrying...
Starting SHEMS deployment at Fri Apr 18 04:07:15 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 04:07:37 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt 1: Failed to configure data source, retrying...
Attempt 2: Failed to configure data source, retrying...
Attempt 3: Failed to configure data source, retrying...
Attempt 4: Failed to configure data source, retrying...
Attempt 5: Failed to configure data source, retrying...
Attempt 6: Failed to configure data source, retrying...
Attempt 7: Failed to configure data source, retrying...
Attempt 8: Failed to configure data source, retrying...
Attempt 9: Failed to configure data source, retrying...
Attempt 10: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Starting SHEMS deployment at Fri Apr 18 04:38:29 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 04:38:51 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt 1: Failed to configure data source, retrying...
Attempt 2: Failed to configure data source, retrying...
Starting SHEMS deployment at Fri Apr 18 04:40:35 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 04:40:57 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt 1: Failed to configure data source, retrying...
Attempt 2: Failed to configure data source, retrying...
Attempt 3: Failed to configure data source, retrying...
Attempt 4: Failed to configure data source, retrying...
Attempt 5: Failed to configure data source, retrying...
Starting SHEMS deployment at Fri Apr 18 05:13:47 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 05:14:13 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source configured successfully
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 05:15:21 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 05:15:23 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 05:34:36 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 05:34:59 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 05:36:06 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 05:36:07 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 06:11:34 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 06:11:55 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 06:13:02 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server failed to start within 30 seconds
Starting SHEMS deployment at Fri Apr 18 06:20:35 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 06:20:56 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 06:22:03 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Starting SHEMS deployment at Fri Apr 18 06:47:57 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 06:48:19 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 06:49:25 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server failed to start within 30 seconds
Starting SHEMS deployment at Fri Apr 18 06:55:13 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 06:55:35 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 06:56:41 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 06:56:43 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 07:02:57 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pip in ./venv/lib/python3.11/site-packages (25.0.1)
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Requirement already satisfied: pymysql in ./venv/lib/python3.11/site-packages (1.1.1)
Requirement already satisfied: flask in ./venv/lib/python3.11/site-packages (3.1.0)
Requirement already satisfied: werkzeug in ./venv/lib/python3.11/site-packages (3.1.3)
Requirement already satisfied: tailscale in ./venv/lib/python3.11/site-packages (0.6.1)
Requirement already satisfied: Jinja2>=3.1.2 in ./venv/lib/python3.11/site-packages (from flask) (3.1.6)
Requirement already satisfied: itsdangerous>=2.2 in ./venv/lib/python3.11/site-packages (from flask) (2.2.0)
Requirement already satisfied: click>=8.1.3 in ./venv/lib/python3.11/site-packages (from flask) (8.1.8)
Requirement already satisfied: blinker>=1.9 in ./venv/lib/python3.11/site-packages (from flask) (1.9.0)
Requirement already satisfied: MarkupSafe>=2.1.1 in ./venv/lib/python3.11/site-packages (from werkzeug) (3.0.2)
Requirement already satisfied: aiohttp>=3.0.0 in ./venv/lib/python3.11/site-packages (from tailscale) (3.11.16)
Requirement already satisfied: mashumaro>=3.10 in ./venv/lib/python3.11/site-packages (from tailscale) (3.15)
Requirement already satisfied: orjson>=3.9.8 in ./venv/lib/python3.11/site-packages (from tailscale) (3.10.16)
Requirement already satisfied: yarl>=1.6.0 in ./venv/lib/python3.11/site-packages (from tailscale) (1.20.0)
Requirement already satisfied: aiohappyeyeballs>=2.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (2.6.1)
Requirement already satisfied: aiosignal>=1.1.2 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.3.2)
Requirement already satisfied: attrs>=17.3.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (25.3.0)
Requirement already satisfied: frozenlist>=1.1.1 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (1.6.0)
Requirement already satisfied: multidict<7.0,>=4.5 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (6.4.3)
Requirement already satisfied: propcache>=0.2.0 in ./venv/lib/python3.11/site-packages (from aiohttp>=3.0.0->tailscale) (0.3.1)
Requirement already satisfied: typing_extensions>=4.1.0 in ./venv/lib/python3.11/site-packages (from mashumaro>=3.10->tailscale) (4.13.2)
Requirement already satisfied: idna>=2.0 in ./venv/lib/python3.11/site-packages (from yarl>=1.6.0->tailscale) (3.10)
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 07:03:20 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt 1: Failed to import dashboard device-details, retrying...
Attempt 2: Failed to import dashboard device-details, retrying...
Attempt 3: Failed to import dashboard device-details, retrying...
Attempt 4: Failed to import dashboard device-details, retrying...
Attempt 5: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt 1: Failed to import dashboard energy-analysis, retrying...
Attempt 2: Failed to import dashboard energy-analysis, retrying...
Attempt 3: Failed to import dashboard energy-analysis, retrying...
Attempt 4: Failed to import dashboard energy-analysis, retrying...
Attempt 5: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt 1: Failed to import dashboard overview-dashboard, retrying...
Attempt 2: Failed to import dashboard overview-dashboard, retrying...
Attempt 3: Failed to import dashboard overview-dashboard, retrying...
Attempt 4: Failed to import dashboard overview-dashboard, retrying...
Attempt 5: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt 1: Failed to import dashboard power-analysis, retrying...
Attempt 2: Failed to import dashboard power-analysis, retrying...
Attempt 3: Failed to import dashboard power-analysis, retrying...
Attempt 4: Failed to import dashboard power-analysis, retrying...
Attempt 5: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Fri Apr 18 07:04:26 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 07:04:27 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 07:19:00 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Starting SHEMS deployment at Fri Apr 18 07:19:55 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 07:20:08 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
./shems_deploy_grafana.sh: line 569: -u: command not found
Attempt 1: Failed to import dashboard device-details, retrying...
./shems_deploy_grafana.sh: line 569: -u: command not found
Attempt 2: Failed to import dashboard device-details, retrying...
Starting SHEMS deployment at Fri Apr 18 07:22:35 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 07:22:47 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 07:22:50 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 07:22:51 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 08:16:45 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 08:16:57 PM IST 2025
Grafana is already installed
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 08:16:59 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 08:17:01 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 08:51:59 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
dirname: invalid option -- 'b'
Try 'dirname --help' for more information.
-bash: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 08:52:13 PM IST 2025
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi [7mshems_deploy_interface.sh[27mshems_deploy_interface.sh
[?2004lVim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H[1m[37m[41mE325: ATTENTION[m
Found a swap file by the name ".shems_deploy_interface.sh.swp"
[10Cowned by: shems-mis   dated: Fri Apr 18 15:54:27 2025
[9Cfile name: /app/smarthome/dev/bin/shems_deploy_interface.sh
[10Cmodified: YES
[9Cuser name: shems-mis   host name: raspberrypi
[8Cprocess ID: 3331
While opening file "shems_deploy_interface.sh"
[13Cdated: Fri Apr 18 19:20:38 2025
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r shems_deploy_interface.sh"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".shems_deploy_interface.sh.swp"
    to avoid this message.

"shems_deploy_interface.sh"[37;1H"shems_deploy_interface.sh" 111 lines, 3440 bytes[38;1H[K[38;1H[32mPress ENTER or type command to continue[?25h[m[1;1H[20L[?25l[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[38;1H[K[1;1H[?25h[?4m



































[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Start the monitoring server[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H"$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Deploy Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy Python scripts[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy HTML templates[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install --upgrade pip[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install Python dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create Python virtual environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring MariaDB..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure MariaDB[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Installing required packages..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install required packages[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_data_simulation.py" || echo "No existing simulation process found"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_monitoring_server.py" || echo "No existing server process found"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Checking for existing processes..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check for existing processes and kill them[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting SHEMS deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_deployment.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create directories[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR="/app/smarthome/data"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR="/app/smarthome/dev/bin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR="/app/smarthome/dev/templates"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h



































[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H












[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[18;1H[17;1H[16;1H[15;1H[14;1H[13;1H[12;1H[11;1H[10;1H[9;1H[8;1H[7;1H[6;1H[5;1H[4;1H[3;1H[2;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy HTML templates[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install --upgrade pip[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install Python dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create Python virtual environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring MariaDB..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure MariaDB[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Installing required packages..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install required packages[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_data_simulation.py" || echo "No existing simulation process found"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_monitoring_server.py" || echo "No existing server process found"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Checking for existing processes..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check for existing processes and kill them[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting SHEMS deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_deployment.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create directories[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR="/app/smarthome/data"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR="/app/smarthome/dev/bin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR="/app/smarthome/dev/templates"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h



































[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[36;1H[35;1H[34;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[26;1H[25;1H[24;1H[23;1H[22;1H[21;1H"$([?25lirname "$0")/shems_deploy_grafana.sh"[21;41H[K[21;4H[?25h[?25lrname "$0")/shems_deploy_grafana.sh"[21;40H[K[21;4H[?25h[?25lname "$0")/shems_deploy_grafana.sh"[21;39H[K[21;4H[?25h[?25lame "$0")/shems_deploy_grafana.sh"[21;38H[K[21;4H[?25h[?25lme "$0")/shems_deploy_grafana.sh"[21;37H[K[21;4H[?25h[?25le "$0")/shems_deploy_grafana.sh"[21;36H[K[21;4H[?25h[?25l "$0")/shems_deploy_grafana.sh"[21;35H[K[21;4H[?25h[?25l"$0")/shems_deploy_grafana.sh"[21;34H[K[21;4H[?25h[?25l$0")/shems_deploy_grafana.sh"[21;33H[K[21;4H[?25h[?25l0")/shems_deploy_grafana.sh"[21;32H[K[21;4H[?25h[?25l")/shems_deploy_grafana.sh"[21;31H[K[21;4H[?25h[?25l)/shems_deploy_grafana.sh"[21;30H[K[21;4H[?25h[?2004l[>4;m[?25lS)/shems_deploy_grafana.sh""$(S[?25h[?25lC)/shems_deploy_grafana.sh""$(SC[?25h[?25lR)/shems_deploy_grafana.sh"[21;7H[?25h[?25lI)/shems_deploy_grafana.sh"[21;8H[?25h[?25lP)/shems_deploy_grafana.sh"[21;9H[?25h[?25lT)/shems_deploy_grafana.sh"[21;10H[?25h[?25l_)/shems_deploy_grafana.sh"[21;11H[?25h[?25lD)/shems_deploy_grafana.sh"[21;12H[?25h[?25lI)/shems_deploy_grafana.sh"[21;13H[?25h[?25lR)/shems_deploy_grafana.sh"[21;14H[?25h[?2004h[>4;2m[?4m[?25l[38;1H:[?25hwq![?25l[?2004l[>4;m"shems_deploy_interface.sh" 111 lines, 3438 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_deploy_interface.sh. ./shems_deploy_interface.sh
[?2004lStarting SHEMS deployment at Fri Apr 18 08:53:47 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 08:53:47 PM IST 2025
Checking for existing processes...
Checking for existing processes...
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
-bash: SCRIPT_DIR: command not found
-bash: SCRIPT_DIR: command not found
-bash: /shems_deploy_grafana.sh: No such file or directory
-bash: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running


Deployment completed successfully!
Deployment completed successfully!


Access points:
Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Tailscale): http://100.97.72.36:3000


Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)


Log files are available in: /app/smarthome/data/logs
Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 08:54:01 PM IST 2025
Deployment completed at Fri Apr 18 08:54:01 PM IST 2025
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vv[K[Kllss  --llrrtthh
[?2004l
[?2004ltotal 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
total 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvii  [7mshems_deploy_grafana.sh[27m[7mshems_deploy_grafana.sh[27mshems_deploy_grafana.sh
[?2004lshems_deploy_grafana.sh
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[1;38r[?12h[?12l[22;2t[22;1t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh" 263 lines, 7258 bytes 263 lines, 7258 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m







































































[?25l[1;37r[37;1H
[1;38r[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;1Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Grafana is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Grafana is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;1H[25;1H[24;1H[24;1H

























[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create data source configuration[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create data source configuration[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"type": "mysql",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"type": "mysql",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"database": "$DB_NAME",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"database": "$DB_NAME",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"user": "$DB_USER",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"user": "$DB_USER",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"password": "$DB_PASS",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"password": "$DB_PASS",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"access": "proxy",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"access": "proxy",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;1H[25;1H[24;1H[24;1H[23;1H[23;1H[22;1H[22;1H[21;1H[21;1H[20;1H[20;1H[19;1H[19;1H[18;1H[18;1H[17;1H[17;1H







































[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;1H[25;1H[24;1H[24;1H[23;1H[23;1H[22;1H[22;1H[21;1H[21;1H[20;1H[20;1H[19;1H[19;1H[18;1H[18;1H





































[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;1H[25;1H[24;1H[24;1H

























[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;1H[25;1H[24;1H[24;1H[23;1H[23;1H[22;1H[22;1H[21;1H[21;1H[20;1H[20;1H[19;1H[19;1H[18;1H[18;1H[17;1H[17;1H[16;1H[16;1H[15;1H[15;1H[14;1H[14;1H[13;1H[13;1H[12;1H[12;1H[11;1H[11;1H[10;1H[10;1H[9;1H[9;1H[8;1H[8;1H[7;1H[7;1H[6;1H[6;1H[5;1H[5;1H[4;1H[4;1H[3;1H[3;1H[2;1H[2;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;3H"access": "proxy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"access": "proxy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"password": "$DB_PASS",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"password": "$DB_PASS",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"user": "$DB_USER",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"user": "$DB_USER",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"database": "$DB_NAME",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"database": "$DB_NAME",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"type": "mysql",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"type": "mysql",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create data source configuration[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create data source configuration[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsleep 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsleep 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Grafana is running"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Grafana is running"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h







































































[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"panels": [[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"panels": [[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[35;1H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[35;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[23;1H[23;1H[22;1H[22;1H[21;1H[21;1H[20;1H[20;1H[19;1H[19;1H[18;1H[18;1H[17;1H[17;1H[16;1H[16;1H[15;1H[15;1H[14;1H[14;1H[13;1H[13;1H[12;1H[12;1H[11;1H[11;1H[10;1H[10;1H[9;1H[9;1H[8;1H[8;1H[7;1H[7;1H[6;1H[6;1H[5;1H[5;1H[4;1H[4;1H[3;1H[3;1H[2;1H[2;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsleep 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsleep 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source already exists"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source already exists"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-u admin:admin)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-u admin:admin)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-d "$DATASOURCE_JSON" \[36;1H[1m[34m@                                                                                                                                     [37;1H@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-d "$DATASOURCE_JSON" \[36;1H[1m[34m@                                                                                                                                     [37;1H@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..10}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..10}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure data source using Grafana API[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure data source using Grafana API[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HEOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HEOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxIdleConns": 5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxIdleConns": 5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxOpenConns": 10,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxOpenConns": 10,[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"jsonData": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"jsonData": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"isDefault": true,[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"isDefault": true,[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"access": "proxy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"access": "proxy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"password": "$DB_PASS",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"password": "$DB_PASS",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"user": "$DB_USER",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"user": "$DB_USER",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"database": "$DB_NAME",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"database": "$DB_NAME",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"type": "mysql",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"type": "mysql",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create data source configuration[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create data source configuration[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsleep 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsleep 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Grafana is running"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Grafana is running"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl start grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl start grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl enable grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl enable grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Enable and start Grafana service[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Enable and start Grafana service[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Add Grafana repository[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Add Grafana repository[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y apt-transport-https software-properties-common wget[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y apt-transport-https software-properties-common wget[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana not found. Installing..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana not found. Installing..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! command -v grafana-server &> /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! command -v grafana-server &> /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if Grafana is already installed[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if Grafana is already installed[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting Grafana deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting Grafana deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_grafana_deploy.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_grafana_deploy.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$LOG_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$LOG_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hqq!![?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m llss  llrrtt[K[K[K[K[K[Kll[K[K--llrrtthh  
[?2004l
[?2004ltotal 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
total 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ccdd  ....//....//ggrraaffaannaa//**
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m llss  --llrr

[?2004l[?2004ltotal 40
-rwxrwxrwx 1 shems-mis shems-mis 10682 Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  8260 Apr 18 20:51 overview-dashboard.json
-rwxrwxrwx 1 shems-mis shems-mis  6252 Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  7891 Apr 18 20:39 device-details.json
total 40
-rwxrwxrwx 1 shems-mis shems-mis 10682 Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  8260 Apr 18 20:51 overview-dashboard.json
-rwxrwxrwx 1 shems-mis shems-mis  6252 Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  7891 Apr 18 20:39 device-details.json
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 

[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 

[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 

[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m llss  --llrrtthh  
[?2004l
[?2004ltotal 40K
-rwxrwxrwx 1 shems-mis shems-mis 7.8K Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
total 40K
-rwxrwxrwx 1 shems-mis shems-mis 7.8K Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m ccdd  --
[?2004l/app/smarthome/dev/bin

[?2004l/app/smarthome/dev/bin
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m llss  --llrrtthh  
[?2004l
[?2004ltotal 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
total 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvii  [7mshems_deploy_grafana.sh[27m[7mshems_deploy_grafana.sh[27mshems_deploy_grafana.shshems_deploy_grafana.sh

[?2004l[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh" 263 lines, 7258 bytes 263 lines, 7258 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m







































































[?25l[1;37r[37;1H
[1;38r[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;1Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Grafana is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Grafana is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create data source configuration[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create data source configuration[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"type": "mysql",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"type": "mysql",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"database": "$DB_NAME",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"database": "$DB_NAME",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"user": "$DB_USER",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"user": "$DB_USER",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"password": "$DB_PASS",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"password": "$DB_PASS",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"access": "proxy",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"access": "proxy",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[36;1H[36;1H

[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H





[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"panels": [[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"panels": [[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[35;1H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[35;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;1H[25;1H[24;1H[24;1H[23;1H[23;1H[22;1H[22;1H[21;1H[21;1H[20;1H[20;1H[19;1H[19;1H[18;1H[18;1H[17;1H[17;1H[16;1H[16;1H[15;1H[15;1H[14;1H[14;1H[13;1H[13;1H





[15;1H[15;1H[?25l[15;37r[37;1H
[1;38r[37;7H"fieldConfig": {[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"fieldConfig": {[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"defaults": {[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"defaults": {[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"unit": "watt",[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"unit": "watt",[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"thresholds": {[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"thresholds": {[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"mode": "absolute",[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"mode": "absolute",[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"steps": [[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"steps": [[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{ "color": "green", "value": null },[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{ "color": "green", "value": null },[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{ "color": "red", "value": 1000 }[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{ "color": "red", "value": 1000 }[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H][15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H][15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H},[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H},[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"overrides": [[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"overrides": [[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H{[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H{[15;9H[?25h[?25l[15;37r[15;1H[3M[1;38r[35;13H"matcher": {[36;15H"id": "byName",[37;15H"options": "Energy"[15;9H[?25h[?25l[15;37r[15;1H[3M[1;38r[35;13H"matcher": {[36;15H"id": "byName",[37;15H"options": "Energy"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H},[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H},[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"properties": [[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"properties": [[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"id": "unit",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"id": "unit",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"value": "kwh"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"value": "kwh"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H][15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H][15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H},[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H},[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H{[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H{[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"matcher": {[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"matcher": {[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H"id": "byName",[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H"id": "byName",[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H"options": "Status"[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H"options": "Status"[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H},[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H},[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"properties": [[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H"properties": [[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"id": "color",[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"id": "color",[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"value": {[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"value": {[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H}[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H}[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H},[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H},[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H{[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"id": "thresholds",[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"id": "thresholds",[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"value": {[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H"value": {[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H"steps": [[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H"steps": [[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;21H{ "color": "green", "value": null },[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;21H{ "color": "green", "value": null },[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;21H{ "color": "red", "value": "OFF" }[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;21H{ "color": "red", "value": "OFF" }[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H][15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;19H][15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H}[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;17H}[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H}[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;15H}[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H][15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H][15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H}[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H}[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H][15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H][15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H},[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H},[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H{[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H{[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"type": "timeseries",[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"type": "timeseries",[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"targets": [{[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"targets": [{[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devi[37;1H[1m[34m@                                                                                                                                     [15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devi[37;1H[1m[34m@                                                                                                                                     [15;15H[?25h[?25l[15;37r[m[37;1H
[1;38r[36;1H        "rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[37;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[15;15H[?25h[?25l[15;37r[m[37;1H
[1;38r[36;1H        "rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[37;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"format": "time_series",[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"format": "time_series",[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"refId": "A"[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"refId": "A"[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}],[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}],[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"options": {[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"options": {[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"legend": {[15;21H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"legend": {[15;21H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"displayMode": "list",[15;21H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"displayMode": "list",[15;21H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"placement": "bottom"[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"placement": "bottom"[15;19H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;17H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H},[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H},[15;15H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"fieldConfig": {[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H"fieldConfig": {[15;13H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"defaults": {[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"defaults": {[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"unit": "watt"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"unit": "watt"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H}[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H}[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;3H],[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;3H],[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;3H"templating": {[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;3H"templating": {[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H"list": [[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H"list": [[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H{[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H{[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"name": "userId",[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"name": "userId",[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"label": "User ID",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"label": "User ID",[15;9H[?25h[?25l[15;37r[15;1H[2M[1;38r[36;9H"type": "query",[37;9H"datasource": "SHEMS-MySQL",[15;9H[?25h[?25l[15;37r[15;1H[2M[1;38r[36;9H"type": "query",[37;9H"datasource": "SHEMS-MySQL",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"current": {[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"current": {[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"selected": false,[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"selected": false,[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"text": "",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"text": "",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"value": ""[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"value": ""[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H},[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H},[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H{[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H{[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"name": "deviceId",[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"name": "deviceId",[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"label": "Device",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"label": "Device",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"type": "query",[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"type": "query",[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"current": {[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H"current": {[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"selected": false,[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"selected": false,[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"text": "",[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"text": "",[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"value": ""[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;11H"value": ""[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9H}[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;7H}[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H][15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;5H][15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;3H}[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;3H}[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;1H}[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;1H}[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;1HEOF[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;1HEOF[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;1H# Import dashboards using Grafana API[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;1H# Import dashboards using Grafana API[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;1Hfor dashboard in "$DASHBOARD_DIR"/*.json; do[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;1Hfor dashboard in "$DASHBOARD_DIR"/*.json; do[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hdashboard_name=$(basename "$dashboard" .json)[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hdashboard_name=$(basename "$dashboard" .json)[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hecho "Importing dashboard: $dashboard_name"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hecho "Importing dashboard: $dashboard_name"[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hfor i in {1..5}; do[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hfor i in {1..5}; do[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H-H "Content-Type: application/json" \[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H-H "Content-Type: application/json" \[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H-d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H-d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H-u admin:admin)[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13H-u admin:admin)[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9Hif echo "$RESPONSE" | grep -q '"status":"success"'; then[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;9Hif echo "$RESPONSE" | grep -q '"status":"success"'; then[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hecho "Dashboard $dashboard_name imported successfully"[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hecho "Dashboard $dashboard_name imported successfully"[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hbreak[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hbreak[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;9Helse[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;9Helse[15;11H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hecho "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hecho "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."[15;9H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hsleep 3[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hsleep 3[15;7H[?25h[?25l[15;37r[37;1H
[1;38r[37;9Hfi[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;9Hfi[15;5H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hdone[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;5Hdone[15;3H[?25h[?25l[15;37r[37;1H
[1;38r[37;1Hdone[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;1Hdone[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;1Hecho "Grafana deployment completed at $(date)"[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;1Hecho "Grafana deployment completed at $(date)"[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;4H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;4H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;8H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;8H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;13H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;9H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;5H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l[15;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [15;1H[?25h[?25l~                                                                                                                                     [14;1H[?25h[?25l~                                                                                                                                     [14;1H[?25h[?25l~                                                                                                                                     [13;1H[?25h[?25l~                                                                                                                                     [13;1H[?25h[?25l~                                                                                                                                     [12;1H[?25h[?25l~                                                                                                                                     [12;1H[?25h[?25l~                                                                                                                                     [11;1H[?25h[?25l~                                                                                                                                     [11;1H[?25h[?25l~                                                                                                                                     [10;1H[?25h[?25l~                                                                                                                                     [10;1H[?25h[?25l~                                                                                                                                     [9;1H[?25h[?25l~                                                                                                                                     [9;1H[?25h[?25l~                                                                                                                                     [8;1H[?25h[?25l~                                                                                                                                     [8;1H[?25h[?25l~                                                                                                                                     [7;1H[?25h[?25l~                                                                                                                                     [7;1H[?25h[?25l~                                                                                                                                     [6;1H[?25h[?25l~                                                                                                                                     [6;1H[?25h[?25l~                                                                                                                                     [5;5H[?25h[?25l~                                                                                                                                     [5;5H[?25h[?25l~                                                                                                                                     [4;9H[?25h[?25l~                                                                                                                                     [4;9H[?25h[?25l~                                                                                                                                     [3;9H[?25h[?25l~                                                                                                                                     [3;9H[?25h[?25l~                                                                                                                                     [2;5H[?25h[?25l~                                                                                                                                     [2;5H[?25h[?25l~                                                                                                                                     [1;9H[?25h[?25l~                                                                                                                                     [1;9H[?25h[?25l[mecho "Data source already exists"[1;9H[?25h[?25l[mecho "Data source already exists"[1;9H[?25h[?25lelif echo "$RESPONSE" | grep -q "already exists"; then    [?25h[?25lelif echo "$RESPONSE" | grep -q "already exists"; then    [?25h[?25l    break[1;15H[K[1;9H[?25h[?25l    break[1;15H[K[1;9H[?25h[?25lecho "Data source configured successfully"[1;9H[?25h[?25lecho "Data source configured successfully"[1;9H[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hqq!![?25l[?2004l[>4;m[?25l[?2004l[>4;m[23;2t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m llss  --llrrtthh  
[?2004l
[?2004ltotal 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
total 44K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvii  [7mshems_deploy_grafana.sh[27m[7mshems_deploy_grafana.sh[27mshems_deploy_grafana.shshems_deploy_grafana.sh
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh" 263 lines, 7258 bytes 263 lines, 7258 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25hww[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25hqq!![?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ss  [K[K[K[Kllss  --aallrrtthh  
[?2004l
[?2004ltotal 64K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rw-r--r-- 1 shems-mis shems-mis  12K Apr 18 15:54 .shems_deploy_interface.sh.swp
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 20:56 .
total 64K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rw-r--r-- 1 shems-mis shems-mis  12K Apr 18 15:54 .shems_deploy_interface.sh.swp
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 20:56 .
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m rrmm  --rrff  [7m.shems_deploy_interface.sh.swp[27m[7m.shems_deploy_interface.sh.swp[27m.shems_deploy_interface.sh.swp
[?2004l.shems_deploy_interface.sh.swp
[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m llss  --aallrrtthh  
[?2004l
[?2004ltotal 52K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 20:56 .
total 52K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 20:39 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 20:56 .
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvii  [7mshems_deploy_grafana.sh[27m[7mshems_deploy_grafana.sh[27mshems_deploy_grafana.shshems_deploy_grafana.sh
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh" 263 lines, 7258 bytes 263 lines, 7258 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m







































































[?25l[1;37r[37;1H
[1;38r[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;1Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Grafana is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Grafana is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create data source configuration[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create data source configuration[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"type": "mysql",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"type": "mysql",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"database": "$DB_NAME",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"database": "$DB_NAME",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"user": "$DB_USER",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"user": "$DB_USER",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"password": "$DB_PASS",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"password": "$DB_PASS",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"access": "proxy",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"access": "proxy",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"isDefault": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"jsonData": {[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxOpenConns": 10,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"maxIdleConns": 5,[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Configure data source using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..10}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H-u admin:admin)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Data source already exists"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;5Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Dashboard files[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create device details dashboard[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;1H{[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"panels": [[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"panels": [[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[35;1H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[35;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "table",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{ "color": "green", "value": null },[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{ "color": "green", "value": null },[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{ "color": "red", "value": 1000 }[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{ "color": "red", "value": 1000 }[?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Energy"[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Energy"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "unit",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "unit",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": "kwh"[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": "kwh"[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[?25h[?25l[1;37r[1;1H[3M[1;38r[35;15H"options": "Status"[36;13H},[37;13H"properties": [[35;1H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;15H"options": "Status"[36;13H},[37;13H"properties": [[35;1H[?25h



[?25l[1;37r[37;1H
[1;38r[37;15H{[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "color",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "color",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "thresholds",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "thresholds",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"steps": [[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"steps": [[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{ "color": "green", "value": null },[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{ "color": "green", "value": null },[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{ "color": "red", "value": "OFF" }[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{ "color": "red", "value": "OFF" }[?25h[?25l[1;37r[37;1H
[1;38r[37;19H][?25h[?25l[1;37r[37;1H
[1;38r[37;19H][?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H][?25h[?25l[1;37r[37;1H
[1;38r[37;9H][?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "timeseries",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "timeseries",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [{[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[37;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[37;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "time_series",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"format": "time_series",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refId": "A"[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"legend": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"legend": {[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"displayMode": "list",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"displayMode": "list",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"placement": "bottom"[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"placement": "bottom"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"templating": {[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"templating": {[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"list": [[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"list": [[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "userId",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "userId",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "User ID",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "User ID",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"current": {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"current": {[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"selected": false,[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"selected": false,[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"text": "",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"text": "",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"value": ""[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"value": ""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "deviceId",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "deviceId",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "Device",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "Device",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H"current": {[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H"current": {[36;1H[?25h

[?25l[1;37r[37;1H
[1;38r[37;11H"selected": false,[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"selected": false,[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"text": "",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"text": "",[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"value": ""[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"value": ""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;3H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1HEOF[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Import dashboards using Grafana API[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor dashboard in "$DASHBOARD_DIR"/*.json; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor dashboard in "$DASHBOARD_DIR"/*.json; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_name=$(basename "$dashboard" .json)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_name=$(basename "$dashboard" .json)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Importing dashboard: $dashboard_name"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Importing dashboard: $dashboard_name"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor i in {1..5}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor i in {1..5}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;9HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-u admin:admin)[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-u admin:admin)[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif echo "$RESPONSE" | grep -q '"status":"success"'; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif echo "$RESPONSE" | grep -q '"status":"success"'; then[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Dashboard $dashboard_name imported successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Dashboard $dashboard_name imported successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;9Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana deployment completed at $(date)"[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;8H[25;8H[24;1H[24;1H[23;1H[23;1H[22;1H[22;1H[21;1H[21;1H[20;1H[20;1H[19;1H[19;1H[18;1H[18;1H[17;1H[17;1H[16;1H[16;1H[15;1H[15;1H[14;1H[14;1H[13;1H[13;1H[12;1H[12;1H[11;1H[11;1H[10;1H[10;1H[9;1H[9;1H[8;1H[8;1H[7;1H[7;1H[6;1H[6;1H[5;1H[5;1H[4;1H[4;1H[3;1H[3;1H[2;1H[2;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;9H"name": "deviceId",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"name": "deviceId",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"value": ""[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"value": ""[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"text": "",[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"text": "",[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"selected": false,[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"selected": false,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"current": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"current": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"type": "query",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"type": "query",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"label": "User ID",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"label": "User ID",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"name": "userId",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"name": "userId",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"list": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"list": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"templating": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"templating": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"unit": "watt"[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"unit": "watt"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"defaults": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"defaults": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"fieldConfig": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"fieldConfig": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"placement": "bottom"[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"placement": "bottom"[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"displayMode": "list",[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"displayMode": "list",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"legend": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"legend": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"options": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"options": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}],[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}],[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"refId": "A"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"refId": "A"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"format": "time_series",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"format": "time_series",[?25h[?25l[1;37r[1;1H[2L[1;38r[1;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[2;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[2;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"targets": [{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"targets": [{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"type": "timeseries",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"type": "timeseries",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"title": "Device Power Consumption",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"title": "Device Power Consumption",[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H][?25h[?25l[1;37r[1;1H[L[1;38r[1;9H][?25h[?25l[1;37r[1;1H[L[1;38r[1;11H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H][?25h[?25l[1;37r[1;1H[L[1;38r[1;13H][?25h[?25l[1;37r[1;1H[L[1;38r[1;15H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;19H][?25h[?25l[1;37r[1;1H[L[1;38r[1;19H][?25h[?25l[1;37r[1;1H[L[1;38r[1;21H{ "color": "red", "value": "OFF" }[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H{ "color": "red", "value": "OFF" }[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H{ "color": "green", "value": null },[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H{ "color": "green", "value": null },[?25h[?25l[1;37r[1;1H[L[1;38r[1;19H"steps": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;19H"steps": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;19H"mode": "palette-classic",[?25h[?25l[1;37r[1;1H[L[1;38r[1;19H"mode": "palette-classic",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"value": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"value": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"id": "thresholds",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"id": "thresholds",[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;19H"mode": "thresholds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;19H"mode": "thresholds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"value": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"value": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"id": "color",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"id": "color",[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"properties": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"properties": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"options": "Status"[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"options": "Status"[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"id": "byName",[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"id": "byName",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"matcher": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"matcher": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H][?25h[?25l[1;37r[1;1H[L[1;38r[1;13H][?25h[?25l[1;37r[1;1H[L[1;38r[1;15H}[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H}[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;17H"value": "kwh"[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;17H"value": "kwh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"id": "unit",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"id": "unit",[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"properties": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"properties": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"options": "Energy"[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"options": "Energy"[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"id": "byName",[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H"id": "byName",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"matcher": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"matcher": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"overrides": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"overrides": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H][?25h[?25l[1;37r[1;1H[L[1;38r[1;13H][?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{ "color": "red", "value": 1000 }[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{ "color": "red", "value": 1000 }[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{ "color": "green", "value": null },[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{ "color": "green", "value": null },[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"steps": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"steps": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"mode": "absolute",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"mode": "absolute",[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"thresholds": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"thresholds": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"unit": "watt",[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"unit": "watt",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"defaults": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"defaults": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"fieldConfig": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"fieldConfig": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"sortBy": "power"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"sortBy": "power"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"showHeader": true,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"showHeader": true,[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"options": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"options": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}],[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H}],[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"refId": "A"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"refId": "A"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"format": "table",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"format": "table",[?25h[?25l[1;37r[1;1H[3L[1;38r[1;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[2;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[3;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[1;1H[?25h[?25l[1;37r[1;1H[3L[1;38r[1;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[2;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[3;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"targets": [{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"targets": [{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"datasource": "SHEMS-MySQL",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"type": "table",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"type": "table",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"title": "Device Status",[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"title": "Device Status",[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"panels": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"panels": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"timezone": "browser",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"timezone": "browser",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"title": "Device Details",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"title": "Device Details",[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcat > "$DASHBOARD_DIR/device-details.json" << 'EOF'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create device details dashboard[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create device details dashboard[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$DASHBOARD_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Dashboard files[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Dashboard files[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Importing Grafana dashboards..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Import dashboards[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Import dashboards[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsleep 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsleep 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Attempt $i: Failed to configure data source, retrying..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source already exists"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source already exists"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-u admin:admin)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-u admin:admin)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-d "$DATASOURCE_JSON" \[36;1H[1m[34m@                                                                                                                                     [37;1H@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-d "$DATASOURCE_JSON" \[36;1H[1m[34m@                                                                                                                                     [37;1H@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..10}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..10}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure data source using Grafana API[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure data source using Grafana API[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HEOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HEOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxIdleConns": 5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxIdleConns": 5,[?25h







































































[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": ["energy", "monitoring", "devices"],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[?25l[32;37r[37;1H
[1;38r[37;3H"panels": [[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;3H"panels": [[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H{[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H{[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"title": "Device Status",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"title": "Device Status",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"type": "table",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"type": "table",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 0, "w": 24, "h": 8},[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"targets": [{[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"targets": [{[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceU[37;1H[1m[34m@                                                                                                                                     [32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceU[37;1H[1m[34m@                                                                                                                                     [32;7H[?25h[?25l[32;37r[m[37;1H
[1;38r[37;1H[1m[34m@                                                                                                                                     [32;7H[?25h[?25l[32;37r[m[37;1H
[1;38r[37;1H[1m[34m@                                                                                                                                     [32;7H[?25h[?25l[32;37r[m[37;1H
[1;38r[35;1H        "rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[32;7H[?25h[?25l[32;37r[m[37;1H
[1;38r[35;1H        "rawSql": "SELECT di.DeviceName, di.DeviceType, dud.Power_Consmpt as power, dud.Energy, dud.Status, dud.Timestamp FROM DeviceUU[36;1HtilData dud JOIN DeviceInfo di ON dud.DeviceId = di.DeviceId WHERE di.UserId = $userId AND dud.Timestamp = (SELECT MAX(Timestamp) FROMM[37;1H DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"format": "table",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"format": "table",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"refId": "A"[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"refId": "A"[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}],[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}],[32;9H[?25h[?25l[32;37r[32;1H[3M[1;38r[35;7H"options": {[36;9H"showHeader": true,[37;9H"sortBy": "power"[32;9H[?25h[?25l[32;37r[32;1H[3M[1;38r[35;7H"options": {[36;9H"showHeader": true,[37;9H"sortBy": "power"[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H},[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H},[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"fieldConfig": {[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"fieldConfig": {[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"defaults": {[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"defaults": {[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"unit": "watt",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"unit": "watt",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"thresholds": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"thresholds": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"mode": "absolute",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"mode": "absolute",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"steps": [[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"steps": [[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{ "color": "green", "value": null },[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{ "color": "green", "value": null },[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{ "color": "red", "value": 1000 }[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{ "color": "red", "value": 1000 }[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H][32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H][32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H}[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H}[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H},[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H},[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"overrides": [[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"overrides": [[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H{[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H{[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"matcher": {[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"matcher": {[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"id": "byName",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"id": "byName",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"options": "Energy"[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"options": "Energy"[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H},[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H},[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"properties": [[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"properties": [[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"id": "unit",[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"id": "unit",[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"value": "kwh"[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"value": "kwh"[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H}[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H}[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H][32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H][32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H},[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H},[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H{[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H{[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"matcher": {[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"matcher": {[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"id": "byName",[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"id": "byName",[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"options": "Status"[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H"options": "Status"[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H},[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H},[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"properties": [[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H"properties": [[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"id": "color",[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"id": "color",[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"value": {[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"value": {[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H}[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H}[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H},[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H},[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H{[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"id": "thresholds",[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"id": "thresholds",[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"value": {[32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H"value": {[32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H"steps": [[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H"steps": [[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;21H{ "color": "green", "value": null },[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;21H{ "color": "green", "value": null },[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;21H{ "color": "red", "value": "OFF" }[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;21H{ "color": "red", "value": "OFF" }[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H][32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;19H][32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H}[32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;17H}[32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H}[32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;15H}[32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H][32;21H[?25h[?25l[32;37r[37;1H
[1;38r[37;13H][32;21H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H}[32;21H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H}[32;21H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H][32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H][32;19H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}[32;17H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H},[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H},[32;15H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H{[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H{[32;13H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"type": "timeseries",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"type": "timeseries",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"gridPos": {"x": 0, "y": 8, "w": 24, "h": 12},[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"datasource": "SHEMS-MySQL",[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"targets": [{[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"targets": [{[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devi[37;1H[1m[34m@                                                                                                                                     [32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devi[37;1H[1m[34m@                                                                                                                                     [32;7H[?25h[?25l[32;37r[m[37;1H
[1;38r[36;1H        "rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[37;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[32;7H[?25h[?25l[32;37r[m[37;1H
[1;38r[36;1H        "rawSql": "SELECT Timestamp as time, DeviceName, Power_Consmpt as power FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.Devii[37;1HceId = di.DeviceId WHERE di.UserId = $userId AND di.DeviceId = $deviceId AND $__timeFilter(Timestamp) ORDER BY time",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"format": "time_series",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"format": "time_series",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"refId": "A"[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"refId": "A"[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}],[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}],[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"options": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"options": {[32;9H[?25h[?25l[32;37r[32;1H[2M[1;38r[36;9H"legend": {[37;11H"displayMode": "list",[32;9H[?25h[?25l[32;37r[32;1H[2M[1;38r[36;9H"legend": {[37;11H"displayMode": "list",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"placement": "bottom"[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"placement": "bottom"[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H},[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H},[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"fieldConfig": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H"fieldConfig": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"defaults": {[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"defaults": {[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"unit": "watt"[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"unit": "watt"[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H}[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H}[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;3H],[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;3H],[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;3H"templating": {[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;3H"templating": {[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H"list": [[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H"list": [[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H{[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H{[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"name": "userId",[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"name": "userId",[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"label": "User ID",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"label": "User ID",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"type": "query",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"type": "query",[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"current": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"current": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"selected": false,[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"selected": false,[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"text": "",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"text": "",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"value": ""[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"value": ""[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H},[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H},[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H{[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H{[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"name": "deviceId",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"name": "deviceId",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"label": "Device",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"label": "Device",[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"type": "query",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"type": "query",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"datasource": "SHEMS-MySQL",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"current": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H"current": {[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"selected": false,[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"selected": false,[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"text": "",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"text": "",[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"value": ""[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;11H"value": ""[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;9H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;7H}[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H][32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;5H][32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;3H}[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;3H}[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;1H}[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;1H}[32;11H[?25h[?25l[32;37r[37;1H
[1;38r[37;1HEOF[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[37;1HEOF[32;9H[?25h[?25l[32;37r[37;1H
[1;38r[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[32;7H[?25h[?25l[32;37r[37;1H
[1;38r[37;1H# Import dashboards using Grafana API[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;1H# Import dashboards using Grafana API[32;5H[?25h[?25l[32;37r[37;1H
[1;38r[37;1Hfor dashboard in "$DASHBOARD_DIR"/*.json; do[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;1Hfor dashboard in "$DASHBOARD_DIR"/*.json; do[32;3H[?25h[?25l[32;37r[37;1H
[1;38r[37;5Hdashboard_name=$(basename "$dashboard" .json)[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;5Hdashboard_name=$(basename "$dashboard" .json)[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;5Hecho "Importing dashboard: $dashboard_name"[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;5Hecho "Importing dashboard: $dashboard_name"[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;5Hfor i in {1..5}; do[32;1H[?25h[?25l[32;37r[37;1H
[1;38r[37;5Hfor i in {1..5}; do[32;1H[?25h









[?25l[1;37r[37;1H
[1;38r[37;9HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \[?25h[?25l[1;37r[37;1H
[1;38r[37;9HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-H "Content-Type: application/json" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-u admin:admin)[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H-u admin:admin)[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif echo "$RESPONSE" | grep -q '"status":"success"'; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif echo "$RESPONSE" | grep -q '"status":"success"'; then[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Dashboard $dashboard_name imported successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Dashboard $dashboard_name imported successfully"[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;9Helse[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hecho "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsleep 3[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana deployment completed at $(date)"[?25h[36;1H[36;1H[35;1H[35;1H[34;1H[34;1H[33;1H[33;1H[32;1H[32;1H[31;1H[31;1H[30;1H[30;1H[29;1H[29;1H[28;1H[28;1H[27;1H[27;1H[26;1H[26;1H[25;8H[25;8H[24;1H[24;1H[23;1H[23;1H[22;1H[22;1H[21;1H[21;1H[20;1H[20;1H[19;1H[19;1H[18;1H[18;1H[17;1H[17;1H[16;1H[16;1H[15;1H[15;1H[14;1H[14;1H[13;1H[13;1H[12;1H[12;1H[11;1H[11;1H[10;1H[10;1H[9;1H[9;1H[8;1H[8;1H[7;1H[7;1H[6;1H[6;1H[5;1H[5;1H[4;1H[4;1H[3;1H[3;1H[2;1H[2;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Helif echo "$RESPONSE" | grep -q "already exists"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Data source configured successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif echo "$RESPONSE" | grep -q "Datasource added"; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-u admin:admin)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-u admin:admin)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-d "$DATASOURCE_JSON" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H-H "Content-Type: application/json" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..10}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..10}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure data source using Grafana API[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure data source using Grafana API[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HEOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HEOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"connMaxLifetime": 14400[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxIdleConns": 5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxIdleConns": 5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxOpenConns": 10,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"maxOpenConns": 10,[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"jsonData": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"jsonData": {[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"isDefault": true,[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"isDefault": true,[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"access": "proxy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"access": "proxy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"password": "$DB_PASS",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"password": "$DB_PASS",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"user": "$DB_USER",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"user": "$DB_USER",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"database": "$DB_NAME",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"database": "$DB_NAME",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"url": "$PI_IP:3306",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"type": "mysql",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"type": "mysql",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"name": "SHEMS-MySQLDB",[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDATASOURCE_JSON=$(cat <<EOF[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create data source configuration[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create data source configuration[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_NAME="${DB_NAME:-shems_db}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_PASS="${DB_PASS:-RAS@23}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_USER="${DB_USER:-shems_mis}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Get MySQL credentials from environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring Grafana data source..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure Grafana data source (MySQL)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana failed to start within 30 seconds"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdone[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsleep 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsleep 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hbreak[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Grafana is running"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hecho "Grafana is running"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif systemctl is-active --quiet grafana-server; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for Grafana to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for Grafana to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana is already installed"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Helse[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana installed successfully"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl start grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl start grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl enable grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo systemctl enable grafana-server[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Enable and start Grafana service[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Enable and start Grafana service[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Add Grafana repository[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Add Grafana repository[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y apt-transport-https software-properties-common wget[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get install -y apt-transport-https software-properties-common wget[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Install dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana not found. Installing..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "Grafana not found. Installing..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! command -v grafana-server &> /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif ! command -v grafana-server &> /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if Grafana is already installed[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if Grafana is already installed[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting Grafana deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting Grafana deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_grafana_deploy.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_grafana_deploy.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$LOG_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$LOG_DIR"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwqq!![?25l[?2004l[>4;m[?25l[?2004l[>4;m"shems_deploy_grafana.sh""shems_deploy_grafana.sh" 137 lines, 3730 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 137 lines, 3730 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_deploy_grafana.shvi shems_deploy_grafana.sh[16Pls -alrth [16Pls -alrth rm -rf .shems_deploy_interface.sh.swprm -rf .shems_deploy_interface.sh.swpls -alrth [Kls -alrth [Kvi shems_deploy_grafana.shvi shems_deploy_grafana.sh[17Pls -lrth [17Pls -lrth vi shems_deploy_grafana.shvi shems_deploy_grafana.sh[17Pls -lrth [17Pls -lrth [5Pcd -[5Pcd -ls -lrth ls -lrth [K[Kcd ../../grafana/*cd ../../grafana/*[9Pls -lrth [9Pls -lrth vi shems_deploy_grafana.shvi shems_deploy_grafana.shls -lrth[Kls -lrth[K. ./shems_deploy_interface.sh. ./shems_deploy_interface.sh[1Pvi shems_deploy_interface.sh[1Pvi shems_deploy_interface.sh. ./shems_deploy_interface.sh. ./shems_deploy_interface.sh
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 08:57:40 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 08:57:40 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 08:57:40 PM IST 2025
Checking for existing processes...
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
Deploying HTML templates...
Deploying Python scripts...
Deploying HTML templates...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
-bash: SCRIPT_DIR: command not found
-bash: SCRIPT_DIR: command not found
-bash: SCRIPT_DIR: command not found
-bash: /shems_deploy_grafana.sh: No such file or directory
-bash: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Starting monitoring server...
-bash: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running
Server is running


Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000

  - Web Interface (Tailscale): http://100.97.72.36:5000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000

  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
Grafana credentials: admin/admin (change this after first login)

  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
Log files are available in: /app/smarthome/data/logs

Grafana credentials: admin/admin (change this after first login)


Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 08:57:53 PM IST 2025
Deployment completed at Fri Apr 18 08:57:53 PM IST 2025
Deployment completed at Fri Apr 18 08:57:53 PM IST 2025
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lslsls   ---lllrrrttthhhaaa   
[?2004l
[?2004l
[?2004ltotal 48K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 20:57 .
total 48K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 20:57 .
total 48K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 20:57 .
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27mshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh" 111 lines, 3438 bytes 111 lines, 3438 bytes 111 lines, 3438 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H

















[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H













































































[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l
:[?25h[?25l
:[?25h[?25l
:[?25hwwwqqq[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25hqqq!!![?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m sss   [K[K[K[K[K[Klllsss   aaalllrrr[K[K[K[K[K[K[K[K[K---lllaaattthhhrrr   
[?2004l
[?2004l
[?2004ltotal 48K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 21:00 .
total 48K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 21:00 .
total 48K
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 15 22:59 ..
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
drwxr-xr-x 4 shems-mis shems-mis 4.0K Apr 18 21:00 .
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccddd   ......///......///dddaaatttaaa///lllooogggsss
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m lllsss   lllrrr[K[K[K[K[K[Klllrrrttt[K[K[K[K[K[K[K[K[K---lllrrrttt   
[?2004l
[?2004l
[?2004ltotal 448
-rw-r--r-- 1 shems-mis shems-mis  28016 Apr 18 20:16 shems_grafana_deploy.log
-rw-r--r-- 1 shems-mis shems-mis   5921 Apr 18 20:58 shems_simulation.log
-rw-r--r-- 1 shems-mis shems-mis  60488 Apr 18 21:00 shems_server.log
-rw-r--r-- 1 shems-mis shems-mis 346890 Apr 18 21:01 shems_deployment.log
total 448
-rw-r--r-- 1 shems-mis shems-mis  28016 Apr 18 20:16 shems_grafana_deploy.log
-rw-r--r-- 1 shems-mis shems-mis   5921 Apr 18 20:58 shems_simulation.log
-rw-r--r-- 1 shems-mis shems-mis  60488 Apr 18 21:00 shems_server.log
-rw-r--r-- 1 shems-mis shems-mis 346890 Apr 18 21:01 shems_deployment.log
total 448
-rw-r--r-- 1 shems-mis shems-mis  28016 Apr 18 20:16 shems_grafana_deploy.log
-rw-r--r-- 1 shems-mis shems-mis   5921 Apr 18 20:58 shems_simulation.log
-rw-r--r-- 1 shems-mis shems-mis  60488 Apr 18 21:00 shems_server.log
-rw-r--r-- 1 shems-mis shems-mis 346890 Apr 18 21:01 shems_deployment.log
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m tttaaaiiilll   ---fff   [7mshems_server.log[27m[7mshems_server.log[27m[7mshems_server.log[27mshems_server.log
[?2004lshems_server.log
[?2004lshems_server.log
[?2004l2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -



[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m tttaaaiiilll   ---555000   [7mshems_server.log[27m[7mshems_server.log[27m[7mshems_server.log[27mshems_server.log
[?2004lshems_server.log
[?2004lshems_server.log
[?2004l2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,458 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:58:43,485 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:58:44,130 - SHEMS-Simulator - INFO - Generated data for device 33 (Smart Light #1)
2025-04-18 20:58:44,745 - SHEMS-Simulator - INFO - Generated data for device 34 (Ceiling Light #2)
2025-04-18 20:58:45,334 - SHEMS-Simulator - INFO - Generated data for device 35 (Refrigerator #3)
2025-04-18 20:58:45,937 - SHEMS-Simulator - INFO - Generated data for device 36 (Lamp #4)
2025-04-18 20:58:45,944 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,458 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:58:43,485 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:58:44,130 - SHEMS-Simulator - INFO - Generated data for device 33 (Smart Light #1)
2025-04-18 20:58:44,745 - SHEMS-Simulator - INFO - Generated data for device 34 (Ceiling Light #2)
2025-04-18 20:58:45,334 - SHEMS-Simulator - INFO - Generated data for device 35 (Refrigerator #3)
2025-04-18 20:58:45,937 - SHEMS-Simulator - INFO - Generated data for device 36 (Lamp #4)
2025-04-18 20:58:45,944 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,458 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:58:43,485 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:58:44,130 - SHEMS-Simulator - INFO - Generated data for device 33 (Smart Light #1)
2025-04-18 20:58:44,745 - SHEMS-Simulator - INFO - Generated data for device 34 (Ceiling Light #2)
2025-04-18 20:58:45,334 - SHEMS-Simulator - INFO - Generated data for device 35 (Refrigerator #3)
2025-04-18 20:58:45,937 - SHEMS-Simulator - INFO - Generated data for device 36 (Lamp #4)
2025-04-18 20:58:45,944 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2[?2004h[?2004h025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m cccddd   ---
[?2004l/app/smarthome/dev/bin
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l/app/smarthome/dev/bin
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l/app/smarthome/dev/bin
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cd -cd -cd -tail -50 shems_server.logtail -50 shems_server.logtail -50 shems_server.log[1Pf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[16Pls -lrt [16Pls -lrt [16Pls -lrt cd ../../data/logscd ../../data/logscd ../../data/logs[8Pls -lathr [8Pls -lathr [8Pls -lathr vi shems_deploy_interface.shvi shems_deploy_interface.shvi shems_deploy_interface.sh[18Pls -lrtha [18Pls -lrtha [18Pls -lrtha . ./shems_deploy_interface.sh. ./shems_deploy_interface.sh. ./shems_deploy_interface.sh[3Pvi shems_deploy_grafana.sh[3Pvi shems_deploy_grafana.sh[3Pvi shems_deploy_grafana.sh[16Pls -alrth [16Pls -alrth [16Pls -alrth rm -rf .shems_deploy_interface.sh.swprm -rf .shems_deploy_interface.sh.swprm -rf .shems_deploy_interface.sh.swp[K[K[K
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccddd   ......///ttteeemmmppplllaaattteeesss
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m lllsss   ---lllrrrttthhh   


[?2004l[?2004l[?2004ltotal 20K
-rwxr-xr-x 1 shems-mis shems-mis 3.9K Apr 15 23:43 shems_dashboard_input.html
-rwxr-xr-x 1 shems-mis shems-mis 8.8K Apr 15 23:44 shems_dashboard_visuals.html
-rwxr-xr-x 1 shems-mis shems-mis 1.3K Apr 18 17:52 error.html
total 20K
-rwxr-xr-x 1 shems-mis shems-mis 3.9K Apr 15 23:43 shems_dashboard_input.html
-rwxr-xr-x 1 shems-mis shems-mis 8.8K Apr 15 23:44 shems_dashboard_visuals.html
-rwxr-xr-x 1 shems-mis shems-mis 1.3K Apr 18 17:52 error.html
total 20K
-rwxr-xr-x 1 shems-mis shems-mis 3.9K Apr 15 23:43 shems_dashboard_input.html
-rwxr-xr-x 1 shems-mis shems-mis 8.8K Apr 15 23:44 shems_dashboard_visuals.html
-rwxr-xr-x 1 shems-mis shems-mis 1.3K Apr 18 17:52 error.html
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m cccaaattt   [7mshems_dashboard_visuals.html[27m[7mshems_dashboard_visuals.html[27m[7mshems_dashboard_visuals.html[27mshems_dashboard_visuals.html
[?2004lshems_dashboard_visuals.html
[?2004lshems_dashboard_visuals.html
[?2004l<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHEMS - Energy Monitoring</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background-color: #343a40;
            color: white;
            padding: 1rem 0;
            margin-bottom: 2rem;
        }
        .greeting {
            font-size: 1.2rem;
        }
        .grafana-container {
            height: 600px;
            width: 100%;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 2rem;
        }
        .device-summary {
            margin-bottom: 2rem;
        }
        .nav-tabs {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1>Smart Home Energy Monitoring</h1>
                    <p class="greeting">Welcome back, <span id="username-display"></span>!</p>
                </div>
                <div class="col-md-6 text-end">
                    <p id="current-date" class="mb-0"></p>
                    <p class="mb-0"><small>System Time: <span id="current-time"></span></small></p>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="system-info alert alert-info">
            <div class="row">
                <div class="col-md-6">
                    <h5>System Information</h5>
                    <div id="access-points"></div>
                    <div id="tailscale-info"></div>
                </div>
                <div class="col-md-6 text-end">
                    <button id="refresh-btn" class="btn btn-sm btn-outline-primary me-2">Refresh Data</button>
                    <button id="logout-btn" class="btn btn-sm btn-outline-danger">Logout</button>
                </div>
            </div>
        </div>

        <div class="device-summary">
            <h3>Device Summary</h3>
            <div class="row">
                <div class="col-md-3">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Total Devices</h5>
                            <p class="card-text display-4" id="total-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Active Now</h5>
                            <p class="card-text display-4" id="active-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Power Usage</h5>
                            <p class="card-text display-4" id="total-power">0 <small>W</small></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Energy Today</h5>
                            <p class="card-text display-4" id="total-energy">0 <small>kWh</small></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">Overview</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="power-tab" data-bs-toggle="tab" data-bs-target="#power" type="button" role="tab">Power Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="energy-tab" data-bs-toggle="tab" data-bs-target="#energy" type="button" role="tab">Energy Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="devices-tab" data-bs-toggle="tab" data-bs-target="#devices" type="button" role="tab">Device Details</button>
            </li>
        </ul>

        <div class="tab-content" id="dashboardTabsContent">
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="grafana-container" id="overview-grafana"></div>
            </div>
            <div class="tab-pane fade" id="power" role="tabpanel">
                <div class="grafana-container" id="power-grafana"></div>
            </div>
            <div class="tab-pane fade" id="energy" role="tabpanel">
                <div class="grafana-container" id="energy-grafana"></div>
            </div>
            <div class="tab-pane fade" id="devices" role="tabpanel">
                <div class="grafana-container" id="devices-grafana"></div>
            </div>
        </div>

        <footer class="text-center mt-5 mb-3 text-muted">
            <p>Created by BITS MIS | <span id="last-updated"></span></p>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Update date and time
        function updateDateTime() {
            const now = new Date();
            document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
            });
            document.getElementById('current-time').textContent = now.toLocaleTimeString();
            document.getElementById('last-updated').textContent = `Last updated: ${now.toLocaleString()}`;
        }
        
        setInterval(updateDateTime, 1000);
        updateDateTime();
        
        // Get user data from session
        fetch('/api/user-data')
            .then(response => response.json())
            .then(data => {
                document.getElementById('username-display').textContent = data.username;
                document.getElementById('total-devices').textContent = data.total_devices;
                document.getElementById('active-devices').textContent = data.active_devices;
                document.getElementById('total-power').textContent = data.total_power;
                document.getElementById('total-energy').textContent = data.total_energy;
                
                // Load Grafana dashboards
                loadGrafanaDashboard('overview-grafana', data.grafana_overview_url);
                loadGrafanaDashboard('power-grafana', data.grafana_power_url);
                loadGrafanaDashboard('energy-grafana', data.grafana_energy_url);
                loadGrafanaDashboard('devices-grafana', data.grafana_devices_url);
            });
        
        // Fetch and display access points
        fetch('/api/access-points')
            .then(response => response.json())
            .then(data => {
                const accessPointsDiv = document.getElementById('access-points');
                const tailscaleInfoDiv = document.getElementById('tailscale-info');
                
                let accessPointsHTML = '<p><strong>Access Points:</strong> ';
                accessPointsHTML += data.access_points.join(', ');
                accessPointsHTML += '</p>';
                
                accessPointsDiv.innerHTML = accessPointsHTML;
                
                if (data.tailscale_ip) {
                    tailscaleInfoDiv.innerHTML = `<p><strong>Tailscale IP:</stro<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHEMS - Energy Monitoring</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background-color: #343a40;
            color: white;
            padding: 1rem 0;
            margin-bottom: 2rem;
        }
        .greeting {
            font-size: 1.2rem;
        }
        .grafana-container {
            height: 600px;
            width: 100%;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 2rem;
        }
        .device-summary {
            margin-bottom: 2rem;
        }
        .nav-tabs {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1>Smart Home Energy Monitoring</h1>
                    <p class="greeting">Welcome back, <span id="username-display"></span>!</p>
                </div>
                <div class="col-md-6 text-end">
                    <p id="current-date" class="mb-0"></p>
                    <p class="mb-0"><small>System Time: <span id="current-time"></span></small></p>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="system-info alert alert-info">
            <div class="row">
                <div class="col-md-6">
                    <h5>System Information</h5>
                    <div id="access-points"></div>
                    <div id="tailscale-info"></div>
                </div>
                <div class="col-md-6 text-end">
                    <button id="refresh-btn" class="btn btn-sm btn-outline-primary me-2">Refresh Data</button>
                    <button id="logout-btn" class="btn btn-sm btn-outline-danger">Logout</button>
                </div>
            </div>
        </div>

        <div class="device-summary">
            <h3>Device Summary</h3>
            <div class="row">
                <div class="col-md-3">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Total Devices</h5>
                            <p class="card-text display-4" id="total-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Active Now</h5>
                            <p class="card-text display-4" id="active-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Power Usage</h5>
                            <p class="card-text display-4" id="total-power">0 <small>W</small></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Energy Today</h5>
                            <p class="card-text display-4" id="total-energy">0 <small>kWh</small></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">Overview</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="power-tab" data-bs-toggle="tab" data-bs-target="#power" type="button" role="tab">Power Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="energy-tab" data-bs-toggle="tab" data-bs-target="#energy" type="button" role="tab">Energy Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="devices-tab" data-bs-toggle="tab" data-bs-target="#devices" type="button" role="tab">Device Details</button>
            </li>
        </ul>

        <div class="tab-content" id="dashboardTabsContent">
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="grafana-container" id="overview-grafana"></div>
            </div>
            <div class="tab-pane fade" id="power" role="tabpanel">
                <div class="grafana-container" id="power-grafana"></div>
            </div>
            <div class="tab-pane fade" id="energy" role="tabpanel">
                <div class="grafana-container" id="energy-grafana"></div>
            </div>
            <div class="tab-pane fade" id="devices" role="tabpanel">
                <div class="grafana-container" id="devices-grafana"></div>
            </div>
        </div>

        <footer class="text-center mt-5 mb-3 text-muted">
            <p>Created by BITS MIS | <span id="last-updated"></span></p>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Update date and time
        function updateDateTime() {
            const now = new Date();
            document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
            });
            document.getElementById('current-time').textContent = now.toLocaleTimeString();
            document.getElementById('last-updated').textContent = `Last updated: ${now.toLocaleString()}`;
        }
        
        setInterval(updateDateTime, 1000);
        updateDateTime();
        
        // Get user data from session
        fetch('/api/user-data')
            .then(response => response.json())
            .then(data => {
                document.getElementById('username-display').textContent = data.username;
                document.getElementById('total-devices').textContent = data.total_devices;
                document.getElementById('active-devices').textContent = data.active_devices;
                document.getElementById('total-power').textContent = data.total_power;
                document.getElementById('total-energy').textContent = data.total_energy;
                
                // Load Grafana dashboards
                loadGrafanaDashboard('overview-grafana', data.grafana_overview_url);
                loadGrafanaDashboard('power-grafana', data.grafana_power_url);
                loadGrafanaDashboard('energy-grafana', data.grafana_energy_url);
                loadGrafanaDashboard('devices-grafana', data.grafana_devices_url);
            });
        
        // Fetch and display access points
        fetch('/api/access-points')
            .then(response => response.json())
            .then(data => {
                const accessPointsDiv = document.getElementById('access-points');
                const tailscaleInfoDiv = document.getElementById('tailscale-info');
                
                let accessPointsHTML = '<p><strong>Access Points:</strong> ';
                accessPointsHTML += data.access_points.join(', ');
                accessPointsHTML += '</p>';
                
                accessPointsDiv.innerHTML = accessPointsHTML;
                
                if (data.tailscale_ip) {
                    tailscaleInfoDiv.innerHTML = `<p><strong>Tailscale IP:</strong> ${data.tailscale_ip}</p>`;
                }
            });
        
        function loadGrafanaDashboard(containerId, url) {
            const container = document.getElementById(containerId);
            if (container && url) {
                container.innerHTML = `<iframe src="${url}" width="100%" height="100%" frameborder="0"></iframe>`;
            }
        }
        
        document.getElementById('refresh-btn').addEventListener('click', () => {
            location.reload();
        });
        
        document.getElementById('logout-btn').addEventListener('click', () => {
            fetch('/logout', { method: 'POST' })
                .then(() => {
                    window.location.href = '/';
                });
        });
    </script>
</body>
</html>
ng> ${data.tailscale_ip}</p>`;
                }
            });
        
        function loadGrafanaDashboard(containerId, url) {
            const container = document.getElementById(containerId);
            if (container && url) {
                container.innerHTML = `<iframe src="${url}" width="100%" height="100%" frameborder="0"></iframe>`;
            }
        }
        
        document.getElementById('refresh-btn').addEventListener('click', () => {
            location.reload();
        });
        
        document.getElementById('logout-btn').addEventListener('click', () => {
            fetch('/logout', { method: 'POST' })
                .then(() => {
                    window.location.href = '/';
                });
        });
    </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHEMS - Energy Monitoring</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background-color: #343a40;
            color: white;
            padding: 1rem 0;
            margin-bottom: 2rem;
        }
        .greeting {
            font-size: 1.2rem;
        }
        .grafana-container {
            height: 600px;
            width: 100%;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 2rem;
        }
        .device-summary {
            margin-bottom: 2rem;
        }
        .nav-tabs {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1>Smart Home Energy Monitoring</h1>
                    <p class="greeting">Welcome back, <span id="username-display"></span>!</p>
                </div>
                <div class="col-md-6 text-end">
                    <p id="current-date" class="mb-0"></p>
                    <p class="mb-0"><small>System Time: <span id="current-time"></span></small></p>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="system-info alert alert-info">
            <div class="row">
                <div class="col-md-6">
                    <h5>System Information</h5>
                    <div id="access-points"></div>
                    <div id="tailscale-info"></div>
                </div>
                <div class="col-md-6 text-end">
                    <button id="refresh-btn" class="btn btn-sm btn-outline-primary me-2">Refresh Data</button>
                    <button id="logout-btn" class="btn btn-sm btn-outline-danger">Logout</button>
                </div>
            </div>
        </div>

        <div class="device-summary">
            <h3>Device Summary</h3>
            <div class="row">
                <div class="col-md-3">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Total Devices</h5>
                            <p class="card-text display-4" id="total-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Active Now</h5>
                            <p class="card-text display-4" id="active-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Power Usage</h5>
                            <p class="card-text display-4" id="total-power">0 <small>W</small></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Energy Today</h5>
                            <p class="card-text display-4" id="total-energy">0 <small>kWh</small></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">Overview</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="power-tab" data-bs-toggle="tab" data-bs-target="#power" type="button" role="tab">Power Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="energy-tab" data-bs-toggle="tab" data-bs-target="#energy" type="button" role="tab">Energy Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="devices-tab" data-bs-toggle="tab" data-bs-target="#devices" type="button" role="tab">Device Details</button>
            </li>
        </ul>

        <div class="tab-content" id="dashboardTabsContent">
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="grafana-container" id="overview-grafana"></div>
            </div>
            <div class="tab-pane fade" id="power" role="tabpanel">
                <div class="grafana-container" id="power-grafana"></div>
            </div>
            <div class="tab-pane fade" id="energy" role="tabpanel">
                <div class="grafana-container" id="energy-grafana"></div>
            </div>
            <div class="tab-pane fade" id="devices" role="tabpanel">
                <div class="grafana-container" id="devices-grafana"></div>
            </div>
        </div>

        <footer class="text-center mt-5 mb-3 text-muted">
            <p>Created by BITS MIS | <span id="last-updated"></span></p>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Update date and time
        function updateDateTime() {
            const now = new Date();
            document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
            });
            document.getElementById('current-time').textContent = now.toLocaleTimeString();
            document.getElementById('last-updated').textContent = `Last updated: ${now.toLocaleString()}`;
        }
        
        setInterval(updateDateTime, 1000);
        updateDateTime();
        
        // Get user data from session
        fetch('/api/user-data')
            .then(response => response.json())
            .then(data => {
                document.getElementById('username-display').textContent = data.username;
                document.getElementById('total-devices').textContent = data.total_devices;
                document.getElementById('active-devices').textContent = data.active_devices;
                document.getElementById('total-power').textContent = data.total_power;
                document.getElementById('total-energy').textContent = data.total_energy;
                
                // Load Grafana dashboards
                loadGrafanaDashboard('overview-grafana', data.grafana_overview_url);
                loadGrafanaDashboard('power-grafana', data.grafana_power_url);
                loadGrafanaDashboard('energy-grafana', data.grafana_energy_url);
                loadGrafanaDashboard('devices-grafana', data.grafana_devices_url);
            });
        
        // Fetch and display access points
        fetch('/api/access-points')
            .then(response => response.json())
            .then(data => {
                const accessPointsDiv = document.getElementById('access-points');
                const tailscaleInfoDiv = document.getElementById('tailscale-info');
                
                let accessPointsHTML = '<p><strong>Access Points:</strong> ';
                accessPointsHTML += data.access_points.join(', ');
                accessPointsHTML += '</p>';
                
                accessPointsDiv.innerHTML = accessPointsHTML;
                
                if (data.tailscale_ip) {
                    tailscaleInfoDiv.innerHTML = `<p><strong>Tailscale IP:</strong> ${data.tailscale_ip}</p>`;
                }
            });
        
        function loadGrafanaDashboard(containerId, url) {
            const container = document.getElementById(containerId);
            if (container && url) {
                container.innerHTML = `<iframe src="${url}" width="100%" height="100%" frameborder="0"></iframe>`;
            }
        }
        
        document.getElementById('refresh-btn').addEventListener('click', () => {
            location.reload();
        });
        
        document.getElementById('logout-btn').addEventListener('click', () => {
            fetch('/logout', { method: 'POST' })
                .then(() => {
                    window.location.href = '/';
                });
        });
    </script>
</body>
</html>
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 20K
-rwxr-xr-x 1 shems-mis shems-mis 3.9K Apr 15 23:43 shems_dashboard_input.html
-rwxr-xr-x 1 shems-mis shems-mis 8.8K Apr 15 23:44 shems_dashboard_visuals.html
-rwxr-xr-x 1 shems-mis shems-mis 1.3K Apr 18 17:52 error.html
total 20K
-rwxr-xr-x 1 shems-mis shems-mis 3.9K Apr 15 23:43 shems_dashboard_input.html
-rwxr-xr-x 1 shems-mis shems-mis 8.8K Apr 15 23:44 shems_dashboard_visuals.html
-rwxr-xr-x 1 shems-mis shems-mis 1.3K Apr 18 17:52 error.html
total 20K
-rwxr-xr-x 1 shems-mis shems-mis 3.9K Apr 15 23:43 shems_dashboard_input.html
-rwxr-xr-x 1 shems-mis shems-mis 8.8K Apr 15 23:44 shems_dashboard_visuals.html
-rwxr-xr-x 1 shems-mis shems-mis 1.3K Apr 18 17:52 error.html
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m cccaaattt   [7mshems_dashboard_visuals.html[27m[7mshems_dashboard_visuals.html[27m[7mshems_dashboard_visuals.html[27mshems_dashboard_visuals.html
[?2004lshems_dashboard_visuals.html
[?2004lshems_dashboard_visuals.html
[?2004l<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHEMS - Energy Monitoring</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background-color: #343a40;
            color: white;
            padding: 1rem 0;
            margin-bottom: 2rem;
        }
        .greeting {
            font-size: 1.2rem;
        }
        .grafana-container {
            height: 600px;
            width: 100%;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 2rem;
        }
        .device-summary {
            margin-bottom: 2rem;
        }
        .nav-tabs {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1>Smart Home Energy Monitoring</h1>
                    <p class="greeting">Welcome back, <span id="username-display"></span>!</p>
                </div>
                <div class="col-md-6 text-end">
                    <p id="current-date" class="mb-0"></p>
                    <p class="mb-0"><small>System Time: <span id="current-time"></span></small></p>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="system-info alert alert-info">
            <div class="row">
                <div class="col-md-6">
                    <h5>System Information</h5>
                    <div id="access-points"></div>
                    <div id="tailscale-info"></div>
                </div>
                <div class="col-md-6 text-end">
                    <button id="refresh-btn" class="btn btn-sm btn-outline-primary me-2">Refresh Data</button>
                    <button id="logout-btn" class="btn btn-sm btn-outline-danger">Logout</button>
                </div>
            </div>
        </div>

        <div class="device-summary">
            <h3>Device Summary</h3>
            <div class="row">
                <div class="col-md-3">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Total Devices</h5>
                            <p class="card-text display-4" id="total-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Active Now</h5>
                            <p class="card-text display-4" id="active-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Power Usage</h5>
                            <p class="card-text display-4" id="total-power">0 <small>W</small></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Energy Today</h5>
                            <p class="card-text display-4" id="total-energy">0 <small>kWh</small></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">Overview</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="power-tab" data-bs-toggle="tab" data-bs-target="#power" type="button" role="tab">Power Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="energy-tab" data-bs-toggle="tab" data-bs-target="#energy" type="button" role="tab">Energy Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="devices-tab" data-bs-toggle="tab" data-bs-target="#devices" type="button" role="tab">Device Details</button>
            </li>
        </ul>

        <div class="tab-content" id="dashboardTabsContent">
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="grafana-container" id="overview-grafana"></div>
            </div>
            <div class="tab-pane fade" id="power" role="tabpanel">
                <div class="grafana-container" id="power-grafana"></div>
            </div>
            <div class="tab-pane fade" id="energy" role="tabpanel">
                <div class="grafana-container" id="energy-grafana"></div>
            </div>
            <div class="tab-pane fade" id="devices" role="tabpanel">
                <div class="grafana-container" id="devices-grafana"></div>
            </div>
        </div>

        <footer class="text-center mt-5 mb-3 text-muted">
            <p>Created by BITS MIS | <span id="last-updated"></span></p>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Update date and time
        function updateDateTime() {
            const now = new Date();
            document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
            });
            document.getElementById('current-time').textContent = now.toLocaleTimeString();
            document.getElementById('last-updated').textContent = `Last updated: ${now.toLocaleString()}`;
        }
        
        setInterval(updateDateTime, 1000);
        updateDateTime();
        
        // Get user data from session
        fetch('/api/user-data')
            .then(response => response.json())
            .then(data => {
                document.getElementById('username-display').textContent = data.username;
                document.getElementById('total-devices').textContent = data.total_devices;
                document.getElementById('active-devices').textContent = data.active_devices;
                document.getElementById('total-power').textContent = data.total_power;
                document.getElementById('total-energy').textContent = data.total_energy;
                
                // Load Grafana dashboards
                loadGrafanaDashboard('overview-grafana', data.grafana_overview_url);
                loadGrafanaDashboard('power-grafana', data.grafana_power_url);
                loadGrafanaDashboard('energy-grafana', data.grafana_energy_url);
                loadGrafanaDashboard('devices-grafana', data.grafana_devices_url);
            });
        
        // Fetch and display access points
        fetch('/api/access-points')
            .then(response => response.json())
            .then(data => {
                const accessPointsDiv = document.getElementById('access-points');
                const tailscaleInfoDiv = document.getElementById('tailscale-info');
                
                let accessPointsHTML = '<p><strong>Access Points:</strong> ';
                accessPointsHTML += data.access_points.join(', ');
                accessPointsHTML += '</p>';
                
                accessPointsDiv.innerHTML = accessPointsHTML;
                
                if (data.tailscale_ip) {
                    tailscaleInfoDiv.innerHTML = `<p><strong>Tailscale IP:</stro<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHEMS - Energy Monitoring</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background-color: #343a40;
            color: white;
            padding: 1rem 0;
            margin-bottom: 2rem;
        }
        .greeting {
            font-size: 1.2rem;
        }
        .grafana-container {
            height: 600px;
            width: 100%;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 2rem;
        }
        .device-summary {
            margin-bottom: 2rem;
        }
        .nav-tabs {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1>Smart Home Energy Monitoring</h1>
                    <p class="greeting">Welcome back, <span id="username-display"></span>!</p>
                </div>
                <div class="col-md-6 text-end">
                    <p id="current-date" class="mb-0"></p>
                    <p class="mb-0"><small>System Time: <span id="current-time"></span></small></p>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="system-info alert alert-info">
            <div class="row">
                <div class="col-md-6">
                    <h5>System Information</h5>
                    <div id="access-points"></div>
                    <div id="tailscale-info"></div>
                </div>
                <div class="col-md-6 text-end">
                    <button id="refresh-btn" class="btn btn-sm btn-outline-primary me-2">Refresh Data</button>
                    <button id="logout-btn" class="btn btn-sm btn-outline-danger">Logout</button>
                </div>
            </div>
        </div>

        <div class="device-summary">
            <h3>Device Summary</h3>
            <div class="row">
                <div class="col-md-3">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Total Devices</h5>
                            <p class="card-text display-4" id="total-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Active Now</h5>
                            <p class="card-text display-4" id="active-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Power Usage</h5>
                            <p class="card-text display-4" id="total-power">0 <small>W</small></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Energy Today</h5>
                            <p class="card-text display-4" id="total-energy">0 <small>kWh</small></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">Overview</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="power-tab" data-bs-toggle="tab" data-bs-target="#power" type="button" role="tab">Power Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="energy-tab" data-bs-toggle="tab" data-bs-target="#energy" type="button" role="tab">Energy Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="devices-tab" data-bs-toggle="tab" data-bs-target="#devices" type="button" role="tab">Device Details</button>
            </li>
        </ul>

        <div class="tab-content" id="dashboardTabsContent">
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="grafana-container" id="overview-grafana"></div>
            </div>
            <div class="tab-pane fade" id="power" role="tabpanel">
                <div class="grafana-container" id="power-grafana"></div>
            </div>
            <div class="tab-pane fade" id="energy" role="tabpanel">
                <div class="grafana-container" id="energy-grafana"></div>
            </div>
            <div class="tab-pane fade" id="devices" role="tabpanel">
                <div class="grafana-container" id="devices-grafana"></div>
            </div>
        </div>

        <footer class="text-center mt-5 mb-3 text-muted">
            <p>Created by BITS MIS | <span id="last-updated"></span></p>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Update date and time
        function updateDateTime() {
            const now = new Date();
            document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
            });
            document.getElementById('current-time').textContent = now.toLocaleTimeString();
            document.getElementById('last-updated').textContent = `Last updated: ${now.toLocaleString()}`;
        }
        
        setInterval(updateDateTime, 1000);
        updateDateTime();
        
        // Get user data from session
        fetch('/api/user-data')
            .then(response => response.json())
            .then(data => {
                document.getElementById('username-display').textContent = data.username;
                document.getElementById('total-devices').textContent = data.total_devices;
                document.getElementById('active-devices').textContent = data.active_devices;
                document.getElementById('total-power').textContent = data.total_power;
                document.getElementById('total-energy').textContent = data.total_energy;
                
                // Load Grafana dashboards
                loadGrafanaDashboard('overview-grafana', data.grafana_overview_url);
                loadGrafanaDashboard('power-grafana', data.grafana_power_url);
                loadGrafanaDashboard('energy-grafana', data.grafana_energy_url);
                loadGrafanaDashboard('devices-grafana', data.grafana_devices_url);
            });
        
        // Fetch and display access points
        fetch('/api/access-points')
            .then(response => response.json())
            .then(data => {
                const accessPointsDiv = document.getElementById('access-points');
                const tailscaleInfoDiv = document.getElementById('tailscale-info');
                
                let accessPointsHTML = '<p><strong>Access Points:</strong> ';
                accessPointsHTML += data.access_points.join(', ');
                accessPointsHTML += '</p>';
                
                accessPointsDiv.innerHTML = accessPointsHTML;
                
                if (data.tailscale_ip) {
                    tailscaleInfoDiv.innerHTML = `<p><strong>Tailscale IP:</stro<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SHEMS - Energy Monitoring</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background-color: #343a40;
            color: white;
            padding: 1rem 0;
            margin-bottom: 2rem;
        }
        .greeting {
            font-size: 1.2rem;
        }
        .grafana-container {
            height: 600px;
            width: 100%;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 2rem;
        }
        .device-summary {
            margin-bottom: 2rem;
        }
        .nav-tabs {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <h1>Smart Home Energy Monitoring</h1>
                    <p class="greeting">Welcome back, <span id="username-display"></span>!</p>
                </div>
                <div class="col-md-6 text-end">
                    <p id="current-date" class="mb-0"></p>
                    <p class="mb-0"><small>System Time: <span id="current-time"></span></small></p>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="system-info alert alert-info">
            <div class="row">
                <div class="col-md-6">
                    <h5>System Information</h5>
                    <div id="access-points"></div>
                    <div id="tailscale-info"></div>
                </div>
                <div class="col-md-6 text-end">
                    <button id="refresh-btn" class="btn btn-sm btn-outline-primary me-2">Refresh Data</button>
                    <button id="logout-btn" class="btn btn-sm btn-outline-danger">Logout</button>
                </div>
            </div>
        </div>

        <div class="device-summary">
            <h3>Device Summary</h3>
            <div class="row">
                <div class="col-md-3">
                    <div class="card text-white bg-primary mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Total Devices</h5>
                            <p class="card-text display-4" id="total-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-success mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Active Now</h5>
                            <p class="card-text display-4" id="active-devices">0</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-warning mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Power Usage</h5>
                            <p class="card-text display-4" id="total-power">0 <small>W</small></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card text-white bg-info mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Energy Today</h5>
                            <p class="card-text display-4" id="total-energy">0 <small>kWh</small></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">Overview</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="power-tab" data-bs-toggle="tab" data-bs-target="#power" type="button" role="tab">Power Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="energy-tab" data-bs-toggle="tab" data-bs-target="#energy" type="button" role="tab">Energy Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="devices-tab" data-bs-toggle="tab" data-bs-target="#devices" type="button" role="tab">Device Details</button>
            </li>
        </ul>

        <div class="tab-content" id="dashboardTabsContent">
            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                <div class="grafana-container" id="overview-grafana"></div>
            </div>
            <div class="tab-pane fade" id="power" role="tabpanel">
                <div class="grafana-container" id="power-grafana"></div>
            </div>
            <div class="tab-pane fade" id="energy" role="tabpanel">
                <div class="grafana-container" id="energy-grafana"></div>
            </div>
            <div class="tab-pane fade" id="devices" role="tabpanel">
                <div class="grafana-container" id="devices-grafana"></div>
            </div>
        </div>

        <footer class="text-center mt-5 mb-3 text-muted">
            <p>Created by BITS MIS | <span id="last-updated"></span></p>
        </footer>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Update date and time
        function updateDateTime() {
            const now = new Date();
            document.getElementById('current-date').textContent = now.toLocaleDateString('en-US', {
                weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'
            });
            document.getElementById('current-time').textContent = now.toLocaleTimeString();
            document.getElementById('last-updated').textContent = `Last updated: ${now.toLocaleString()}`;
        }
        
        setInterval(updateDateTime, 1000);
        updateDateTime();
        
        // Get user data from session
        fetch('/api/user-data')
            .then(response => response.json())
            .then(data => {
                document.getElementById('username-display').textContent = data.username;
                document.getElementById('total-devices').textContent = data.total_devices;
                document.getElementById('active-devices').textContent = data.active_devices;
                document.getElementById('total-power').textContent = data.total_power;
                document.getElementById('total-energy').textContent = data.total_energy;
                
                // Load Grafana dashboards
                loadGrafanaDashboard('overview-grafana', data.grafana_overview_url);
                loadGrafanaDashboard('power-grafana', data.grafana_power_url);
                loadGrafanaDashboard('energy-grafana', data.grafana_energy_url);
                loadGrafanaDashboard('devices-grafana', data.grafana_devices_url);
            });
        
        // Fetch and display access points
        fetch('/api/access-points')
            .then(response => response.json())
            .then(data => {
                const accessPointsDiv = document.getElementById('access-points');
                const tailscaleInfoDiv = document.getElementById('tailscale-info');
                
                let accessPointsHTML = '<p><strong>Access Points:</strong> ';
                accessPointsHTML += data.access_points.join(', ');
                accessPointsHTML += '</p>';
                
                accessPointsDiv.innerHTML = accessPointsHTML;
                
                if (data.tailscale_ip) {
                    tailscaleInfoDiv.innerHTML = `<p><strong>Tailscale IP:</strong> ${data.tailscale_ip}</p>`;
                }
            });
        
        function loadGrafanaDashboard(containerId, url) {
            const container = document.getElementById(containerId);
            if (container && url) {
                container.innerHTML = `<iframe src="${url}" width="100%" height="100%" frameborder="0"></iframe>`;
            }
        }
        
        document.getElementById('refresh-btn').addEventListener('click', () => {
            location.reload();
        });
        
        document.getElementById('logout-btn').addEventListener('click', () => {
            fetch('/logout', { method: 'POST' })
                .then(() => {
                    window.location.href = '/';
                });
        });
    </script>
</body>
</html>
ng> ${data.tailscale_ip}</p>`;
                }
            });
        
        function loadGrafanaDashboard(containerId, url) {
            const container = document.getElementById(containerId);
            if (container && url) {
                container.innerHTML = `<iframe src="${url}" width="100%" height="100%" frameborder="0"></iframe>`;
            }
        }
        
        document.getElementById('refresh-btn').addEventListener('click', () => {
            location.reload();
        });
        
        document.getElementById('logout-btn').addEventListener('click', () => {
            fetch('/logout', { method: 'POST' })
                .then(() => {
                    window.location.href = '/';
                });
        });
    </script>
</body>
</html>
ng> ${data.tailscale_ip}</p>`;
                }
            });
        
        function loadGrafanaDashboard(containerId, url) {
            const container = document.getElementById(containerId);
            if (container && url) {
                container.innerHTML = `<iframe src="${url}" width="100%" height="100%" frameborder="0"></iframe>`;
            }
        }
        
        document.getElementById('refresh-btn').addEventListener('click', () => {
            location.reload();
        });
        
        document.getElementById('logout-btn').addEventListener('click', () => {
            fetch('/logout', { method: 'POST' })
                .then(() => {
                    window.location.href = '/';
                });
        });
    </script>
</body>
</html>
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/templates[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/templates $[00m cccddd   ......///......///[K[K[Kcccddd   ......///......///gggrrraaafffaaannnaaa///888[K[K[K***
[?2004l
[?2004l
[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m lllsss   ---lllrrrttt   
[?2004l
[?2004l
[?2004ltotal 40
-rwxrwxrwx 1 shems-mis shems-mis  7891 Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis  6252 Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 10682 Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  8260 Apr 18 20:51 overview-dashboard.json
total 40
-rwxrwxrwx 1 shems-mis shems-mis  7891 Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis  6252 Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 10682 Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  8260 Apr 18 20:51 overview-dashboard.json
total 40
-rwxrwxrwx 1 shems-mis shems-mis  7891 Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis  6252 Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 10682 Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  8260 Apr 18 20:51 overview-dashboard.json
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [7m# Ensure your web server can access Grafana[27m
[7m# Ensure your web server can access Grafana[27m
[7m# Ensure your web server can access Grafana[27m
[7msudo setsebool -P httpd_can_network_connect 1[27m[7msudo setsebool -P httpd_can_network_connect 1[27m[7msudo setsebool -P httpd_can_network_connect 1[27m[A(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m # Ensure your web server can access Grafana
sudo setsebool -P httpd_can_network_connect 1
[?2004l[A(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m # Ensure your web server can access Grafana
sudo setsebool -P httpd_can_network_connect 1
[?2004l[A(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m # Ensure your web server can access Grafana
sudo setsebool -P httpd_can_network_connect 1
[?2004lsudo: sudosetsebool: command not foundsudo
: setsebool: command not found: setsebool: command not found

[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [7m# Check if Grafana service is running[27m
[7m# Check if Grafana service is running[27m
[7msudo systemctl status grafana-server[27m
[7m# Check if Grafana service is running[27m

[7msudo systemctl status grafana-server[27m
[7m# Test Grafana API access (replace with your actual port if not 3000)[27m
[7msudo systemctl status grafana-server[27m
[7mcurl -v http://localhost:3000/api/health[27m
[7m# Test Grafana API access (replace with your actual port if not 3000)[27m

[7m# Test Grafana API access (replace with your actual port if not 3000)[27m
[7mcurl -v http://localhost:3000/api/health[27m[7mcurl -v http://localhost:3000/api/health[27m[A[A[A[A(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m # Check if Grafana service is running
[A[A[A[A(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m # Check if Grafana service is running
[A[A[A[A(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m # Check if Grafana service is running
sudo systemctl status grafana-server
sudo systemctl status grafana-server


# Test Grafana API access (replace with your actual port if not 3000)
sudo systemctl status grafana-server

curl -v http://localhost:3000/api/health# Test Grafana API access (replace with your actual port if not 3000)
curl -v http://localhost:3000/api/health
# Test Grafana API access (replace with your actual port if not 3000)
curl -v http://localhost:3000/api/health

[?2004l[?2004l[?2004l● grafana-server.service - Grafana instance
     Loaded: loaded (/lib/systemd/system/grafana-server.service; enabled; preset: enabled)
     Active: active (running) since Fri 2025-04-18 17:13:08 IST; 4h 0min ago
       Docs: http://docs.grafana.org
   Main PID: 7206 (grafana)
      Tasks: 19 (limit: 1566)
        CPU: 3min 42.163s
     CGroup: /system.slice/grafana-server.service
             └─7206 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=/run/grafana/grafana-server.pid --packaging=deb cfg:default.paths.logs=/var/log/grafana cfg:default.paths.data=/var/lib/grafana cfg:default.paths.plugins=/var/lib/grafana/plugins cfg:default.paths.provisioning=/etc/grafana/provisioning

Apr 18 20:48:37 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:37.647976591+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=17 duration=17.687349ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:48:39 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:39.08291655+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=19 duration=19.373075ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:49:12 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:49:12.133619304+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=51 duration=51.785491ms size=875 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:53:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T20:53:27.295119262+05:30 level=info msg="Completed cleanup jobs" duration=71.74565ms
Apr 18 20:53:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T20:53:28.453603227+05:30 level=info msg="Update check succeeded" duration=404.690164ms
Apr 18 21:03:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:03:27.274326856+05:30 level=info msg="Completed cleanup jobs" duration=51.293986ms
Apr 18 21:03:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:03:28.469977291+05:30 level=info msg="Update check succeeded" duration=420.640871ms
Apr 18 21:06:53 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:06:53.431085424+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=19 duration=19.247243ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:13:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:13:27.272859047+05:30 level=info msg="Completed cleanup jobs" duration=49.574127ms
Apr 18 21:13:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:13:28.466602614+05:30 level=info msg="Update check succeeded" duration=417.786184ms
● grafana-server.service - Grafana instance
     Loaded: loaded (/lib/systemd/system/grafana-server.service; enabled; preset: enabled)
     Active: active (running) since Fri 2025-04-18 17:13:08 IST; 4h 0min ago
       Docs: http://docs.grafana.org
   Main PID: 7206 (grafana)
      Tasks: 19 (limit: 1566)
        CPU: 3min 42.163s
     CGroup: /system.slice/grafana-server.service
             └─7206 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=/run/grafana/grafana-server.pid --packaging=deb cfg:default.paths.logs=/var/log/grafana cfg:default.paths.data=/var/lib/grafana cfg:default.paths.plugins=/var/lib/grafana/plugins cfg:default.paths.provisioning=/etc/grafana/provisioning

Apr 18 20:48:37 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:37.647976591+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=17 duration=17.687349ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:48:39 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:39.08291655+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=19 duration=19.373075ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:49:12 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:49:12.133619304+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=51 duration=51.785491ms size=875 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:53:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T20:53:27.295119262+05:30 level=info msg="Completed cleanup jobs" duration=71.74565ms
Apr 18 20:53:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T20:53:28.453603227+05:30 level=info msg="Update check succeeded" duration=404.690164ms
Apr 18 21:03:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:03:27.274326856+05:30 level=info msg="Completed cleanup jobs" duration=51.293986ms
Apr 18 21:03:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:03:28.469977291+05:30 level=info msg="Update check succeeded" duration=420.640871ms
Apr 18 21:06:53 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:06:53.431085424+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=19 duration=19.247243ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:13:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:13:27.272859047+05:30 level=info msg="Completed cleanup jobs" duration=49.574127ms
Apr 18 21:13:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:13:28.466602614+05:30 level=info msg="Update check succeeded" duration=417.786184ms
● grafana-server.service - Grafana instance
     Loaded: loaded (/lib/systemd/system/grafana-server.service; enabled; preset: enabled)
     Active: active (running) since Fri 2025-04-18 17:13:08 IST; 4h 0min ago
       Docs: http://docs.grafana.org
   Main PID: 7206 (grafana)
      Tasks: 19 (limit: 1566)
        CPU: 3min 42.163s
     CGroup: /system.slice/grafana-server.service
             └─7206 /usr/share/grafana/bin/grafana server --config=/etc/grafana/grafana.ini --pidfile=/run/grafana/grafana-server.pid --packaging=deb cfg:default.paths.logs=/var/log/grafana cfg:default.paths.data=/var/lib/grafana cfg:default.paths.plugins=/var/lib/grafana/plugins cfg:default.paths.provisioning=/etc/grafana/provisioning

Apr 18 20:48:37 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:37.647976591+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=17 duration=17.687349ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:48:39 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:39.08291655+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=19 duration=19.373075ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:49:12 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:49:12.133619304+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=51 duration=51.785491ms size=875 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:53:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T20:53:27.295119262+05:30 level=info msg="Completed cleanup jobs" duration=71.74565ms
Apr 18 20:53:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T20:53:28.453603227+05:30 level=info msg="Update check succeeded" duration=404.690164ms
Apr 18 21:03:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:03:27.274326856+05:30 level=info msg="Completed cleanup jobs" duration=51.293986ms
Apr 18 21:03:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:03:28.469977291+05:30 level=info msg="Update check succeeded" duration=420.640871ms
Apr 18 21:06:53 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:06:53.431085424+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=19 duration=19.247243ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:13:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:13:27.272859047+05:30 level=info msg="Completed cleanup jobs" duration=49.574127ms
Apr 18 21:13:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:13:28.466602614+05:30 level=info msg="Update check succeeded" duration=417.786184ms
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1:3000...
* Connected to localhost (127.0.0.1) port 3000 (#0)
> GET /api/health HTTP/1.1
> Host: localhost:3000
> User-Agent: curl/7.88.1
> Accept: */*
> 
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1:3000...
* Connected to localhost (127.0.0.1) port 3000 (#0)
> GET /api/health HTTP/1.1
> Host: localhost:3000
> User-Agent: curl/7.88.1
> Accept: */*
> 
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 127.0.0.1:3000...
* Connected to localhost (127.0.0.1) port 3000 (#0)
> GET /api/health HTTP/1.1
> Host: localhost:3000
> User-Agent: curl/7.88.1
> Accept: */*
> 
< HTTP/1.1 200 OK
< Cache-Control: no-store
< Content-Type: application/json; charset=UTF-8
< X-Content-Type-Options: nosniff
< X-Frame-Options: deny
< X-Xss-Protection: 1; mode=block
< Date: Fri, 18 Apr 2025 15:43:40 GMT
< Content-Length: 101
< 
{ [101 bytes data]
< HTTP/1.1 200 OK
< Cache-Control: no-store
< Content-Type: application/json; charset=UTF-8
< X-Content-Type-Options: nosniff
< X-Frame-Options: deny
< X-Xss-Protection: 1; mode=block
< Date: Fri, 18 Apr 2025 15:43:40 GMT
< Content-Length: 101
< 
{ [101 bytes data]
< HTTP/1.1 200 OK
< Cache-Control: no-store
< Content-Type: application/json; charset=UTF-8
< X-Content-Type-Options: nosniff
< X-Frame-Options: deny
< X-Xss-Protection: 1; mode=block
< Date: Fri, 18 Apr 2025 15:43:40 GMT
< Content-Length: 101
< 
{ [101 bytes data]
100   101  100   101    0     0  23412      0 --:100   101  100   101    0     0  23412      0 --:--:-- --:--:-- --:--:-- 25250
* Connection #0 to host localhost left intact
100   101  100   101    0     0  23412      0 --:--:-- --:--:-- --:--:-- 25250
* Connection #0 to host localhost left intact
{
  "database": "ok",
  "version": "11.6.0",
  "commit": "d2fdff9ee4d75c74bfd3a97c18a0b8e4d029f06e"
}{
  "database": "ok",
  "version": "11.6.0",
  "commit": "d2fdff9ee4d75c74bfd3a97c18a0b8e4d029f06e"
}--:-- --:--:-- --:--:-- 25250
* Connection #0 to host localhost left intact
{
  "database": "ok",
  "version": "11.6.0",
  "commit": "d2fdff9ee4d75c74bfd3a97c18a0b8e4d029f06e"
}[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m gggrrreeeppp   iii[K[K[K---iii   gggrrraaafffaaannnaaa   ***
[?2004l
[?2004l
[?2004ldevice-details.json:          "type": "grafana",
device-details.json:          "uid": "-- Grafana --"
energy-analysis.json:          "type": "grafana",
energy-analysis.json:          "uid": "-- Grafana --"
overview-dashboard.json:          "type": "grafana",
overview-dashboard.json:          "uid": "-- Grafana --"
power-analysis.json:          "type": "grafana",
power-analysis.json:          "uid": "-- Grafana --"
device-details.json:          "type": "grafana",
device-details.json:          "uid": "-- Grafana --"
energy-analysis.json:          "type": "grafana",
energy-analysis.json:          "uid": "-- Grafana --"
overview-dashboard.json:          "type": "grafana",
overview-dashboard.json:          "uid": "-- Grafana --"
power-analysis.json:          "type": "grafana",
power-analysis.json:          "uid": "-- Grafana --"
device-details.json:          "type": "grafana",
device-details.json:          "uid": "-- Grafana --"
energy-analysis.json:          "type": "grafana",
energy-analysis.json:          "uid": "-- Grafana --"
overview-dashboard.json:          "type": "grafana",
overview-dashboard.json:          "uid": "-- Grafana --"
power-analysis.json:          "type": "grafana",
power-analysis.json:          "uid": "-- Grafana --"
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m cccaaattt   [7mdevice-details.json[27m[7mdevice-details.json[27m[7mdevice-details.json[27mdevice-details.json
[?2004ldevice-details.json
[?2004ldevice-details.json
[?2004l{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "mysql",
        "uid": "beja3ou85vhmof"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1000
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Energy"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwh"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Status"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "thresholds"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "palette-classic",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": "OFF"
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": "power"
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "uid": "SHEMS-MySQL"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (SELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Device Status",
      "type": "table"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "beja3ou85vhmof"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "uid": "SHEMS-MySQL"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT Timestamp as time, \r\nDeviceName, Power_Consmpt as power \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId in ('$userId') \r\nAND di.DeviceId in ('$deviceId') AND $__timeFilter(Timestamp) ORDER BY time",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Device Power Consumption",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [
    "energy",
    "monitoring",
    "devices"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "text": "Janak",
          "value": "1"
        },
        "datasource": {
          "type": "mysql",
          "uid": "beja3ou85vhmof"
        },
        "definition": "SELECT UserId as __value, Username as __text FROM Users",
        "label": "User ID",
        "name": "userId",
        "options": [],
        "query": "SELECT UserId as __value, Username as __text FROM Users",
        "refresh": 1,
        "type": "query"
      },
      {
        "current": {
          "text": "Smart Light #2",
          "value": "2"
        },
        "datasource": {
          "type": "mysql",
          "uid": "beja3ou85vhmof"
        },
        "definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",
        "label": "Device",
        "name": "deviceId",
        "options": [],
        "query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",
        "refresh": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Device Details",
  "uid": "dejaf5pvb8e0wf",
  "version": 4
}
{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "mysql",
        "uid": "beja3ou85vhmof"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1000
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Energy"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwh"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Status"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "thresholds"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "palette-classic",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": "OFF"
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": "power"
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "uid": "SHEMS-MySQL"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (SELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Device Status",
      "type": "table"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "beja3ou85vhmof"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "uid": "SHEMS-MySQL"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT Timestamp as time, \r\nDeviceName, Power_Consmpt as power \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId in ('$userId') \r\nAND di.DeviceId in ('$deviceId') AND $__timeFilter(Timestamp) ORDER BY time",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Device Power Consumption",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [
    "energy",
    "monitoring",
    "devices"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "text": "Janak",
          "value": "1"
        },
        "datasource": {
          "type": "mysql",
          "uid": "beja3ou85vhmof"
        },
        "definition": "SELECT UserId as __value, Username as __text FROM Users",
        "label": "User ID",
        "name": "userId",
        "options": [],
        "query": "SELECT UserId as __value, Username as __text FROM Users",
        "refresh": 1,
        "type": "query"
      },
      {
        "current": {
          "text": "Smart Light #2",
          "value": "2"
        },
        "datasource": {
          "type": "mysql",
          "uid": "beja3ou85vhmof"
        },
        "definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",
        "label": "Device",
        "name": "deviceId",
        "options": [],
        "query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",
        "refresh": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Device Details",
  "uid": "dejaf5pvb8e0wf",
  "version": 4
}
{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "mysql",
        "uid": "beja3ou85vhmof"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1000
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Energy"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwh"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Status"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "mode": "thresholds"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "palette-classic",
                  "steps": [
                    {
                      "color": "green"
                    },
                    {
                      "color": "red",
                      "value": "OFF"
                    }
                  ]
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": "power"
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "uid": "SHEMS-MySQL"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (SELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Device Status",
      "type": "table"
    },
    {
      "datasource": {
        "type": "mysql",
        "uid": "beja3ou85vhmof"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "uid": "SHEMS-MySQL"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT Timestamp as time, \r\nDeviceName, Power_Consmpt as power \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId in ('$userId') \r\nAND di.DeviceId in ('$deviceId') AND $__timeFilter(Timestamp) ORDER BY time",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Device Power Consumption",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [
    "energy",
    "monitoring",
    "devices"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "text": "Janak",
          "value": "1"
        },
        "datasource": {
          "type": "mysql",
          "uid": "beja3ou85vhmof"
        },
        "definition": "SELECT UserId as __value, Username as __text FROM Users",
        "label": "User ID",
        "name": "userId",
        "options": [],
        "query": "SELECT UserId as __value, Username as __text FROM Users",
        "refresh": 1,
        "type": "query"
      },
      {
        "current": {
          "text": "Smart Light #2",
          "value": "2"
        },
        "datasource": {
          "type": "mysql",
          "uid": "beja3ou85vhmof"
        },
        "definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",
        "label": "Device",
        "name": "deviceId",
        "options": [],
        "query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",
        "refresh": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Device Details",
  "uid": "dejaf5pvb8e0wf",
  "version": 4
}
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 40K
-rwxrwxrwx 1 shems-mis shems-mis 7.8K Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
total 40K
-rwxrwxrwx 1 shems-mis shems-mis 7.8K Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
total 40K
-rwxrwxrwx 1 shems-mis shems-mis 7.8K Apr 18 20:39 device-details.json
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m vvviii   [7mdevice-details.json[27m[7mdevice-details.json[27m[7mdevice-details.json[27mdevice-details.json
[?2004ldevice-details.json
[?2004ldevice-details.json
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"device-details.json"[27m[23m[29m[m[H[2J[?25l[38;1H"device-details.json"[27m[23m[29m[m[H[2J[?25l[38;1H"device-details.json" 318 lines, 7891 bytes 318 lines, 7891 bytes 318 lines, 7891 bytes[1;1H{
  "annotations": {
    "list": [[4;7H{[5;9H"builtIn": 1,[6;9H"datasource": {[7;11H"type": "grafana",[8;11H"uid": "-- Grafana --"[9;9H},[10;9H"enable": true,[11;9H"hide": true,[12;9H"iconColor": "rgba(0, 211, 255, 1)",[13;9H"name": "Annotations & Alerts",[14;9H"type": "dashboard"[15;7H}
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {[25;7H"datasource": {[26;9H"type": "mysql",[27;9H"uid": "beja3ou85vhmof"[28;7H},[29;7H"fieldConfig": {[30;9H"defaults": {[31;11H"custom": {[32;13H"align": "auto",[33;13H"cellOptions": {[34;15H"type": "auto"[35;13H},[36;13H"inspect": false[37;11H},[1;1H[?25h[?4m[1;1H{
  "annotations": {
    "list": [[4;7H{[5;9H"builtIn": 1,[6;9H"datasource": {[7;11H"type": "grafana",[8;11H"uid": "-- Grafana --"[9;9H},[10;9H"enable": true,[11;9H"hide": true,[12;9H"iconColor": "rgba(0, 211, 255, 1)",[13;9H"name": "Annotations & Alerts",[14;9H"type": "dashboard"[15;7H}
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {[25;7H"datasource": {[26;9H"type": "mysql",[27;9H"uid": "beja3ou85vhmof"[28;7H},[29;7H"fieldConfig": {[30;9H"defaults": {[31;11H"custom": {[32;13H"align": "auto",[33;13H"cellOptions": {[34;15H"type": "auto"[35;13H},[36;13H"inspect": false[37;11H},[1;1H[?25h[?4m[1;1H{
  "annotations": {
    "list": [[4;7H{[5;9H"builtIn": 1,[6;9H"datasource": {[7;11H"type": "grafana",[8;11H"uid": "-- Grafana --"[9;9H},[10;9H"enable": true,[11;9H"hide": true,[12;9H"iconColor": "rgba(0, 211, 255, 1)",[13;9H"name": "Annotations & Alerts",[14;9H"type": "dashboard"[15;7H}
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {[25;7H"datasource": {[26;9H"type": "mysql",[27;9H"uid": "beja3ou85vhmof"[28;7H},[29;7H"fieldConfig": {[30;9H"defaults": {[31;11H"custom": {[32;13H"align": "auto",[33;13H"cellOptions": {[34;15H"type": "auto"[35;13H},[36;13H"inspect": false[37;11H},[1;1H[?25h[?4m


[5;9H


[5;9H


[5;9H[6;9H[6;9H[6;9H[7;9H[7;9H[7;9H[8;9H[8;9H[8;9H[9;9H[9;9H[9;9H[10;9H[10;9H[10;9H[11;9H[11;9H[11;9H[12;9H[12;9H[12;9H[13;9H[13;9H[13;9H[14;9H[14;9H[14;9H[15;7H[15;7H[15;7H
    
    
    
  }
  }
  }[18;9H[18;9H[18;9H[19;9H[19;9H[19;9H[20;9H[20;9H[20;9H[21;9H[21;9H[21;9H[22;9H[22;9H[22;9H[23;9H[23;9H[23;9H
    
    
    [25;9H[25;9H[25;9H[26;9H[26;9H[26;9H[27;9H[27;9H[27;9H[28;8H[28;8H[28;8H[29;9H[29;9H[29;9H[30;9H[30;9H[30;9H[31;9H[31;9H[31;9H[32;9H[32;9H[32;9H[33;9H[33;9H[33;9H[34;9H[34;9H[34;9H[35;9H[35;9H[35;9H[36;9H[36;9H[36;9H[37;9H[37;9H[37;9H[?25l[1;37r[37;1H
[1;38r[37;11H"mappings": [],[38;1H[K[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mappings": [],[38;1H[K[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mappings": [],[38;1H[K[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": 1000[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": 1000[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": 1000[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Energy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Energy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Energy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "unit",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "unit",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "unit",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": "kwh"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": "kwh"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": "kwh"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H{[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"matcher": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"id": "byName",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Status"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Status"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"options": "Status"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"properties": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "color",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "color",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "color",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "thresholds"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "thresholds",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "thresholds",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"id": "thresholds",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"mode": "palette-classic",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"value": "OFF"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"value": "OFF"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;23H"value": "OFF"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;21H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H][37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H][37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H][37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H][?25h[?25l[1;37r[37;1H
[1;38r[37;9H][?25h[?25l[1;37r[37;1H
[1;38r[37;9H][?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"h": 8,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"h": 8,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"h": 8,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"w": 24,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"w": 24,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"w": 24,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"x": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"x": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"x": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"y": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"y": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"y": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"id": 1,[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"id": 1,[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"id": 1,[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"cellHeight": "sm",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"cellHeight": "sm",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"cellHeight": "sm",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"footer": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"footer": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"footer": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"countRows": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"countRows": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"countRows": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"fields": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"fields": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"fields": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"reducer": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"reducer": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"reducer": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"sum"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"sum"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"sum"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H],[?25h[?25l[1;37r[37;1H
[1;38r[37;11H],[?25h[?25l[1;37r[37;1H
[1;38r[37;11H],[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"show": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"show": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"show": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"showHeader": true,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"sortBy": "power"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"pluginVersion": "11.6.0",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"pluginVersion": "11.6.0",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"pluginVersion": "11.6.0",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H{[?25h[?25l[1;37r[37;1H
[1;38r[37;9H{[?25h[?25l[1;37r[37;1H
[1;38r[37;9H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"uid": "SHEMS-MySQL"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"uid": "SHEMS-MySQL"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"uid": "SHEMS-MySQL"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"editorMode": "code",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"editorMode": "code",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"editorMode": "code",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"format": "table",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"format": "table",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"format": "table",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"rawQuery": true,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"rawQuery": true,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"rawQuery": true,[37;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;11H"rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \rr[36;1H\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (([37;1HSELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;11H"rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \rr[36;1H\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (([37;1HSELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;11H"rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \rr[36;1H\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (([37;1HSELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",[35;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"refId": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"refId": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"refId": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sql": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sql": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sql": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"columns": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"columns": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"columns": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"parameters": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"parameters": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"parameters": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "function"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "function"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "function"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"groupBy": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"groupBy": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"groupBy": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"property": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"property": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"property": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"type": "string"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"type": "string"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"type": "string"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "groupBy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "groupBy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "groupBy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"limit": 50[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"limit": 50[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"limit": 50[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"color": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"color": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"color": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "palette-classic"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "palette-classic"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "palette-classic"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"custom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"custom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"custom": {[37;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;13H"axisBorderShow": false,[36;13H"axisCenteredZero": false,[37;13H"axisColorMode": "text",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;13H"axisBorderShow": false,[36;13H"axisCenteredZero": false,[37;13H"axisColorMode": "text",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;13H"axisBorderShow": false,[36;13H"axisCenteredZero": false,[37;13H"axisColorMode": "text",[35;9H[?25h[36;9H[36;9H[36;9H[37;9H[37;9H[37;9H[?25l[1;37r[37;1H
[1;38r[37;13H"axisLabel": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisLabel": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisLabel": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisPlacement": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisPlacement": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisPlacement": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barAlignment": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barAlignment": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barAlignment": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barWidthFactor": 0.6,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barWidthFactor": 0.6,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barWidthFactor": 0.6,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"drawStyle": "line",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"drawStyle": "line",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"drawStyle": "line",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"fillOpacity": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"fillOpacity": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"fillOpacity": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"gradientMode": "none",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"gradientMode": "none",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"gradientMode": "none",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"hideFrom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"hideFrom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"hideFrom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"legend": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"legend": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"legend": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"tooltip": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"tooltip": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"tooltip": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"viz": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"viz": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"viz": false[37;9H[?25h[36;9H[36;9H[36;9H[35;9H[35;9H[35;9H[34;9H[34;9H[34;9H[33;9H[33;9H[33;9H[32;9H[32;9H[32;9H[31;9H[31;9H[31;9H[30;9H[30;9H[30;9H[29;9H[29;9H[29;9H[28;9H[28;9H[28;9H[27;9H[27;9H[27;9H[26;9H[26;9H[26;9H[25;9H[25;9H[25;9H[24;9H[24;9H[24;9H[23;9H[23;9H[23;9H[22;9H[22;9H[22;9H[21;9H[21;9H[21;9H[20;9H[20;9H[20;9H[19;9H[19;9H[19;9H[18;9H[18;9H[18;9H[17;8H[17;8H[17;8H[16;9H[16;9H[16;9H[15;9H[15;9H[15;9H[14;9H[14;9H[14;9H[13;5H[13;5H[13;5H[12;6H[12;6H[12;6H[11;9H[11;9H[11;9H[10;9H[10;9H[10;9H[9;8H[9;8H[9;8H[8;9H[8;9H[8;9H[7;9H[7;9H[7;9H[6;9H[6;9H[6;9H[5;9H[5;9H[5;9H[4;9H[4;9H[4;9H[3;9H[3;9H[3;9H[2;9H[2;9H[2;9H[1;9H[1;9H[1;9H[?25l[1;37r[1;1H[L[1;38r[1;17H"property": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"property": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"property": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"groupBy": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"groupBy": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"groupBy": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H}[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H}[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H}[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"type": "function"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"type": "function"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"type": "function"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"parameters": [],[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"parameters": [],[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"parameters": [],[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;15H{[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"columns": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"columns": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"columns": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"sql": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"sql": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"sql": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"refId": "A",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"refId": "A",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"refId": "A",[1;9H[?25h[?25l[1;37r[1;1H[3L[1;38r[1;11H"rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \rr[2;1H\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (([3;1HSELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",[1;9H[?25h[?25l[1;37r[1;1H[3L[1;38r[1;11H"rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \rr[2;1H\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (([3;1HSELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",[1;9H[?25h[?25l[1;37r[1;1H[3L[1;38r[1;11H"rawSql": "SELECT di.DeviceName, di.DeviceType, \r\ndud.Power_Consmpt as power, dud.Energy, \r\ndud.Status, dud.Timestamp \rr[2;1H\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo di ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId = $userId \r\nAND dud.Timestamp = (([3;1HSELECT MAX(Timestamp) FROM DeviceUtilData dud2 WHERE dud2.DeviceId = dud.DeviceId) ORDER BY di.DeviceName ",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"rawQuery": true,[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"rawQuery": true,[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"rawQuery": true,[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"format": "table",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"format": "table",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"format": "table",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"editorMode": "code",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"editorMode": "code",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"editorMode": "code",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"uid": "SHEMS-MySQL"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"uid": "SHEMS-MySQL"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"uid": "SHEMS-MySQL"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"datasource": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"datasource": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"datasource": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"targets": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"targets": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"targets": [[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"pluginVersion": "11.6.0",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"pluginVersion": "11.6.0",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H"pluginVersion": "11.6.0",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"sortBy": "power"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"sortBy": "power"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"sortBy": "power"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"showHeader": true,[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"showHeader": true,[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"showHeader": true,[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"show": false[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"show": false[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"show": false[1;9H[?25h[2;9H[2;9H[2;9H[3;9H[3;9H[3;9H[4;9H[4;9H[4;9H[5;8H[5;8H[5;8H[6;9H[6;9H[6;9H[7;9H[7;9H[7;9H[8;9H[8;9H[8;9H[9;9H[9;9H[9;9H[10;9H[10;9H[10;9H[11;9H[11;9H[11;9H[12;9H[12;9H[12;9H[13;9H[13;9H[13;9H[14;9H[14;9H[14;9H[15;9H[15;9H[15;9H[18;9H[18;9H[18;9H[19;9H[19;9H[19;9H[20;9H[20;9H[20;9H[21;9H[21;9H[21;9H[22;9H[22;9H[22;9H[23;9H[23;9H[23;9H[24;9H[24;9H[24;9H[25;9H[25;9H[25;9H[26;9H[26;9H[26;9H[27;9H[27;9H[27;9H[28;9H[28;9H[28;9H[29;9H[29;9H[29;9H[30;9H[30;9H[30;9H[31;9H[31;9H[31;9H[32;9H[32;9H[32;9H[33;9H[33;9H[33;9H[34;9H[34;9H[34;9H[35;9H[35;9H[35;9H[36;9H[36;9H[36;9H[37;8H[37;8H[37;8H[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Status",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "table"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H},[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;5H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"fieldConfig": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"defaults": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"color": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"color": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"color": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "palette-classic"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "palette-classic"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "palette-classic"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"custom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"custom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"custom": {[37;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;13H"axisBorderShow": false,[36;13H"axisCenteredZero": false,[37;13H"axisColorMode": "text",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;13H"axisBorderShow": false,[36;13H"axisCenteredZero": false,[37;13H"axisColorMode": "text",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;13H"axisBorderShow": false,[36;13H"axisCenteredZero": false,[37;13H"axisColorMode": "text",[35;9H[?25h[36;9H[36;9H[36;9H[37;9H[37;9H[37;9H[?25l[1;37r[37;1H
[1;38r[37;13H"axisLabel": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisLabel": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisLabel": "",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisPlacement": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisPlacement": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"axisPlacement": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barAlignment": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barAlignment": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barAlignment": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barWidthFactor": 0.6,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barWidthFactor": 0.6,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"barWidthFactor": 0.6,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"drawStyle": "line",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"drawStyle": "line",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"drawStyle": "line",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"fillOpacity": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"fillOpacity": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"fillOpacity": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"gradientMode": "none",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"gradientMode": "none",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"gradientMode": "none",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"hideFrom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"hideFrom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"hideFrom": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"legend": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"legend": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"legend": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"tooltip": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"tooltip": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"tooltip": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"viz": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"viz": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"viz": false[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"insertNulls": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"insertNulls": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"insertNulls": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"lineInterpolation": "linear",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"lineInterpolation": "linear",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"lineInterpolation": "linear",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"lineWidth": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"lineWidth": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"lineWidth": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"pointSize": 5,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"pointSize": 5,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"pointSize": 5,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"scaleDistribution": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"scaleDistribution": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"scaleDistribution": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"type": "linear"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"type": "linear"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"type": "linear"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"showPoints": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"showPoints": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"showPoints": "auto",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"spanNulls": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"spanNulls": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"spanNulls": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"stacking": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"stacking": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"stacking": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"group": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"group": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"group": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"mode": "none"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"mode": "none"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"mode": "none"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H},[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"thresholdsStyle": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"thresholdsStyle": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"thresholdsStyle": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"mode": "off"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"mode": "off"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H"mode": "off"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H}[?25h[?25l[1;37r[37;1H
[1;38r[37;13H}[?25h[?25l[1;37r[37;1H
[1;38r[37;13H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mappings": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mappings": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mappings": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"thresholds": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"mode": "absolute",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"steps": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "green"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"color": "red",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": 80[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": 80[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"value": 80[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;13H][?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"unit": "watt"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [][37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [][37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"overrides": [][37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"gridPos": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"h": 12,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"h": 12,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"h": 12,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"w": 24,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"w": 24,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"w": 24,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"x": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"x": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"x": 0,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"y": 8[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"y": 8[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"y": 8[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"id": 2,[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"id": 2,[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"id": 2,[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"options": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"legend": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"legend": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"legend": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"calcs": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"calcs": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"calcs": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"displayMode": "list",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"displayMode": "list",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"displayMode": "list",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"placement": "bottom",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"placement": "bottom",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"placement": "bottom",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"showLegend": true[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"showLegend": true[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"showLegend": true[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"tooltip": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"tooltip": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"tooltip": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"hideZeros": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"hideZeros": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"hideZeros": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mode": "single",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mode": "single",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"mode": "single",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sort": "none"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sort": "none"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sort": "none"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"pluginVersion": "11.6.0",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"pluginVersion": "11.6.0",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"pluginVersion": "11.6.0",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"targets": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H{[?25h[?25l[1;37r[37;1H
[1;38r[37;9H{[?25h[?25l[1;37r[37;1H
[1;38r[37;9H{[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"uid": "SHEMS-MySQL"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"uid": "SHEMS-MySQL"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"uid": "SHEMS-MySQL"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H},[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"editorMode": "code",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"editorMode": "code",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"editorMode": "code",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"format": "time_series",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"format": "time_series",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"format": "time_series",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"rawQuery": true,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"rawQuery": true,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"rawQuery": true,[37;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;11H"rawSql": "SELECT Timestamp as time, \r\nDeviceName, Power_Consmpt as power \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo  [36;1Hdi ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId in ('$userId') \r\nAND di.DeviceId in ('$deviceId') AND $__timeFilter(Timestamp)  [37;1HORDER BY time",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;11H"rawSql": "SELECT Timestamp as time, \r\nDeviceName, Power_Consmpt as power \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo  [36;1Hdi ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId in ('$userId') \r\nAND di.DeviceId in ('$deviceId') AND $__timeFilter(Timestamp)  [37;1HORDER BY time",[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;11H"rawSql": "SELECT Timestamp as time, \r\nDeviceName, Power_Consmpt as power \r\nFROM DeviceUtilData dud \r\nJOIN DeviceInfo  [36;1Hdi ON dud.DeviceId = di.DeviceId \r\nWHERE di.UserId in ('$userId') \r\nAND di.DeviceId in ('$deviceId') AND $__timeFilter(Timestamp)  [37;1HORDER BY time",[35;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"refId": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"refId": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"refId": "A",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sql": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sql": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"sql": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"columns": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"columns": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"columns": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"parameters": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"parameters": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"parameters": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "function"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "function"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "function"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"groupBy": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"groupBy": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"groupBy": [[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H{[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"property": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"property": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"property": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"type": "string"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"type": "string"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;19H"type": "string"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "groupBy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "groupBy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"type": "groupBy"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;15H}[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"limit": 50[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"limit": 50[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"limit": 50[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;11H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H],[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"title": "Device Power Consumption",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "timeseries"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "timeseries"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H"type": "timeseries"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"preload": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"preload": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"preload": false,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"schemaVersion": 41,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"schemaVersion": 41,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"schemaVersion": 41,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": [[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": [[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"tags": [[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"energy",[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"energy",[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"energy",[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"monitoring",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"monitoring",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"monitoring",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"devices"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"devices"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"devices"[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H],[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"templating": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"templating": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"templating": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"list": [[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"list": [[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"list": [[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"current": {[36;11H"text": "Janak",[37;11H"value": "1"[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"current": {[36;11H"text": "Janak",[37;11H"value": "1"[35;9H[?25h[?25l[1;37r[1;1H[3M[1;38r[35;9H"current": {[36;11H"text": "Janak",[37;11H"value": "1"[35;9H[?25h[36;9H[36;9H[36;9H[37;9H[37;9H[37;9H[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"definition": "SELECT UserId as __value, Username as __text FROM Users",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"definition": "SELECT UserId as __value, Username as __text FROM Users",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"definition": "SELECT UserId as __value, Username as __text FROM Users",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "User ID",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "User ID",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "User ID",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"options": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"options": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"options": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT UserId as __value, Username as __text FROM Users",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refresh": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refresh": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refresh": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H},[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;7H{[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"current": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"current": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"current": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"text": "Smart Light #2",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"text": "Smart Light #2",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"text": "Smart Light #2",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"value": "2"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"value": "2"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"value": "2"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"datasource": {[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"type": "mysql",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;11H"uid": "beja3ou85vhmof"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H},[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "Device",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "Device",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"label": "Device",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "deviceId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "deviceId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"name": "deviceId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"options": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"options": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"options": [],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refresh": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refresh": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"refresh": 1,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"type": "query"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;7H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;3H},[?25h[?25l[1;37r[37;1H
[1;38r[37;3H},[?25h[?25l[1;37r[37;1H
[1;38r[37;3H},[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"time": {[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"time": {[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"time": {[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"from": "now-7d",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"from": "now-7d",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"from": "now-7d",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"to": "now"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"to": "now"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"to": "now"[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H},[?25h[?25l[1;37r[37;1H
[1;38r[37;3H},[?25h[?25l[1;37r[37;1H
[1;38r[37;3H},[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timepicker": {},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timepicker": {},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timepicker": {},[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"timezone": "browser",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"title": "Device Details",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"uid": "dejaf5pvb8e0wf",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"uid": "dejaf5pvb8e0wf",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"uid": "dejaf5pvb8e0wf",[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"version": 4[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"version": 4[?25h[?25l[1;37r[37;1H
[1;38r[37;3H"version": 4[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H}[?25h[36;9H[36;9H[36;9H[35;9H[35;9H[35;9H[34;9H[34;9H[34;9H[33;9H[33;9H[33;9H[32;9H[32;9H[32;9H[31;4H[31;4H[31;4H[30;9H[30;9H[30;9H[29;9H[29;9H[29;9H[28;9H[28;9H[28;9H[27;4H[27;4H[27;4H[26;5H[26;5H[26;5H[25;7H[25;7H[25;7H[24;9H[24;9H[24;9H[23;9H[23;9H[23;9H[22;9H[22;9H[22;9H[21;9H[21;9H[21;9H[20;9H[20;9H[20;9H[19;9H[19;9H[19;9H[18;9H[18;9H[18;9H[17;9H[17;9H[17;9H[16;9H[16;9H[16;9H[15;9H[15;9H[15;9H[14;9H[14;9H[14;9H[13;9H[13;9H[13;9H[12;9H[12;9H[12;9H[11;9H[11;9H[11;9H[10;9H[10;9H[10;9H[9;7H[9;7H[9;7H[8;8H[8;8H[8;8H[7;9H[7;9H[7;9H[6;9H[6;9H[6;9H[5;9H[5;9H[5;9H[4;9H[4;9H[4;9H[3;9H[3;9H[3;9H[2;9H[2;9H[2;9H[1;9H[1;9H[1;9H[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"uid": "beja3ou85vhmof"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"uid": "beja3ou85vhmof"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"uid": "beja3ou85vhmof"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"type": "mysql",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"type": "mysql",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"type": "mysql",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"datasource": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"datasource": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"datasource": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H},[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"value": "1"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"value": "1"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"value": "1"[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"text": "Janak",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"text": "Janak",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;11H"text": "Janak",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"current": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"current": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"current": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;7H{[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"list": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"list": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"list": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"templating": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"templating": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"templating": {[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"devices"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"devices"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"devices"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"monitoring",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"monitoring",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"monitoring",[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"energy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"energy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"energy",[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"tags": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"tags": [[?25h[?25l[1;37r[1;1H[L[1;38r[1;3H"tags": [[?25h[2;9H[2;9H[2;9H[3;9H[3;9H[3;9H[4;9H[4;9H[4;9H
  ]
  ]
  ][6;9H[6;9H[6;9H[7;9H[7;9H[7;9H[8;7H[8;7H[8;7H[9;9H[9;9H[9;9H[8;7H[8;7H[8;7H[9;8H[9;8H[9;8H   [8;7H[8;7H[8;7H[?25l[8;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"refresh": 1,[8;11H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"refresh": 1,[8;11H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"refresh": 1,[8;11H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"type": "query"[8;11H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"type": "query"[8;11H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H"type": "query"[8;11H[?25h[?25l[8;37r[37;1H
[1;38r[37;7H}[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;7H}[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;7H}[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H][8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H][8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H][8;9H[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"device-details.json"[?25l[?2004l[>4;m"device-details.json"[?25l[?2004l[>4;m"device-details.json" 313 lines, 7801 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 313 lines, 7801 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 313 lines, 7801 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m lllsss   lllrrr[K[K[K[K[K[K---rrrttt[K[K[Klllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 40K
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
-rwxrwxrwx 1 shems-mis shems-mis 7.7K Apr 18 21:18 device-details.json
total 40K
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
-rwxrwxrwx 1 shems-mis shems-mis 7.7K Apr 18 21:18 device-details.json
total 40K
-rwxrwxrwx 1 shems-mis shems-mis 6.2K Apr 18 20:50 energy-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis  11K Apr 18 20:50 power-analysis.json
-rwxrwxrwx 1 shems-mis shems-mis 8.1K Apr 18 20:51 overview-dashboard.json
-rwxrwxrwx 1 shems-mis shems-mis 7.7K Apr 18 21:18 device-details.json
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/grafana/grafana_dashboards[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/grafana/grafana_dashboards $[00m cccddd   ......///......///dddeeevvv///bbbiiinnn
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ...   ...///[K[K[K[K[K[K[K[K[K[K[K[K...///[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27mshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lStarting SHEMS deployment at Fri Apr 18 09:18:25 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 09:18:25 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 09:18:25 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 09:18:25 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
No existing simulation process found
Installing required packages...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Configuring MariaDB...
Setting up Python environment...
Configuring MariaDB...
Setting up Python environment...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running
Server is running
Server is running


Deployment completed successfully!
Deployment completed successfully!


Access points:
Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Tailscale): http://100.97.72.36:3000


Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)


Log files are available in: /app/smarthome/data/logs
Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 09:18:38 PM IST 2025

Deployment completed successfully!

Access points:

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 09:18:38 PM IST 2025
Deployment completed at Fri Apr 18 09:18:38 PM IST 2025
Deployment completed at Fri Apr 18 09:18:38 PM IST 2025
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
[1]+  Done                    nohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [7mjournalctl -u grafana-server -f[27m[7mjournalctl -u grafana-server -f[27m[7mjournalctl -u grafana-server -f[27mjournalctl -u grafana-server -fjournalctl -u grafana-server -f
journalctl -u grafana-server -f

[?2004l[?2004l[?2004lApr 18 20:48:39 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:39.08291655+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=19 duration=19.373075ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:49:12 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:49:12.133619304+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=51 duration=51.785491ms size=875 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:53:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T20:53:27.295119262+05:30 level=info msg="Completed cleanup jobs" duration=71.74565ms
Apr 18 20:53:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T20:53:28.453603227+05:30 level=info msg="Update check succeeded" duration=404.690164ms
Apr 18 21:03:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:03:27.274326856+05:30 level=info msg="Completed cleanup jobs" duration=51.293986ms
Apr 18 21:03:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:03:28.469977291+05:30 level=info msg="Update check succeeded" duration=420.640871ms
Apr 18 21:06:53 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:06:53.431085424+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=19 duration=19.247243ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:13:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:13:27.272859047+05:30 level=info msg="Completed cleanup jobs" duration=49.574127ms
Apr 18 21:13:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:13:28.466602614+05:30 level=info msg="Update check succeeded" duration=417.786184ms
Apr 18 21:15:07 raspberrypi grafana[7206]: logger=infra.usagestats t=2025-04-18T21:15:07.298053055+05:30 level=info msg="Usage stats are ready to report"
Apr 18 20:48:39 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:39.08291655+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=19 duration=19.373075ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:49:12 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:49:12.133619304+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=51 duration=51.785491ms size=875 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:53:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T20:53:27.295119262+05:30 level=info msg="Completed cleanup jobs" duration=71.74565ms
Apr 18 20:53:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T20:53:28.453603227+05:30 level=info msg="Update check succeeded" duration=404.690164ms
Apr 18 21:03:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:03:27.274326856+05:30 level=info msg="Completed cleanup jobs" duration=51.293986ms
Apr 18 21:03:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:03:28.469977291+05:30 level=info msg="Update check succeeded" duration=420.640871ms
Apr 18 21:06:53 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:06:53.431085424+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=19 duration=19.247243ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:13:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:13:27.272859047+05:30 level=info msg="Completed cleanup jobs" duration=49.574127ms
Apr 18 21:13:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:13:28.466602614+05:30 level=info msg="Update check succeeded" duration=417.786184ms
Apr 18 21:15:07 raspberrypi grafana[7206]: logger=infra.usagestats t=2025-04-18T21:15:07.298053055+05:30 level=info msg="Usage stats are ready to report"
Apr 18 20:48:39 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:48:39.08291655+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=19 duration=19.373075ms size=947 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:49:12 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T20:49:12.133619304+05:30 level=info msg="Request Completed" method=POST path=/api/ds/query status=400 remote_addr=192.168.1.245 time_ms=51 duration=51.785491ms size=875 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?editPanel=3&from=now-7d&orgId=1&timezone=browser&to=now&var-userId=1" handler=/api/ds/query status_source=downstream
Apr 18 20:53:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T20:53:27.295119262+05:30 level=info msg="Completed cleanup jobs" duration=71.74565ms
Apr 18 20:53:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T20:53:28.453603227+05:30 level=info msg="Update check succeeded" duration=404.690164ms
Apr 18 21:03:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:03:27.274326856+05:30 level=info msg="Completed cleanup jobs" duration=51.293986ms
Apr 18 21:03:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:03:28.469977291+05:30 level=info msg="Update check succeeded" duration=420.640871ms
Apr 18 21:06:53 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:06:53.431085424+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=19 duration=19.247243ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:13:27 raspberrypi grafana[7206]: logger=cleanup t=2025-04-18T21:13:27.272859047+05:30 level=info msg="Completed cleanup jobs" duration=49.574127ms
Apr 18 21:13:28 raspberrypi grafana[7206]: logger=plugins.update.checker t=2025-04-18T21:13:28.466602614+05:30 level=info msg="Update check succeeded" duration=417.786184ms
Apr 18 21:15:07 raspberrypi grafana[7206]: logger=infra.usagestats t=2025-04-18T21:15:07.298053055+05:30 level=info msg="Usage stats are ready to report"
Apr 18 21:20:26 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:20:26.687902067+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/dejaf5pvb8e0wf/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=57 duration=57.951614ms size=90 referer="http://192.168.1.223:3000/d/dejaf5pvb8e0wf/device-details?from=now-7d&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-deviceId=2&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: dejaf5pvb8e0wf"
Apr 18 21:20:26 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:20:26.687902067+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/dejaf5pvb8e0wf/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=57 duration=57.951614ms size=90 referer="http://192.168.1.223:3000/d/dejaf5pvb8e0wf/device-details?from=now-7d&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-deviceId=2&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: dejaf5pvb8e0wf"
Apr 18 21:20:26 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:20:26.687902067+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/dejaf5pvb8e0wf/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=57 duration=57.951614ms size=90 referer="http://192.168.1.223:3000/d/dejaf5pvb8e0wf/device-details?from=now-7d&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-deviceId=2&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: dejaf5pvb8e0wf"
Apr 18 21:20:33 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:20:33.532492143+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=eejapnudfzd34d dashboardUid=dejaf5pvb8e0wf user=admin
Apr 18 21:20:33 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:20:33.532492143+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=eejapnudfzd34d dashboardUid=dejaf5pvb8e0wf user=admin
Apr 18 21:20:33 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:20:33.532492143+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=eejapnudfzd34d dashboardUid=dejaf5pvb8e0wf user=admin
Apr 18 21:20:51 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:20:51.775204187+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/eejaf5qzykwlce/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=13 duration=13.866004ms size=90 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: eejaf5qzykwlce"
Apr 18 21:20:51 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:20:51.775204187+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/eejaf5qzykwlce/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=13 duration=13.866004ms size=90 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: eejaf5qzykwlce"
Apr 18 21:20:51 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:20:51.775204187+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/eejaf5qzykwlce/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=13 duration=13.866004ms size=90 referer="http://192.168.1.223:3000/d/eejaf5qzykwlce/energy-analysis?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: eejaf5qzykwlce"
Apr 18 21:20:55 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:20:55.942011523+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=dejapp1k5a8sgd dashboardUid=eejaf5qzykwlce user=admin
Apr 18 21:20:55 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:20:55.942011523+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=dejapp1k5a8sgd dashboardUid=eejaf5qzykwlce user=admin
Apr 18 21:20:55 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:20:55.942011523+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=dejapp1k5a8sgd dashboardUid=eejaf5qzykwlce user=admin
Apr 18 21:21:11 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:21:11.741007275+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/bejaf5t5px43kb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=13 duration=13.705796ms size=90 referer="http://192.168.1.223:3000/d/bejaf5t5px43kb/power-analysis?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-deviceType=HVAC&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: bejaf5t5px43kb"
Apr 18 21:21:11 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:21:11.741007275+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/bejaf5t5px43kb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=13 duration=13.705796ms size=90 referer="http://192.168.1.223:3000/d/bejaf5t5px43kb/power-analysis?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-deviceType=HVAC&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: bejaf5t5px43kb"
Apr 18 21:21:11 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:21:11.741007275+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/bejaf5t5px43kb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=13 duration=13.705796ms size=90 referer="http://192.168.1.223:3000/d/bejaf5t5px43kb/power-analysis?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-deviceType=HVAC&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: bejaf5t5px43kb"
Apr 18 21:21:17 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:21:17.779266439+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=fejapq7mtpp1cb dashboardUid=bejaf5t5px43kb user=admin
Apr 18 21:21:17 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:21:17.779266439+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=fejapq7mtpp1cb dashboardUid=bejaf5t5px43kb user=admin
Apr 18 21:21:17 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:21:17.779266439+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=fejapq7mtpp1cb dashboardUid=bejaf5t5px43kb user=admin
Apr 18 21:21:45 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:21:45.845746675+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=17 duration=17.881254ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:21:45 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:21:45.845746675+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=17 duration=17.881254ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:21:45 raspberrypi grafana[7206]: logger=context userId=1 orgId=1 uname=admin t=2025-04-18T21:21:45.845746675+05:30 level=info msg="Request Completed" method=GET path=/api/dashboards/uid/fejaf5s3cz8xsb/public-dashboards status=404 remote_addr=192.168.1.245 time_ms=17 duration=17.881254ms size=90 referer="http://192.168.1.223:3000/d/fejaf5s3cz8xsb/shems-overview?from=now-6h&orgId=1&shareView=public_dashboard&timezone=browser&to=now&var-userId=1" handler=/api/dashboards/uid/:dashboardUid/public-dashboards status_source=server errorReason=NotFound errorMessageID=publicdashboards.notFound error="FindByDashboardUid: Public dashboard not found by orgId: 1 and dashboardUid: fejaf5s3cz8xsb"
Apr 18 21:21:48 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:21:48.904723569+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=cejaprvlwy4n4a dashboardUid=fejaf5s3cz8xsb user=admin
Apr 18 21:21:48 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:21:48.904723569+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=cejaprvlwy4n4a dashboardUid=fejaf5s3cz8xsb user=admin
Apr 18 21:21:48 raspberrypi grafana[7206]: logger=publicdashboards.service t=2025-04-18T21:21:48.904723569+05:30 level=info msg="Public dashboard enabled" publicDashboardUid=cejaprvlwy4n4a dashboardUid=fejaf5s3cz8xsb user=admin


[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m journalctl -u grafana-server -fjournalctl -u grafana-server -fjournalctl -u grafana-server -f[4P./shems_deploy_interface.sh[4P./shems_deploy_interface.sh[4P./shems_deploy_interface.sh[18Pls -lrth [18Pls -lrth [18Pls -lrth ./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 09:22:10 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 09:22:10 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 09:22:10 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 09:22:10 PM IST 2025
Checking for existing processes...
No existing simulation process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Installing required packages...
Configuring MariaDB...
Configuring MariaDB...
Setting up Python environment...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Python scripts...
Deploying Python scripts...
Deploying Python scripts...
Deploying Grafana...
Deploying Grafana...
Deploying Grafana...
Deploying Grafana...
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running
Server is running
Server is running



Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

  - Grafana (Tailscale): http://100.97.72.36:3000



Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs

Log files are available in: /app/smarthome/data/logs
Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 09:22:24 PM IST 2025
Deployment completed at Fri Apr 18 09:22:24 PM IST 2025
Deployment completed at Fri Apr 18 09:22:24 PM IST 2025
Deployment completed at Fri Apr 18 09:22:24 PM IST 2025
[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 19:01 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.pyshems_monitoring_server.pyshems_monitoring_server.py
[?2004l
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 423 lines, 14765 bytes 423 lines, 14765 bytes 423 lines, 14765 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[?25l[14;37r[37;1H
[1;38r[37;5Hreturn jsonify({[14;1H[?25h[?25l[14;37r[37;1H
[1;38r[37;5Hreturn jsonify({[14;1H[?25h[?25l[14;37r[37;1H
[1;38r[37;5Hreturn jsonify({[14;1H[?25h[13;1H[13;1H[13;1H[?25l[13;37r[37;1H
[1;38r[37;9H'access_points': access_points,[13;1H[?25h[?25l[13;37r[37;1H
[1;38r[37;9H'access_points': access_points,[13;1H[?25h[?25l[13;37r[37;1H
[1;38r[37;9H'access_points': access_points,[13;1H[?25h[?25l[13;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[13;1H[?25h[?25l[13;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[13;1H[?25h[?25l[13;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[13;1H[?25h







































































[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H
































[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[36;1H[36;1H[36;1H


[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify data exists[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify data exists[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify data exists[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No data found for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No data found for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No data found for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;32Hmessage="No data available yet. Please wait..."), 202[?25h[?25l[1;37r[37;1H
[1;38r[37;32Hmessage="No data available yet. Please wait..."), 202[?25h[?25l[1;37r[37;1H
[1;38r[37;32Hmessage="No data available yet. Please wait..."), 202[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Check/import dashboards if needed[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Check/import dashboards if needed[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Check/import dashboards if needed[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.info("Dashboards missing, attempting import")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.info("Dashboards missing, attempting import")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.info("Dashboards missing, attempting import")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Himport_grafana_dashboards()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Himport_grafana_dashboards()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Himport_grafana_dashboards()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(2)  # Brief delay for import to complete[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(2)  # Brief delay for import to complete[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(2)  # Brief delay for import to complete[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;28Hmessage="Unable to load dashboard"), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;28Hmessage="Unable to load dashboard"), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;28Hmessage="Unable to load dashboard"), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l
:[?25h[?25l
:[?25h[?25l
:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 420 lines, 14762 bytes written 420 lines, 14762 bytes written 420 lines, 14762 bytes written[23;2t[23;2t[23;1t[23;1t
[?2004l[?1l>[23;2t[23;1t[?1049l[23;0;0t[?25h[>4;m
[?2004l[?1l>
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttt   
[?2004l
[?2004l
[?2004ltotal 40
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  3438 Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis  3730 Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 14762 Apr 18 21:26 shems_monitoring_server.py
total 40
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  3438 Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis  3730 Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 14762 Apr 18 21:26 shems_monitoring_server.py
total 40
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  3438 Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis  3730 Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis 14762 Apr 18 21:26 shems_monitoring_server.py
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccaaattt   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists"""
    max_retries = 5
    retry_delay = 10
    
    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute(
                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
                        (user_id,)
                    )
                    if cursor.fetchone()[0] > 0:
                        logger.info("Data exists, importing dashboards")
                        # Actual import logic here
                        return True
                    
                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)
        
        except Exception as e:
            logger.warning(f"Dashboard check failed: {str(e)}")
            time.sleep(retry_delay)
    
    logger.error("Dashboard import timeout - no data generated")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def import_grafana_dashboards():
    """Import dashboards from JSON files"""
    dashboard_files = {
        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
    }
    
    for name, filepath in dashboard_files.items():
        try:
            with open(filepath) as f:
                dashboard_json = json.load(f)
                response = requests.post(
                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
                    json=dashboard_json,
                    auth=('admin', 'admin'),
                    timeout=10
                )
                if response.status_code == 200:
                    logger.info(f"Successfully imported {name} dashboard")
                else:
                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
        except Exception as e:
            logger.error(f"Dashboard import error for {name}: {str(e)}")

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(u#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists"""
    max_retries = 5
    retry_delay = 10
    
    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute(
                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
                        (user_id,)
                    )
                    if cursor.fetchone()[0] > 0:
                        logger.info("Data exists, importing dashboards")
                        # Actual import logic here
                        return True
                    
                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)
        
        except Exception as e:
            logger.warning(f"Dashboard check failed: {str(e)}")
            time.sleep(retry_delay)
    
    logger.error("Dashboard import timeout - no data generated")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def import_grafana_dashboards():
    """Import dashboards from JSON files"""
    dashboard_files = {
        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
    }
    
    for name, filepath in dashboard_files.items():
        try:
            with open(filepath) as f:
                dashboard_json = json.load(f)
                response = requests.post(
                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
                    json=dashboard_json,
                    auth=('admin', 'admin'),
                    timeout=10
                )
                if response.status_code == 200:
                    logger.info(f"Successfully imported {name} dashboard")
                else:
                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
        except Exception as e:
            logger.error(f"Dashboard import error for {name}: {str(e)}")

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']

        # Verify data exists
        if not verify_dashboard_data(user_id):
            logger.warning(f"No data found for user {user_id}")
            return render_template('error.html',
                               message="No data available yet. Please wait..."), 202

        # Check/import dashboards if needed
        if not check_grafana_dashboards_exist():
            logger.info("Dashboards missing, attempting import")
            import_grafana_dashboards()
            time.sleep(2)  # Brief delay for import to complete

        return render_template('shems_dashboard_visuals.html')

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html',
                           message="Unable to load dashboard"), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    """Main application entry point"""
    try:
        # Register signal handlers
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        # Clean up any existing processes
        try:
            subprocess.run(
                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        # Verify database connectivity
        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        # Start the server
        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=False,
            threaded=True,
            use_reloader=False
        )

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()
rl_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']

        # Verify data exists
        if not verify_dashboard_data(user_id):
            logger.warning(f"No data found for user {user_id}")
            return render_template('error.html',
                               message="No data available yet. Please wait..."), 202

        # Check/import dashboards if needed
        if not check_grafana_dashboards_exist():
            logger.info("Dashboards missing, attempting import")
            import_grafana_dashboards()
            time.sleep(2)  # Brief delay for import to complete

        return render_template('shems_dashboard_visuals.html')

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html',
                           message="Unable to load dashboard"), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    """Main application entry point"""
    try:
        # Register signal handlers
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        # Clean up any existing processes
        try:
            subprocess.run(
                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        # Verify database connectivity
        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        # Start the server
        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=False,
            threaded=True,
            use_reloader=False
        )

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()
#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists"""
    max_retries = 5
    retry_delay = 10
    
    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute(
                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
                        (user_id,)
                    )
                    if cursor.fetchone()[0] > 0:
                        logger.info("Data exists, importing dashboards")
                        # Actual import logic here
                        return True
                    
                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)
        
        except Exception as e:
            logger.warning(f"Dashboard check failed: {str(e)}")
            time.sleep(retry_delay)
    
    logger.error("Dashboard import timeout - no data generated")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def import_grafana_dashboards():
    """Import dashboards from JSON files"""
    dashboard_files = {
        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
    }
    
    for name, filepath in dashboard_files.items():
        try:
            with open(filepath) as f:
                dashboard_json = json.load(f)
                response = requests.post(
                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
                    json=dashboard_json,
                    auth=('admin', 'admin'),
                    timeout=10
                )
                if response.status_code == 200:
                    logger.info(f"Successfully imported {name} dashboard")
                else:
                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
        except Exception as e:
            logger.error(f"Dashboard import error for {name}: {str(e)}")

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']

        # Verify data exists
        if not verify_dashboard_data(user_id):
            logger.warning(f"No data found for user {user_id}")
            return render_template('error.html',
                               message="No data available yet. Please wait..."), 202

        # Check/import dashboards if needed
        if not check_grafana_dashboards_exist():
            logger.info("Dashboards missing, attempting import")
            import_grafana_dashboards()
            time.sleep(2)  # Brief delay for import to complete

        return render_template('shems_dashboard_visuals.html')

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html',
                           message="Unable to load dashboard"), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    """Main application entry point"""
    try:
        # Register signal handlers
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        # Clean up any existing processes
        try:
            subprocess.run(
                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        # Verify database connectivity
        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        # Start the server
        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=False,
            threaded=True,
            use_reloader=False
        )

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   

[?2004l[?2004l
[?2004ltotal 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m wwwccc   ---lll   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l420 shems_monitoring_server.py
420 shems_monitoring_server.py
420 shems_monitoring_server.py
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccaaattt   ---nnn   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l     1	#!/usr/bin/env python3
     2	
     3	import os
     4	import sys
     5	import time
     6	import subprocess
     7	import logging
     8	from datetime import datetime, timedelta
     9	from functools import wraps
    10	from werkzeug.security import generate_password_hash, check_password_hash
    11	import secrets
    12	import pymysql
    13	from pymysql.cursors import DictCursor
    14	from pymysql import MySQLError
    15	from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
    16	
    17	# ===== Get Current PID =====
    18	current_pid = os.getpid()
    19	
    20	# ===== Configuration =====
    21	HTML_DIR = '/app/smarthome/dev/templates/'
    22	SCRIPT_DIR = '/app/smarthome/dev/bin'
    23	DB_DIR = '/app/smarthome/data/'
    24	LOG_DIR = '/app/smarthome/data/logs/'
    25	DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
    26	
    27	# Ensure directories exist
    28	os.makedirs(HTML_DIR, exist_ok=True)
    29	os.makedirs(SCRIPT_DIR, exist_ok=True)
    30	os.makedirs(DB_DIR, exist_ok=True)
    31	os.makedirs(LOG_DIR, exist_ok=True)
    32	
    33	# ===== Logging Configuration =====
    34	logging.basicConfig(
    35	    level=logging.DEBUG,
    36	    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    37	    handlers=[
    38	        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
    39	        logging.StreamHandler()
    40	    ]
    41	)
    42	logger = logging.getLogger('SHEMS-Server')
    43	
    44	# ===== Application Setup =====
    45	app = Flask(__name__, template_folder=HTML_DIR)
    46	app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
    47	app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
    48	app.config['SESSION_COOKIE_SECURE'] = True
    49	app.config['SESSION_COOKIE_HTTPONLY'] = True
    50	app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'
    51	
    52	# ===== Database Configuration =====
    53	class DatabaseManager:
    54	    MAX_RETRIES = 3
    55	    RETRY_DELAY = 2
    56	    
    57	    def __init__(self):
    58	        self.db_user = os.getenv('DB_USER', 'shems_mis')
    59	        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
    60	        self.db_name = os.getenv('DB_NAME', 'shems_db')
    61	        
    62	    def get_connection(self):
    63	        """Get a database connection with retry logic"""
    64	        attempts = 0
    65	        last_error = None
    66	        
    67	        while attempts < self.MAX_RETRIES:
    68	            try:
    69	                conn = pymysql.connect(
    70	                    host='localhost',
    71	                    user=self.db_user,
    72	                    password=self.db_pass,
    73	                    database=self.db_name,
    74	                    cursorclass=DictCursor,
    75	                    connect_timeout=5,
    76	                    autocommit=False
    77	                )
    78	                logger.info("Database connection established")
    79	                return conn
    80	            except MySQLError as e:
    81	                last_error = e
    82	                attempts += 1
    83	                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
    84	                time.sleep(self.RETRY_DELAY)
    85	        
    86	        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
    87	        raise ConnectionError(f"Could not connect to database: {str(last_error)}")
    88	
    89	db_manager = DatabaseManager()
    90	
    91	# ===== Helper Functions =====
    92	def get_pi_ip():
    93	    """Get Raspberry Pi IP address with fallback"""
    94	    try:
    95	        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
    96	        return ip if ip else '127.0.0.1'
    97	    except:
    98	        return '127.0.0.1'
    99	
   100	def is_service_running(service_name):
   101	    """Check if a systemd service is running"""
   102	    try:
   103	        result = subprocess.run(
   104	            ['systemctl', 'is-active', service_name],
   105	            stdout=subprocess.PIPE,
   106	            stderr=subprocess.PIPE,
   107	            text=True
   108	        )
   109	        return result.stdout.strip() == 'active'
   110	    except Exception as e:
   111	        logger.error(f"Service check failed for {service_name}: {str(e)}")
   112	        return False
   113	
   114	def validate_submission(form_data):
   115	    """Validate user submission data"""
   116	    required_fields = ['username', 'password', 'numDevices', 'numDays']
   117	    errors = []
   118	    
   119	    # Check required fields
   120	    for field in required_fields:
   121	        if field not in form_data or not form_data[field]:
   122	            errors.append(f"Missing required field: {field}")
   123	    
   124	    # Validate numeric fields
   125	    try:
   126	        num_devices = int(form_data.get('numDevices', 0))
   127	        if num_devices <= 0:
   128	            errors.append("Number of devices must be positive")
   129	    except ValueError:
   130	        errors.append("Invalid number of devices")
   131	    
   132	    try:
   133	        num_days = int(form_data.get('numDays', 0))
   134	        if num_days <= 0:
   135	            errors.append("Number of days must be positive")
   136	    except ValueError:
   137	        errors.append("Invalid number of days")
   138	    
   139	    return errors if errors else None
   140	
   141	def setup_grafana_dashboards(user_id):
   142	    """Import Grafana dashboards after data exists"""
   143	    max_retries = 5
   144	    retry_delay = 10
   145	    
   146	    for attempt in range(max_retries):
   147	        try:
   148	            with db_manager.get_connection() as conn:
   149	                with conn.cursor() as cursor:
   150	                    cursor.execute(
   151	                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
   152	                        (user_id,)
   153	                    )
   154	                    if cursor.fetchone()[0] > 0:
   155	                        logger.info("Data exists, importing dashboards")
   156	                        # Actual import logic here
   157	                        return True
   158	                    
   159	                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
   160	                    time.sleep(retry_delay)
   161	        
   162	        except Exception as e:
   163	            logger.warning(f"Dashboard check failed: {str(e)}")
   164	            time.sleep(retry_delay)
   165	    
   166	    logger.error("Dashboard import timeout - no data generated")
   167	    return False
   168	
   169	def check_grafana_dashboards_exist():
   170	    """Check if dashboards exist using Grafana API"""
   171	    try:
   172	        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
   173	        response = requests.get(
   174	            grafana_url,
   175	            auth=('admin', 'admin'),
   176	            timeout=5
   177	        )
   178	        return response.status_code == 200
   179	    except Exception as e:
   180	        logger.warning(f"Grafana API check failed: {str(e)}")
   181	        return False
   182	
   183	def import_grafana_dashboards():
   184	    """Import dashboards from JSON files"""
   185	    dashboard_files = {
   186	        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
   187	        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
   188	        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
   189	        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
   190	    }
   191	    
   192	    for name, filepath in dashboard_files.items():
   193	        try:
   194	            with open(filepath) as f:
   195	                dashboard_json = json.load(f)
   196	                response = requests.post(
   197	                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
   198	       1	#!/usr/bin/env python3
     2	
     3	import os
     4	import sys
     5	import time
     6	import subprocess
     7	import logging
     8	from datetime import datetime, timedelta
     9	from functools import wraps
    10	from werkzeug.security import generate_password_hash, check_password_hash
    11	import secrets
    12	import pymysql
    13	from pymysql.cursors import DictCursor
    14	from pymysql import MySQLError
    15	from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
    16	
    17	# ===== Get Current PID =====
    18	current_pid = os.getpid()
    19	
    20	# ===== Configuration =====
    21	HTML_DIR = '/app/smarthome/dev/templates/'
    22	SCRIPT_DIR = '/app/smarthome/dev/bin'
    23	DB_DIR = '/app/smarthome/data/'
    24	LOG_DIR = '/app/smarthome/data/logs/'
    25	DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
    26	
    27	# Ensure directories exist
    28	os.makedirs(HTML_DIR, exist_ok=True)
    29	os.makedirs(SCRIPT_DIR, exist_ok=True)
    30	os.makedirs(DB_DIR, exist_ok=True)
    31	os.makedirs(LOG_DIR, exist_ok=True)
    32	
    33	# ===== Logging Configuration =====
    34	logging.basicConfig(
    35	    level=logging.DEBUG,
    36	    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    37	    handlers=[
    38	        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
    39	        logging.StreamHandler()
    40	    ]
    41	)
    42	logger = logging.getLogger('SHEMS-Server')
    43	
    44	# ===== Application Setup =====
    45	app = Flask(__name__, template_folder=HTML_DIR)
    46	app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
    47	app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
    48	app.config['SESSION_COOKIE_SECURE'] = True
    49	app.config['SESSION_COOKIE_HTTPONLY'] = True
    50	app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'
    51	
    52	# ===== Database Configuration =====
    53	class DatabaseManager:
    54	    MAX_RETRIES = 3
    55	    RETRY_DELAY = 2
    56	    
    57	    def __init__(self):
    58	        self.db_user = os.getenv('DB_USER', 'shems_mis')
    59	        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
    60	        self.db_name = os.getenv('DB_NAME', 'shems_db')
    61	        
    62	    def get_connection(self):
    63	        """Get a database connection with retry logic"""
    64	        attempts = 0
    65	        last_error = None
    66	        
    67	        while attempts < self.MAX_RETRIES:
    68	            try:
    69	                conn = pymysql.connect(
    70	                    host='localhost',
    71	                    user=self.db_user,
    72	                    password=self.db_pass,
    73	                    database=self.db_name,
    74	                    cursorclass=DictCursor,
    75	                    connect_timeout=5,
    76	                    autocommit=False
    77	                )
    78	                logger.info("Database connection established")
    79	                return conn
    80	            except MySQLError as e:
    81	                last_error = e
    82	                attempts += 1
    83	                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
    84	                time.sleep(self.RETRY_DELAY)
    85	        
    86	        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
    87	        raise ConnectionError(f"Could not connect to database: {str(last_error)}")
    88	
    89	db_manager = DatabaseManager()
    90	
    91	# ===== Helper Functions =====
    92	def get_pi_ip():
    93	    """Get Raspberry Pi IP address with fallback"""
    94	    try:
    95	        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
    96	        return ip if ip else '127.0.0.1'
    97	    except:
    98	        return '127.0.0.1'
    99	
   100	def is_service_running(service_name):
   101	    """Check if a systemd service is running"""
   102	    try:
   103	        result = subprocess.run(
   104	            ['systemctl', 'is-active', service_name],
   105	            stdout=subprocess.PIPE,
   106	            stderr=subprocess.PIPE,
   107	            text=True
   108	        )
   109	        return result.stdout.strip() == 'active'
   110	    except Exception as e:
   111	        logger.error(f"Service check failed for {service_name}: {str(e)}")
   112	        return False
   113	
   114	def validate_submission(form_data):
   115	    """Validate user submission data"""
   116	    required_fields = ['username', 'password', 'numDevices', 'numDays']
   117	    errors = []
   118	    
   119	    # Check required fields
   120	    for field in required_fields:
   121	        if field not in form_data or not form_data[field]:
   122	            errors.append(f"Missing required field: {field}")
   123	    
   124	    # Validate numeric fields
   125	    try:
   126	        num_devices = int(form_data.get('numDevices', 0))
   127	        if num_devices <= 0:
   128	            errors.append("Number of devices must be positive")
   129	    except ValueError:
   130	        errors.append("Invalid number of devices")
   131	    
   132	    try:
   133	        num_days = int(form_data.get('numDays', 0))
   134	        if num_days <= 0:
   135	            errors.append("Number of days must be positive")
   136	    except ValueError:
   137	        errors.append("Invalid number of days")
   138	    
   139	    return errors if errors else None
   140	
   141	def setup_grafana_dashboards(user_id):
   142	    """Import Grafana dashboards after data exists"""
   143	    max_retries = 5
   144	    retry_delay = 10
   145	    
   146	    for attempt in range(max_retries):
   147	        try:
   148	            with db_manager.get_connection() as conn:
   149	                with conn.cursor() as cursor:
   150	                    cursor.execute(
   151	                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
   152	                        (user_id,)
   153	                    )
   154	                    if cursor.fetchone()[0] > 0:
   155	                        logger.info("Data exists, importing dashboards")
   156	                        # Actual import logic here
   157	                        return True
   158	                    
   159	                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
   160	                    time.sleep(retry_delay)
   161	        
   162	        except Exception as e:
   163	            logger.warning(f"Dashboard check failed: {str(e)}")
   164	            time.sleep(retry_delay)
   165	    
   166	    logger.error("Dashboard import timeout - no data generated")
   167	    return False
   168	
   169	def check_grafana_dashboards_exist():
   170	    """Check if dashboards exist using Grafana API"""
   171	    try:
   172	        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
   173	        response = requests.get(
   174	            grafana_url,
   175	            auth=('admin', 'admin'),
   176	            timeout=5
   177	        )
   178	        return response.status_code == 200
   179	    except Exception as e:
   180	        logger.warning(f"Grafana API check failed: {str(e)}")
   181	        return False
   182	
   183	def import_grafana_dashboards():
   184	    """Import dashboards from JSON files"""
   185	    dashboard_files = {
   186	        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
   187	        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
   188	        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
   189	        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
   190	    }
   191	    
   192	    for name, filepath in dashboard_files.items():
   193	        try:
   194	            with open(filepath) as f:
   195	                dashboard_json = json.load(f)
   196	                response = requests.post(
   197	                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
   198	                    json=dashboard_json,
   199	                    auth=('admin', 'admin'),
   200	                    timeout=10
   201	                )
   202	                if response.status_code == 200:
   203	                    logger.info(f"Successfully imported {name} dashboard")
   204	                else:
   205	                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
   206	        except Exception as e:
   207	            logger.error(f"Dashboard import error for {name}: {str(e)}")
   208	
   209	def verify_dashboard_data(user_id):
   210	    """Check if data exists for dashboard rendering"""
   211	    try:
   212	        with db_manager.get_connection() as conn:
   213	            with conn.cursor() as cursor:
   214	                # Check if user has any device data
   215	                cursor.execute(
   216	                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
   217	                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
   218	                    (user_id,)
   219	                )
   220	                return cursor.fetchone()[0] > 0
   221	    except Exception as e:
   222	        logger.error(f"Data verification failed: {str(e)}")
   223	        return False
   224	
   225	# ===== Decorators =====
   226	def login_required(f):
   227	    """Decorator to ensure user is logged in"""
   228	    @wraps(f)
   229	    def decorated_function(*args, **kwargs):
   230	        if 'user_id' not in session:
   231	            logger.warning("Unauthorized access attempt")
   232	            return redirect(url_for('index'))
   233	        return f(*args, **kwargs)
   234	    return decorated_function
   235	
   236	def handle_db_errors(f):
   237	    @wraps(f)
   238	    def decorated_function(*args, **kwargs):
   239	        try:
   240	            return f(*args, **kwargs)
   241	        except MySQLError as e:
   242	            logger.error(f"Database error in {f.__name__}: {str(e)}")
   243	            abort(500, description="Database operation failed")
   244	        except Exception as e:
   245	            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
   246	            abort(500)
   247	    return decorated_function
   248	
   249	# ===== Routes =====
   250	@app.route('/')
   251	def index():
   252	    try:
   253	        if 'user_id' in session:
   254	            return redirect(url_for('dashboard'))
   255	        return render_template('shems_dashboard_input.html')
   256	    except Exception as e:
   257	        logger.error(f"Index route error: {str(e)}")
   258	        return render_template('error.html'), 500
   259	
   260	@app.route('/api/access-points')
   261	def access_points():
   262	    pi_ip = get_pi_ip()
   263	    access_points = [f"http://{pi_ip}:5000"]
   264	    
   265	    try:
   266	        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
   267	        if tailscale_ip:
   268	            access_points.append(f"http://{tailscale_ip}:5000")
   269	    except:
   270	        pass
   271	        
   272	    return jsonify({
   273	        'access_points': access_points,
   274	        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
   275	    })
   276	
   277	@app.route('/submit', methods=['POST'])
   278	@handle_db_errors
   279	def submit():
   280	    try:
   281	        # Validate input
   282	        if errors := validate_submission(request.form):
   283	            logger.warning(f"Invalid submission: {errors}")
   284	            return jsonify({"errors": errors}), 400
   285	
   286	        username = request.form['username']
   287	        password = request.form['password']
   288	        num_devices = int(request.form['numDevices'])
   289	        num_days = int(request.form['numDays'])
   290	
   291	        with db_manager.get_connection() as conn:
   292	            with conn.cursor() as cursor:
   293	                # Check existing user
   294	                cursor.execute(
   295	                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
   296	                    (username,)
   297	                )
   298	                user = cursor.fetchone()
   299	
   300	                if user:
   301	                    if not check_password_hash(user['PasswordHash'], password):
   302	                        logger.warning("Invalid password attempt")
   303	                        return jsonify({"error": "Invalid credentials"}), 401
   304	                    user_id = user['UserId']
   305	                else:
   306	                    # Create new user
   307	                    password_hash = generate_password_hash(password)
   308	                    cursor.execute(
   309	                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
   310	                        (username, password_hash)
   311	                    )
   312	                    user_id = cursor.lastrowid
   313	                    conn.commit()
   314	                    logger.info(f"Created new user {user_id}")
   315	
   316	                # Store session
   317	                session.permanent = True
   318	                session['user_id'] = user_id
   319	                session['username'] = username
   320	                logger.debug(f"Session created for {user_id}")
   321	
   322	                # Start data simulation
   323	                try:
   324	                    subprocess.Popen([
   325	                        sys.executable,
   326	                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
   327	                        str(user_id),
   328	                        str(num_devices),
   329	                        str(num_days)
   330	                    ])
   331	                    logger.info(f"Started simulation for user {user_id}")
   332	                except Exception as e:
   333	                    logger.error(f"Simulation startup failed: {str(e)}")
   334	                    return jsonify({"error": "Data generation failed"}), 500
   335	
   336	                # Setup dashboards after delay
   337	                time.sleep(DASHBOARD_IMPORT_DELAY)
   338	                setup_grafana_dashboards(user_id)
   339	
   340	                return redirect(url_for('dashboard'))
   341	
   342	    except Exception as e:
   343	        logger.critical(f"Submit error: {str(e)}", exc_info=True)
   344	        return jsonify({"error": "Internal server error"}), 500
   345	
   346	@app.route('/dashboard')
   347	@login_required
   348	def dashboard():
   349	    try:
   350	        user_id = session['user_id']
   351	
   352	        # Verify data exists
   353	        if not verify_dashboard_data(user_id):
   354	            logger.warning(f"No data found for user {user_id}")
   355	            return render_template('error.html',
   356	                               message="No data available yet. Please wait..."), 202
   357	
   358	        # Check/import dashboards if needed
   359	        if not check_grafana_dashboards_exist():
   360	            logger.info("Dashboards missing, attempting import")
   361	            import_grafana_dashboards()
   362	            time.sleep(2)  # Brief delay for import to complete
   363	
   364	        return render_template('shems_dashboard_visuals.html')
   365	
   366	    except Exception as e:
   367	        logger.error(f"Dashboard error: {str(e)}")
   368	        return render_template('error.html',
   369	                           message="Unable to load dashboard"), 500
   370	
   371	# ===== Main Execution =====
   372	def safe_shutdown(signum, frame):
   373	    """Handle shutdown signals gracefully"""
   374	    logger.info("Received shutdown signal, terminating...")
   375	    sys.exit(0)
   376	
   377	def main():
   378	    """Main application entry point"""
   379	    try:
   380	        # Register signal handlers
   381	        import signal
   382	        signal.signal(signal.SIGINT, safe_shutdown)
   383	        signal.signal(signal.SIGTERM, safe_shutdown)
   384	
   385	        # Clean up any existing processes
   386	        try                  json=dashboard_json,
   199	                    auth=('admin', 'admin'),
   200	                    timeout=10
   201	                )
   202	                if response.status_code == 200:
   203	                    logger.info(f"Successfully imported {name} dashboard")
   204	                else:
   205	                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
   206	        except Exception as e:
   207	            logger.error(f"Dashboard import error for {name}: {str(e)}")
   208	
   209	def verify_dashboard_data(user_id):
   210	    """Check if data exists for dashboard rendering"""
   211	    try:
   212	        with db_manager.get_connection() as conn:
   213	            with conn.cursor() as cursor:
   214	                # Check if user has any device data
   215	                cursor.execute(
   216	                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
   217	                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
   218	                    (user_id,)
   219	                )
   220	                return cursor.fetchone()[0] > 0
   221	    except Exception as e:
   222	        logger.error(f"Data verification failed: {str(e)}")
   223	        return False
   224	
   225	# ===== Decorators =====
   226	def login_required(f):
   227	    """Decorator to ensure user is logged in"""
   228	    @wraps(f)
   229	    def decorated_function(*args, **kwargs):
   230	        if 'user_id' not in session:
   231	            logger.warning("Unauthorized access attempt")
   232	            return redirect(url_for('index'))
   233	        return f(*args, **kwargs)
   234	    return decorated_function
   235	
   236	def handle_db_errors(f):
   237	    @wraps(f)
   238	    def decorated_function(*args, **kwargs):
   239	        try:
   240	            return f(*args, **kwargs)
   241	        except MySQLError as e:
   242	            logger.error(f"Database error in {f.__name__}: {str(e)}")
   243	            abort(500, description="Database operation failed")
   244	        except Exception as e:
   245	            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
   246	            abort(500)
   247	    return decorated_function
   248	
   249	# ===== Routes =====
   250	@app.route('/')
   251	def index():
   252	    try:
   253	        if 'user_id' in session:
   254	            return redirect(url_for('dashboard'))
   255	        return render_template('shems_dashboard_input.html')
   256	    except Exception as e:
   257	        logger.error(f"Index route error: {str(e)}")
   258	        return render_template('error.html'), 500
   259	
   260	@app.route('/api/access-points')
   261	def access_points():
   262	    pi_ip = get_pi_ip()
   263	    access_points = [f"http://{pi_ip}:5000"]
   264	    
   265	    try:
   266	        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
   267	        if tailscale_ip:
   268	            access_points.append(f"http://{tailscale_ip}:5000")
   269	    except:
   270	        pass
   271	        
   272	    return jsonify({
   273	        'access_points': access_points,
   274	        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
   275	    })
   276	
   277	@app.route('/submit', methods=['POST'])
   278	@handle_db_errors
   279	def submit():
   280	    try:
   281	        # Validate input
   282	        if errors := validate_submission(request.form):
   283	            logger.warning(f"Invalid submission: {errors}")
   284	            return jsonify({"errors": errors}), 400
   285	
   286	        username = request.form['username']
   287	        password = request.form['password']
   288	        num_devices = int(request.form['numDevices'])
   289	        num_days = int(request.form['numDays'])
   290	
   291	        with db_manager.get_connection() as conn:
   292	            with conn.cursor() as cursor:
   293	                # Check existing user
   294	                cursor.execute(
   295	                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
   296	                    (username,)
   297	                )
   298	                user = cursor.fetchone()
   299	
   300	                if user:
   301	                    if not check_password_hash(user['PasswordHash'], password):
   302	                        logger.warning("Invalid password attempt")
   303	                        return jsonify({"error": "Invalid credentials"}), 401
   304	                    user_id = user['UserId']
   305	                else:
   306	                    # Create new user
   307	                    password_hash = generate_password_hash(password)
   308	                    cursor.execute(
   309	                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
   310	                        (username, password_hash)
   311	                    )
   312	                    user_id = cursor.lastrowid
   313	                    conn.commit()
   314	                    logger.info(f"Created new user {user_id}")
   315	
   316	                # Store session
   317	                session.permanent = True
   318	                session['user_id'] = user_id
   319	                session['username'] = username
   320	                logger.debug(f"Session created for {user_id}")
   321	
   322	                # Start data simulation
   323	                try:
   324	                    subprocess.Popen([
   325	                        sys.executable,
   326	                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
   327	                        str(user_id),
   328	                        str(num_devices),
   329	                        str(num_days)
   330	                    ])
   331	                    logger.info(f"Started simulation for user {user_id}")
   332	                except Exception as e:
   333	                    logger.error(f"Simulation startup failed: {str(e)}")
   334	                    return jsonify({"error": "Data generation failed"}), 500
   335	
   336	                # Setup dashboards after delay
   337	                time.sleep(DASHBOARD_IMPORT_DELAY)
   338	                setup_grafana_dashboards(user_id)
   339	
   340	                return redirect(url_for('dashboard'))
   341	
   342	    except Exception as e:
   343	        logger.critical(f"Submit error: {str(e)}", exc_info=True)
   344	        return jsonify({"error": "Internal server error"}), 500
   345	
   346	@app.route('/dashboard')
   347	@login_required
   348	def dashboard():
   349	    try:
   350	        user_id = session['user_id']
   351	
   352	        # Verify data exists
   353	        if not verify_dashboard_data(user_id):
   354	            logger.warning(f"No data found for user {user_id}")
   355	            return render_template('error.html',
   356	                               message="No data available yet. Please wait..."), 202
   357	
   358	        # Check/import dashboards if needed
   359	        if not check_grafana_dashboards_exist():
   360	            logger.info("Dashboards missing, attempting import")
   361	            import_grafana_dashboards()
   362	            time.sleep(2)  # Brief delay for import to complete
   363	
   364	        return render_template('shems_dashboard_visuals.html')
   365	
   366	    except Exception as e:
   367	        logger.error(f"Dashboard error: {str(e)}")
   368	        return render_template('error.html',
   369	                           message="Unable to load dashboard"), 500
   370	
   371	# ===== Main Execution =====
   372	def safe_shutdown(signum, frame):
   373	    """Handle shutdown signals gracefully"""
   374	    logger.info("Received shutdown signal, terminating...")
   375	    sys.exit(0)
   376	
   377	def main():
   378	    """Main application entry point"""
   379	    try:
   380	        # Register signal handlers
   381	        import signal
   382	        signal.signal(signal.SIGINT, safe_shutdown)
   383	        signal.signal(signal.SIGTERM, safe_shutdown)
   384	
   385	        # Clean up any existing processes
   386	        try:
   387	            subprocess.run(
   388	                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
   389	                stderr=subprocess.DEVNULL,
   390	                timeout=5
   391	            )
   392	        except subprocess.TimeoutExpired:
   393	            logger.warning("Process cleanup timed out")
   394	        except Exception as e:
   395	            logger.warning(f"Process cleanup failed: {str(e)}")
   396	
   397	        # Verify database connectivity
   398	        try:
   399	            test_conn = db_manager.get_connection()
   400	            test_conn.close()
   401	        except Exception as e:
   402	            logger.critical(f"Startup database test failed: {str(e)}")
   403	            sys.exit(1)
   404	
   405	        # Start the server
   406	        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
   407	        app.run(
   408	            host='0.0.0.0',
   409	            port=5000,
   410	            debug=False,
   411	            threaded=True,
   412	            use_reloader=False
   413	        )
   414	
   415	    except Exception as e:
   416	        logger.critical(f"Fatal startup error: {str(e)}")
   417	        sys.exit(1)
   418	
   419	if __name__ == '__main__':
   420	    main()
:
   387	            subprocess.run(
   388	                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
   389	                stderr=subprocess.DEVNULL,
   390	                timeout=5
   391	            )
   392	        except subprocess.TimeoutExpired:
   393	            logger.warning("Process cleanup timed out")
   394	        except Exception as e:
   395	            logger.warning(f"Process cleanup failed: {str(e)}")
   396	
   397	        # Verify database connectivity
   398	        try:
   399	            test_conn = db_manager.get_connection()
   400	            test_conn.close()
   401	        except Exception as e:
   402	            logger.critical(f"Startup database test failed: {str(e)}")
   403	            sys.exit(1)
   404	
   405	        # Start the server
   406	        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
   407	        app.run(
   408	            host='0.0.0.0',
   409	            port=5000,
   410	            debug=False,
   411	            threaded=True,
   412	            use_reloader=False
   413	        )
   414	
   415	    except Exception as e:
   416	        logger.critical(f"Fatal startup error: {str(e)}")
   417	        sys.exit(1)
   418	
   419	if __name__ == '__main__':
   420	    main()
     1	#!/usr/bin/env python3
     2	
     3	import os
     4	import sys
     5	import time
     6	import subprocess
     7	import logging
     8	from datetime import datetime, timedelta
     9	from functools import wraps
    10	from werkzeug.security import generate_password_hash, check_password_hash
    11	import secrets
    12	import pymysql
    13	from pymysql.cursors import DictCursor
    14	from pymysql import MySQLError
    15	from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
    16	
    17	# ===== Get Current PID =====
    18	current_pid = os.getpid()
    19	
    20	# ===== Configuration =====
    21	HTML_DIR = '/app/smarthome/dev/templates/'
    22	SCRIPT_DIR = '/app/smarthome/dev/bin'
    23	DB_DIR = '/app/smarthome/data/'
    24	LOG_DIR = '/app/smarthome/data/logs/'
    25	DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
    26	
    27	# Ensure directories exist
    28	os.makedirs(HTML_DIR, exist_ok=True)
    29	os.makedirs(SCRIPT_DIR, exist_ok=True)
    30	os.makedirs(DB_DIR, exist_ok=True)
    31	os.makedirs(LOG_DIR, exist_ok=True)
    32	
    33	# ===== Logging Configuration =====
    34	logging.basicConfig(
    35	    level=logging.DEBUG,
    36	    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    37	    handlers=[
    38	        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
    39	        logging.StreamHandler()
    40	    ]
    41	)
    42	logger = logging.getLogger('SHEMS-Server')
    43	
    44	# ===== Application Setup =====
    45	app = Flask(__name__, template_folder=HTML_DIR)
    46	app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
    47	app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
    48	app.config['SESSION_COOKIE_SECURE'] = True
    49	app.config['SESSION_COOKIE_HTTPONLY'] = True
    50	app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'
    51	
    52	# ===== Database Configuration =====
    53	class DatabaseManager:
    54	    MAX_RETRIES = 3
    55	    RETRY_DELAY = 2
    56	    
    57	    def __init__(self):
    58	        self.db_user = os.getenv('DB_USER', 'shems_mis')
    59	        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
    60	        self.db_name = os.getenv('DB_NAME', 'shems_db')
    61	        
    62	    def get_connection(self):
    63	        """Get a database connection with retry logic"""
    64	        attempts = 0
    65	        last_error = None
    66	        
    67	        while attempts < self.MAX_RETRIES:
    68	            try:
    69	                conn = pymysql.connect(
    70	                    host='localhost',
    71	                    user=self.db_user,
    72	                    password=self.db_pass,
    73	                    database=self.db_name,
    74	                    cursorclass=DictCursor,
    75	                    connect_timeout=5,
    76	                    autocommit=False
    77	                )
    78	                logger.info("Database connection established")
    79	                return conn
    80	            except MySQLError as e:
    81	                last_error = e
    82	                attempts += 1
    83	                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
    84	                time.sleep(self.RETRY_DELAY)
    85	        
    86	        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
    87	        raise ConnectionError(f"Could not connect to database: {str(last_error)}")
    88	
    89	db_manager = DatabaseManager()
    90	
    91	# ===== Helper Functions =====
    92	def get_pi_ip():
    93	    """Get Raspberry Pi IP address with fallback"""
    94	    try:
    95	        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
    96	        return ip if ip else '127.0.0.1'
    97	    except:
    98	        return '127.0.0.1'
    99	
   100	def is_service_running(service_name):
   101	    """Check if a systemd service is running"""
   102	    try:
   103	        result = subprocess.run(
   104	            ['systemctl', 'is-active', service_name],
   105	            stdout=subprocess.PIPE,
   106	            stderr=subprocess.PIPE,
   107	            text=True
   108	        )
   109	        return result.stdout.strip() == 'active'
   110	    except Exception as e:
   111	        logger.error(f"Service check failed for {service_name}: {str(e)}")
   112	        return False
   113	
   114	def validate_submission(form_data):
   115	    """Validate user submission data"""
   116	    required_fields = ['username', 'password', 'numDevices', 'numDays']
   117	    errors = []
   118	    
   119	    # Check required fields
   120	    for field in required_fields:
   121	        if field not in form_data or not form_data[field]:
   122	            errors.append(f"Missing required field: {field}")
   123	    
   124	    # Validate numeric fields
   125	    try:
   126	        num_devices = int(form_data.get('numDevices', 0))
   127	        if num_devices <= 0:
   128	            errors.append("Number of devices must be positive")
   129	    except ValueError:
   130	        errors.append("Invalid number of devices")
   131	    
   132	    try:
   133	        num_days = int(form_data.get('numDays', 0))
   134	        if num_days <= 0:
   135	            errors.append("Number of days must be positive")
   136	    except ValueError:
   137	        errors.append("Invalid number of days")
   138	    
   139	    return errors if errors else None
   140	
   141	def setup_grafana_dashboards(user_id):
   142	    """Import Grafana dashboards after data exists"""
   143	    max_retries = 5
   144	    retry_delay = 10
   145	    
   146	    for attempt in range(max_retries):
   147	        try:
   148	            with db_manager.get_connection() as conn:
   149	                with conn.cursor() as cursor:
   150	                    cursor.execute(
   151	                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
   152	                        (user_id,)
   153	                    )
   154	                    if cursor.fetchone()[0] > 0:
   155	                        logger.info("Data exists, importing dashboards")
   156	                        # Actual import logic here
   157	                        return True
   158	                    
   159	                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
   160	                    time.sleep(retry_delay)
   161	        
   162	        except Exception as e:
   163	            logger.warning(f"Dashboard check failed: {str(e)}")
   164	            time.sleep(retry_delay)
   165	    
   166	    logger.error("Dashboard import timeout - no data generated")
   167	    return False
   168	
   169	def check_grafana_dashboards_exist():
   170	    """Check if dashboards exist using Grafana API"""
   171	    try:
   172	        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
   173	        response = requests.get(
   174	            grafana_url,
   175	            auth=('admin', 'admin'),
   176	            timeout=5
   177	        )
   178	        return response.status_code == 200
   179	    except Exception as e:
   180	        logger.warning(f"Grafana API check failed: {str(e)}")
   181	        return False
   182	
   183	def import_grafana_dashboards():
   184	    """Import dashboards from JSON files"""
   185	    dashboard_files = {
   186	        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
   187	        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
   188	        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
   189	        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
   190	    }
   191	    
   192	    for name, filepath in dashboard_files.items():
   193	        try:
   194	            with open(filepath) as f:
   195	                dashboard_json = json.load(f)
   196	                response = requests.post(
   197	                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
   198	  [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m                   json=dashboard_json,
   199	                    auth=('admin', 'admin'),
   200	                    timeout=10
   201	                )
   202	                if response.status_code == 200:
   203	                    logger.info(f"Successfully imported {name} dashboard")
   204	                else:
   205	                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
   206	        except Exception as e:
   207	            logger.error(f"Dashboard import error for {name}: {str(e)}")
   208	
   209	def verify_dashboard_data(user_id):
   210	    """Check if data exists for dashboard rendering"""
   211	    try:
   212	        with db_manager.get_connection() as conn:
   213	            with conn.cursor() as cursor:
   214	                # Check if user has any device data
   215	                cursor.execute(
   216	                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
   217	                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
   218	                    (user_id,)
   219	                )
   220	                return cursor.fetchone()[0] > 0
   221	    except Exception as e:
   222	        logger.error(f"Data verification failed: {str(e)}")
   223	        return False
   224	
   225	# ===== Decorators =====
   226	def login_required(f):
   227	    """Decorator to ensure user is logged in"""
   228	    @wraps(f)
   229	    def decorated_function(*args, **kwargs):
   230	        if 'user_id' not in session:
   231	            logger.warning("Unauthorized access attempt")
   232	            return redirect(url_for('index'))
   233	        return f(*args, **kwargs)
   234	    return decorated_function
   235	
   236	def handle_db_errors(f):
   237	    @wraps(f)
   238	    def decorated_function(*args, **kwargs):
   239	        try:
   240	            return f(*args, **kwargs)
   241	        except MySQLError as e:
   242	            logger.error(f"Database error in {f.__name__}: {str(e)}")
   243	            abort(500, description="Database operation failed")
   244	        except Exception as e:
   245	            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
   246	            abort(500)
   247	    return decorated_function
   248	
   249	# ===== Routes =====
   250	@app.route('/')
   251	def index():
   252	    try:
   253	        if 'user_id' in session:
   254	            return redirect(url_for('dashboard'))
   255	        return render_template('shems_dashboard_input.html')
   256	    except Exception as e:
   257	        logger.error(f"Index route error: {str(e)}")
   258	        return render_template('error.html'), 500
   259	
   260	@app.route('/api/access-points')
   261	def access_points():
   262	    pi_ip = get_pi_ip()
   263	    access_points = [f"http://{pi_ip}:5000"]
   264	    
   265	    try:
   266	        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
   267	        if tailscale_ip:
   268	            access_points.append(f"http://{tailscale_ip}:5000")
   269	    except:
   270	        pass
   271	        
   272	    return jsonify({
   273	        'access_points': access_points,
   274	        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
   275	    })
   276	
   277	@app.route('/submit', methods=['POST'])
   278	@handle_db_errors
   279	def submit():
   280	    try:
   281	        # Validate input
   282	        if errors := validate_submission(request.form):
   283	            logger.warning(f"Invalid submission: {errors}")
   284	            return jsonify({"errors": errors}), 400
   285	
   286	        username = request.form['username']
   287	        password = request.form['password']
   288	        num_devices = int(request.form['numDevices'])
   289	        num_days = int(request.form['numDays'])
   290	
   291	        with db_manager.get_connection() as conn:
   292	            with conn.cursor() as cursor:
   293	                # Check existing user
   294	                cursor.execute(
   295	                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
   296	                    (username,)
   297	                )
   298	                user = cursor.fetchone()
   299	
   300	                if user:
   301	                    if not check_password_hash(user['PasswordHash'], password):
   302	                        logger.warning("Invalid password attempt")
   303	                        return jsonify({"error": "Invalid credentials"}), 401
   304	                    user_id = user['UserId']
   305	                else:
   306	                    # Create new user
   307	                    password_hash = generate_password_hash(password)
   308	                    cursor.execute(
   309	                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
   310	                        (username, password_hash)
   311	                    )
   312	                    user_id = cursor.lastrowid
   313	                    conn.commit()
   314	                    logger.info(f"Created new user {user_id}")
   315	
   316	                # Store session
   317	                session.permanent = True
   318	                session['user_id'] = user_id
   319	                session['username'] = username
   320	                logger.debug(f"Session created for {user_id}")
   321	
   322	                # Start data simulation
   323	                try:
   324	                    subprocess.Popen([
   325	                        sys.executable,
   326	                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
   327	                        str(user_id),
   328	                        str(num_devices),
   329	                        str(num_days)
   330	                    ])
   331	                    logger.info(f"Started simulation for user {user_id}")
   332	                except Exception as e:
   333	                    logger.error(f"Simulation startup failed: {str(e)}")
   334	                    return jsonify({"error": "Data generation failed"}), 500
   335	
   336	                # Setup dashboards after delay
   337	                time.sleep(DASHBOARD_IMPORT_DELAY)
   338	                setup_grafana_dashboards(user_id)
   339	
   340	                return redirect(url_for('dashboard'))
   341	
   342	    except Exception as e:
   343	        logger.critical(f"Submit error: {str(e)}", exc_info=True)
   344	        return jsonify({"error": "Internal server error"}), 500
   345	
   346	@app.route('/dashboard')
   347	@login_required
   348	def dashboard():
   349	    try:
   350	        user_id = session['user_id']
   351	
   352	        # Verify data exists
   353	        if not verify_dashboard_data(user_id):
   354	            logger.warning(f"No data found for user {user_id}")
   355	            return render_template('error.html',
   356	                               message="No data available yet. Please wait..."), 202
   357	
   358	        # Check/import dashboards if needed
   359	        if not check_grafana_dashboards_exist():
   360	            logger.info("Dashboards missing, attempting import")
   361	            import_grafana_dashboards()
   362	            time.sleep(2)  # Brief delay for import to complete
   363	
   364	        return render_template('shems_dashboard_visuals.html')
   365	
   366	    except Exception as e:
   367	        logger.error(f"Dashboard error: {str(e)}")
   368	        return render_template('error.html',
   369	                           message="Unable to load dashboard"), 500
   370	
   371	# ===== Main Execution =====
   372	def safe_shutdown(signum, frame):
   373	    """Handle shutdown signals gracefully"""
   374	    logger.info("Received shutdown signal, terminating...")
   375	    sys.exit(0)
   376	
   377	def main():
   378	    """Main application entry point"""
   379	    try:
   380	        # Register signal handlers
   381	        import signal
   382	        signal.signal(signal.SIGINT, safe_shutdown)
   383	        signal.signal(signal.SIGTERM, safe_shutdown)
   384	
   385	        # Clean up any existing processes
   386	        try:
   387	            subprocess.run(
   388	                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
   389	                stderr=subprocess.DEVNULL,
   390	                timeout=5
   391	            )
   392	        except subprocess.TimeoutExpired:
   393	            logger.warning("Process cleanup timed out")
   394	        except Exception as e:
   395	            logger.warning(f"Process cleanup failed: {str(e)}")
   396	
   397	        # Verify database connectivity
   398	        try:
   399	            test_conn = db_manager.get_connection()
   400	            test_conn.close()
   401	        except Exception as e:
   402	            logger.critical(f"Startup database test failed: {str(e)}")
   403	            sys.exit(1)
   404	
   405	        # Start the server
   406	        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
   407	        app.run(
   408	            host='0.0.0.0',
   409	            port=5000,
   410	            debug=False,
   411	            threaded=True,
   412	            use_reloader=False
   413	        )
   414	
   415	    except Exception as e:
   416	        logger.critical(f"Fatal startup error: {str(e)}")
   417	        sys.exit(1)
   418	
   419	if __name__ == '__main__':
   420	    main()
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh
[?2004l
[?2004l
[?2004ltotal 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m mmmvvv   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lmv: missing destination file operand after 'shems_monitoring_server.py'
mv: missing destination file operand after 'shems_monitoring_server.py'
Try 'mv --help' for more information.
mv: missing destination file operand after 'shems_monitoring_server.py'
Try 'mv --help' for more information.
Try 'mv --help' for more information.
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m mv shems_monitoring_server.pymv shems_monitoring_server.pymv shems_monitoring_server.py   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.pyshems_monitoring_server.pyshems_monitoring_server.py___bbbkkkppp


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   

[?2004l
[?2004l[?2004ltotal 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py_bkp
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py_bkp
total 40K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py_bkp
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   rrrmmm   ---rrrfff   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[K[K[Krrrmmm   ---rrrfff   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" [New File][2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[m    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)[2;16H[K[3;1H[K[4;1Hdef main():[4;12H[K[5;1H    try:[5;9H[K[6;1H        import signal[6;22H[K[7;1H        signal.signal(signal.SIGINT, safe_shutdown)[7;52H[K[8;1H        signal.signal(signal.SIGTERM, safe_shutdown)[8;53H[K[9;1H[K[10;1H        try:[10;13H[K[11;1H            subprocess.run([11;28H[K[12;1H                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[12;100H[K[13;1H                stderr=subprocess.DEVNULL,[13;43H[K[14;1H                timeout=5[14;26H[K[15;1H            )[15;14H[K[16;1H        except subprocess.TimeoutExpired:[16;42H[K[17;1H            logger.warning("Process cleanup timed out")[17;56H[K[18;1H        except Exception as e:[18;31H[K[19;1H            logger.warning(f"Process cleanup failed: {str(e)}")[19;64H[K[20;1H[K[21;1H        try:[21;13H[K[22;1H            test_conn = db_manager.get_connection()[22;52H[K[23;1H            test_conn.close()[23;30H[K[24;1H        except Exception as e:[24;31H[K[25;1H            logger.critical(f"Startup database test failed: {str(e)}")[25;71H[K[26;1H            sys.exit(1)[26;24H[K[27;1H[K[28;1H        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[28;80H[K[29;1H        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[29;91H[K[30;1H[K[31;1H    except Exception as e:[31;27H[K[32;1H        logger.critical(f"Fatal startup error: {str(e)}")[32;58H[K[33;1H        sys.exit(1)[33;20H[K[34;1H[K[35;1Hif __name__ == '__main__':[35;27H[K[36;1H    main()[36;11H[K[37;1H[K[37;1H[?25h[?25l[m    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)[2;16H[K[3;1H[K[4;1Hdef main():[4;12H[K[5;1H    try:[5;9H[K[6;1H        import signal[6;22H[K[7;1H        signal.signal(signal.SIGINT, safe_shutdown)[7;52H[K[8;1H        signal.signal(signal.SIGTERM, safe_shutdown)[8;53H[K[9;1H[K[10;1H        try:[10;13H[K[11;1H            subprocess.run([11;28H[K[12;1H                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[12;100H[K[13;1H                stderr=subprocess.DEVNULL,[13;43H[K[14;1H                timeout=5[14;26H[K[15;1H            )[15;14H[K[16;1H        except subprocess.TimeoutExpired:[16;42H[K[17;1H            logger.warning("Process cleanup timed out")[17;56H[K[18;1H        except Exception as e:[18;31H[K[19;1H            logger.warning(f"Process cleanup failed: {str(e)}")[19;64H[K[20;1H[K[21;1H        try:[21;13H[K[22;1H            test_conn = db_manager.get_connection()[22;52H[K[23;1H            test_conn.close()[23;30H[K[24;1H        except Exception as e:[24;31H[K[25;1H            logger.critical(f"Startup database test failed: {str(e)}")[25;71H[K[26;1H            sys.exit(1)[26;24H[K[27;1H[K[28;1H        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[28;80H[K[29;1H        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[29;91H[K[30;1H[K[31;1H    except Exception as e:[31;27H[K[32;1H        logger.critical(f"Fatal startup error: {str(e)}")[32;58H[K[33;1H        sys.exit(1)[33;20H[K[34;1H[K[35;1Hif __name__ == '__main__':[35;27H[K[36;1H    main()[36;11H[K[37;1H[K[37;1H[?25h[?25l[m    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)[2;16H[K[3;1H[K[4;1Hdef main():[4;12H[K[5;1H    try:[5;9H[K[6;1H        import signal[6;22H[K[7;1H        signal.signal(signal.SIGINT, safe_shutdown)[7;52H[K[8;1H        signal.signal(signal.SIGTERM, safe_shutdown)[8;53H[K[9;1H[K[10;1H        try:[10;13H[K[11;1H            subprocess.run([11;28H[K[12;1H                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[12;100H[K[13;1H                stderr=subprocess.DEVNULL,[13;43H[K[14;1H                timeout=5[14;26H[K[15;1H            )[15;14H[K[16;1H        except subprocess.TimeoutExpired:[16;42H[K[17;1H            logger.warning("Process cleanup timed out")[17;56H[K[18;1H        except Exception as e:[18;31H[K[19;1H            logger.warning(f"Process cleanup failed: {str(e)}")[19;64H[K[20;1H[K[21;1H        try:[21;13H[K[22;1H            test_conn = db_manager.get_connection()[22;52H[K[23;1H            test_conn.close()[23;30H[K[24;1H        except Exception as e:[24;31H[K[25;1H            logger.critical(f"Startup database test failed: {str(e)}")[25;71H[K[26;1H            sys.exit(1)[26;24H[K[27;1H[K[28;1H        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[28;80H[K[29;1H        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[29;91H[K[30;1H[K[31;1H    except Exception as e:[31;27H[K[32;1H        logger.critical(f"Fatal startup error: {str(e)}")[32;58H[K[33;1H        sys.exit(1)[33;20H[K[34;1H[K[35;1Hif __name__ == '__main__':[35;27H[K[36;1H    main()[36;11H[K[37;1H[K[37;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" [New File] 298 lines, 11054 bytes written [New File] 298 lines, 11054 bytes written [New File] 298 lines, 11054 bytes written[23;2t[23;2t[23;2t[23;1t[23;1t[23;1t
[?2004l[?1l>
[?2004l[?1l>
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[4@rm -rf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@rm -rf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@rm -rf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -lrth [Kls -lrth [Kls -lrth [Kmv shems_monitoring_server.py shems_monitoring_server.py_bkpmv shems_monitoring_server.py shems_monitoring_server.py_bkpmv shems_monitoring_server.py shems_monitoring_server.py_bkp[K[K[Kls -lrth[Kls -lrth[Kls -lrth[Kcat -n shems_monitoring_server.pycat -n shems_monitoring_server.pycat -n shems_monitoring_server.py[1Pwc -l[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pwc -l[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pwc -l[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -lrth [Kls -lrth [Kls -lrth [Kcat shems_monitoring_server.pycat shems_monitoring_server.pycat shems_monitoring_server.pyls -lrt [Kls -lrt [Kls -lrt [Kvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.pyls -lrth [Kls -lrth [Kls -lrth [K./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shjournalctl -u grafana-server -fjournalctl -u grafana-server -fjournalctl -u grafana-server -f[4P./shems_deploy_interface.sh[4P./shems_deploy_interface.sh[4P./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 09:41:02 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 09:41:02 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 09:41:02 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 09:41:02 PM IST 2025
Checking for existing processes...
Checking for existing processes...
No existing simulation process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Python scripts...
Deploying Python scripts...
Deploying Grafana...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Grafana...
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running
Server is running
Server is running




Deployment completed successfully!
Deployment completed successfully!
Deployment completed successfully!

Deployment completed successfully!



Access points:
Access points:
Access points:
Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000




Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs

Log files are available in: /app/smarthome/data/logs

Log files are available in: /app/smarthome/data/logs

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 09:41:15 PM IST 2025
Deployment completed at Fri Apr 18 09:41:15 PM IST 2025
Deployment completed at Fri Apr 18 09:41:15 PM IST 2025
Deployment completed at Fri Apr 18 09:41:15 PM IST 2025
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh
[?2004l
[?2004l
[?2004ltotal 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py_bkp
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py
total 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py_bkp
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py
total 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py_bkp
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m mmmvvv   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py shems_monitoring_server.py shems_monitoring_server.py [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py shems_monitoring_server.py shems_monitoring_server.py [K[K[K___bbbkkkppp222
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m mmmvvv   [7mshems_monitoring_server.py_bkp[27m[7mshems_monitoring_server.py_bkp[27m[7mshems_monitoring_server.py_bkp[27mshems_monitoring_server.py_bkp shems_monitoring_server.py_bkp shems_monitoring_server.py_bkp [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
total 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
total 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccaaattt   [7mshems_monitoring_server.py_bkp2[27m[7mshems_monitoring_server.py_bkp2[27m[7mshems_monitoring_server.py_bkp2[27mshems_monitoring_server.py_bkp2
[?2004lshems_monitoring_server.py_bkp2
[?2004lshems_monitoring_server.py_bkp2
[?2004l#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
import secrets
import json
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Flask Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Manager =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2

    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')

    def get_connection(self):
        attempts = 0
        last_error = None
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)

        logger.error(f"Failed to connect to DB after {self.MAX_RETRIES} attempts")
        raise ConnectionError(str(last_error))

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def get_dashboard_uid_from_title(title):
    try:
        output = subprocess.check_output([
            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"
        ])
        dashboards = json.loads(output)
        for dash in dashboards:
            if dash.get("title", "").lower() == title.lower():
                return dash.get("uid")
    except Exception as e:
        logger.warning(f"Could not fetch UID for {title}: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

# ===== Decorators =====
def login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning(f"Unauthorized access attempt to {request.path}")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    form = request.form
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    for field in required_fields:
        if not form.get(field):
            return jsonify({'error': f"Missing field: {field}"}), 400

    username = form['username']
    password = form['password']
    try:
        num_devices = int(form['numDevices'])
        num_days = int(form['numDays'])
        if num_devices <= 0 or num_days <= 0:
            raise ValueError()
    except ValueError:
        return jsonify({'error': 'Invalid numeric input'}), 400

    with db_manager.get_connection() as conn:
        with conn.cursor() as cursor:
            cursor.execute("SELECT UserId, PasswordHash FROM Users WHERE Username=%s", (username,))
            user = cursor.fetchone()

            if user:
                if not check_password_hash(user['PasswordHash'], password):
                    return jsonify({'error': 'Invalid credentials'}), 401
                user_id = user['UserId']
            else:
                password_hash = generate_password_hash(password)
                cursor.execute("INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)", (username, password_hash))
                user_id = cursor.lastrowid
                conn.commit()

    session['user_id'] = user_id
    session['username'] = username
    subprocess.Popen([sys.executable, os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'), str(user_id), str(num_devices), str(num_days)])
    return redirect(url_for('dashboard'))

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")

        dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.De#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
import secrets
import json
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Flask Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Manager =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2

    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')

    def get_connection(self):
        attempts = 0
        last_error = None
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)

        logger.error(f"Failed to connect to DB after {self.MAX_RETRIES} attempts")
        raise ConnectionError(str(last_error))

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def get_dashboard_uid_from_title(title):
    try:
        output = subprocess.check_output([
            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"
        ])
        dashboards = json.loads(output)
        for dash in dashboards:
            if dash.get("title", "").lower() == title.lower():
                return dash.get("uid")
    except Exception as e:
        logger.warning(f"Could not fetch UID for {title}: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

# ===== Decorators =====
def login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning(f"Unauthorized access attempt to {request.path}")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    form = request.form
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    for field in required_fields:
        if not form.get(field):
            return jsonify({'error': f"Missing field: {field}"}), 400

    username = form['username']
    password = form['password']
    try:
        num_devices = int(form['numDevices'])
        num_days = int(form['numDays'])
        if num_devices <= 0 or num_days <= 0:
            raise ValueError()
    except ValueError:
        return jsonify({'error': 'Invalid numeric input'}), 400

    with db_manager.get_connection() as conn:
        with conn.cursor() as cursor:
            cursor.execute("SELECT UserId, PasswordHash FROM Users WHERE Username=%s", (username,))
            user = cursor.fetchone()

            if user:
                if not check_password_hash(user['PasswordHash'], password):
                    return jsonify({'error': 'Invalid credentials'}), 401
                user_id = user['UserId']
            else:
                password_hash = generate_password_hash(password)
                cursor.execute("INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)", (username, password_hash))
                user_id = cursor.lastrowid
                conn.commit()

    session['user_id'] = user_id
    session['username'] = username
    subprocess.Popen([sys.executable, os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'), str(user_id), str(num_devices), str(num_days)])
    return redirect(url_for('dashboard'))

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")

        dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        tailscale_ip = None
    return jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})

# ===== Shutdown and Main Execution =====
def safe_shutdown(signum, frame):
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

viceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        tailscale_ip = None
    return jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})

# ===== Shutdown and Main Execution =====
def safe_shutdown(signum, frame):
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
import secrets
import json
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Flask Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Manager =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2

    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')

    def get_connection(self):
        attempts = 0
        last_error = None
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)

        logger.error(f"Failed to connect to DB after {self.MAX_RETRIES} attempts")
        raise ConnectionError(str(last_error))

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def get_dashboard_uid_from_title(title):
    try:
        output = subprocess.check_output([
            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"
        ])
        dashboards = json.loads(output)
        for dash in dashboards:
            if dash.get("title", "").lower() == title.lower():
                return dash.get("uid")
    except Exception as e:
        logger.warning(f"Could not fetch UID for {title}: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

# ===== Decorators =====
def login_required(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning(f"Unauthorized access attempt to {request.path}")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    form = request.form
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    for field in required_fields:
        if not form.get(field):
            return jsonify({'error': f"Missing field: {field}"}), 400

    username = form['username']
    password = form['password']
    try:
        num_devices = int(form['numDevices'])
        num_days = int(form['numDays'])
        if num_devices <= 0 or num_days <= 0:
            raise ValueError()
    except ValueError:
        return jsonify({'error': 'Invalid numeric input'}), 400

    with db_manager.get_connection() as conn:
        with conn.cursor() as cursor:
            cursor.execute("SELECT UserId, PasswordHash FROM Users WHERE Username=%s", (username,))
            user = cursor.fetchone()

            if user:
                if not check_password_hash(user['PasswordHash'], password):
                    return jsonify({'error': 'Invalid credentials'}), 401
                user_id = user['UserId']
            else:
                password_hash = generate_password_hash(password)
                cursor.execute("INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)", (username, password_hash))
                user_id = cursor.lastrowid
                conn.commit()

    session['user_id'] = user_id
    session['username'] = username
    subprocess.Popen([sys.executable, os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'), str(user_id), str(num_devices), str(num_days)])
    return redirect(url_for('dashboard'))

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")

        dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        tailscale_ip = None
    return jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})

# ===== Shutdown and Main Execution =====
def safe_shutdown(signum, frame):
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrhhhttt   


[?2004l[?2004l[?2004ltotal 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
total 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
total 52K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 20:53 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  15K Apr 18 21:26 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccaaattt   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists"""
    max_retries = 5
    retry_delay = 10
    
    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute(
                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
                        (user_id,)
                    )
                    if cursor.fetchone()[0] > 0:
                        logger.info("Data exists, importing dashboards")
                        # Actual import logic here
                        return True
                    
                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)
        
        except Exception as e:
            logger.warning(f"Dashboard check failed: {str(e)}")
            time.sleep(retry_delay)
    
    logger.error("Dashboard import timeout - no data generated")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def import_grafana_dashboards():
    """Import dashboards from JSON files"""
    dashboard_files = {
        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
    }
    
    for name, filepath in dashboard_files.items():
        try:
            with open(filepath) as f:
                dashboard_json = json.load(f)
                response = requests.post(
                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
                    json=dashboard_json,
                    auth=('admin', 'admin'),
                    timeout=10
                )
                if response.status_code == 200:
                    logger.info(f"Successfully imported {name} dashboard")
                else:
                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
        except Exception as e:
            logger.error(f"Dashboard import error for {name}: {str(e)}")

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']

        # Verify data exists
        if not verify_dashboard_data(user_id):
            logger.warning(f"No data found for user {user_id}")
            return render_template('error.html',
                               message="No data available yet. Please wait..."), 202

        # Check/import dashboards if needed
        if not check_grafana_dashboards_exist():
            logger.info("Dashboards missing, attempting import")
            import_grafana_dashboards()
            time.sleep(2)  # Brief delay for import to complete

        return render_template('shems_dashboard_visuals.html')

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html',
                           message="Unable to load dashboard"), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    """Main application entry point"""
    try:
        # Register signal handlers
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        # Clean up any existing processes
        try:
            subprocess.run(
                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        # Verify database connectivity
        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        # Start the server
        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=False,
            threaded=True,
            use_reloader=False
        )

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()
#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists"""
    max_retries = 5
    retry_delay = 10
    
    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute(
                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
                        (user_id,)
                    )
                    if cursor.fetchone()[0] > 0:
                        logger.info("Data exists, importing dashboards")
                        # Actual import logic here
                        return True
                    
                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)
        
        except Exception as e:
            logger.warning(f"Dashboard check failed: {str(e)}")
            time.sleep(retry_delay)
    
    logger.error("Dashboard import timeout - no data generated")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def import_grafana_dashboards():
    """Import dashboards from JSON files"""
    dashboard_files = {
        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
    }
    
    for name, filepath in dashboard_files.items():
        try:
            with open(filepath) as f:
                dashboard_json = json.load(f)
                response = requests.post(
                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
                    json=dashboard_json,
                    auth=('admin', 'admin'),
                    timeout=10
                )
                if response.status_code == 200:
                    logger.info(f"Successfully imported {name} dashboard")
                else:
                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
        except Exception as e:
            logger.error(f"Dashboard import error for {name}: {str(e)}")

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']

        # Verify data exists
        if not verify_dashboard_data(user_id):
            logger.warning(f"No data found for user {user_id}")
            return render_template('error.html',
                               message="No data available yet. Please wait..."), 202

        # Check/import dashboards if needed
        if not check_grafana_dashboards_exist():
            logger.info("Dashboards missing, attempting import")
            import_grafana_dashboards()
            time.sleep(2)  # Brief delay for import to complete

        return render_template('shems_dashboard_visuals.html')

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html',
                           message="Unable to load dashboard"), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    """Main application entry point"""
    try:
        # Register signal handlers
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        # Clean up any existing processes
        try:
            subprocess.run(
                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        # Verify database connectivity
        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        # Start the server
        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=False,
            threaded=True,
            use_reloader=False
        )

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()
#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists"""
    max_retries = 5
    retry_delay = 10
    
    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute(
                        "SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",
                        (user_id,)
                    )
                    if cursor.fetchone()[0] > 0:
                        logger.info("Data exists, importing dashboards")
                        # Actual import logic here
                        return True
                    
                    logger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)
        
        except Exception as e:
            logger.warning(f"Dashboard check failed: {str(e)}")
            time.sleep(retry_delay)
    
    logger.error("Dashboard import timeout - no data generated")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def import_grafana_dashboards():
    """Import dashboards from JSON files"""
    dashboard_files = {
        'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',
        'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',
        'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',
        'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'
    }
    
    for name, filepath in dashboard_files.items():
        try:
            with open(filepath) as f:
                dashboard_json = json.load(f)
                response = requests.post(
                    f"http://{get_pi_ip()}:3000/api/dashboards/db",
                    json=dashboard_json,
                    auth=('admin', 'admin'),
                    timeout=10
                )
                if response.status_code == 200:
                    logger.info(f"Successfully imported {name} dashboard")
                else:
                    logger.warning(f"Failed to import {name} dashboard: {response.text}")
        except Exception as e:
            logger.error(f"Dashboard import error for {name}: {str(e)}")

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(u[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m rl_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']

        # Verify data exists
        if not verify_dashboard_data(user_id):
            logger.warning(f"No data found for user {user_id}")
            return render_template('error.html',
                               message="No data available yet. Please wait..."), 202

        # Check/import dashboards if needed
        if not check_grafana_dashboards_exist():
            logger.info("Dashboards missing, attempting import")
            import_grafana_dashboards()
            time.sleep(2)  # Brief delay for import to complete

        return render_template('shems_dashboard_visuals.html')

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html',
                           message="Unable to load dashboard"), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    """Main application entry point"""
    try:
        # Register signal handlers
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        # Clean up any existing processes
        try:
            subprocess.run(
                ['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        # Verify database connectivity
        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        # Start the server
        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(
            host='0.0.0.0',
            port=5000,
            debug=False,
            threaded=True,
            use_reloader=False
        )

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 420 lines, 14762 bytes 420 lines, 14762 bytes[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 420 lines, 14762 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m





























[13C[13C[13C[?2004l[>4;ms[?2004l[>4;ms[?2004l[>4;ms[?25l[12;37r[12;1H[L[1;38r[38;1H[K[12;1H[?25h[?25l[12;37r[12;1H[L[1;38r[38;1H[K[12;1H[?25h[?25l[12;37r[12;1H[L[1;38r[38;1H[K[12;1H[?25h[?25li[?25h[?25li[?25h[?25li[?25h[?25lm[?25h[?25lm[?25h[?25lm[?25h[?25lp[?25h[?25lp[?25h[?25lp[?25h[?25lo[?25h[?25lo[?25h[?25lo[?25h[?25lt[?25h[?25lt[?25h[?25lt[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25lr[?25h[?25lr[?25h[?25lr[?25h[?25lt[?25h[?25lt[?25h[?25lt[?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25lj[?25h[?25lj[?25h[?25lj[?25h[?25ls[?25h[?25ls[?25h[?25ls[?25h[?25lo[?25h[?25lo[?25h[?25lo[?25h[?25ln[?25h[?25ln[?25h[?25ln[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?25h[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[12;37r[12;1H[L[1;38r[12;1HB[?4m[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[12;37r[37;1H
[1;38r[37;1Hos.makedirs(DB_DIR, exist_ok=True)[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hos.makedirs(DB_DIR, exist_ok=True)[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hos.makedirs(DB_DIR, exist_ok=True)[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hos.makedirs(LOG_DIR, exist_ok=True)[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hos.makedirs(LOG_DIR, exist_ok=True)[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hos.makedirs(LOG_DIR, exist_ok=True)[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1H# ===== Logging Configuration =====[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1H# ===== Logging Configuration =====[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1H# ===== Logging Configuration =====[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hlogging.basicConfig([12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hlogging.basicConfig([12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;1Hlogging.basicConfig([12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[12;1H[?25h









































[69C[69C[69C[?2004l[>4;mt[?2004l[>4;mt[?2004l[>4;mt[?25l[27;37r[27;1H[L[1;38r[27;1H[?25h[?25l[27;37r[27;1H[L[1;38r[27;1H[?25h[?25l[27;37r[27;1H[L[1;38r[27;1H[?25h[?25lGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25lGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25lGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m


























[?25l[1;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H







































































[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[29;1H[30;1H[29;1H[30;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[23;1H[22;1H[24;1H[23;1H[22;1H[24;1H[23;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H
















































[?25l[1;37r[37;1H
[1;38r[37;1H[?25h
[?25l[1;37r[37;1H
[1;38r[37;1H[?25h
[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H





[6;1H[6;1H[6;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[7;37r[7;1H[25L[1;38r[6;1Hdef get_dashboard_uid_from_title(title):
def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
    try:[11;9Houtput = subprocess.check_output([[12;9Hresult = subprocess.run([13;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[14;13H['systemctl', 'is-active', service_name],[15;13H"-H", "Content-Type: application/json",[16;13Hstdout=subprocess.PIPE,[17;13Hstderr=subprocess.PIPE,[18;13H"-u", "admin:admin"[19;13Htext=True[20;9H])[21;9H)[22;9Hdashboards = json.loads(output)[23;9Hreturn result.stdout.strip() == 'active'[24;9Hfor dash in dashboards:[25;13Hif dash.get("title", "").lower() == title.lower():[26;17Hreturn dash.get("uid")
    except Exception as e:
    except Exception as e:[29;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[30;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")
    return None[?25h[?25l[7;37r[7;1H[25L[1;38r[6;1Hdef get_dashboard_uid_from_title(title):
def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
    try:[11;9Houtput = subprocess.check_output([[12;9Hresult = subprocess.run([13;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[14;13H['systemctl', 'is-active', service_name],[15;13H"-H", "Content-Type: application/json",[16;13Hstdout=subprocess.PIPE,[17;13Hstderr=subprocess.PIPE,[18;13H"-u", "admin:admin"[19;13Htext=True[20;9H])[21;9H)[22;9Hdashboards = json.loads(output)[23;9Hreturn result.stdout.strip() == 'active'[24;9Hfor dash in dashboards:[25;13Hif dash.get("title", "").lower() == title.lower():[26;17Hreturn dash.get("uid")
    except Exception as e:
    except Exception as e:[29;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[30;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")
    return None[?25h[?25l[7;37r[7;1H[25L[1;38r[6;1Hdef get_dashboard_uid_from_title(title):
def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
    try:[11;9Houtput = subprocess.check_output([[12;9Hresult = subprocess.run([13;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[14;13H['systemctl', 'is-active', service_name],[15;13H"-H", "Content-Type: application/json",[16;13Hstdout=subprocess.PIPE,[17;13Hstderr=subprocess.PIPE,[18;13H"-u", "admin:admin"[19;13Htext=True[20;9H])[21;9H)[22;9Hdashboards = json.loads(output)[23;9Hreturn result.stdout.strip() == 'active'[24;9Hfor dash in dashboards:[25;13Hif dash.get("title", "").lower() == title.lower():[26;17Hreturn dash.get("uid")
    except Exception as e:
    except Exception as e:[29;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[30;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")
    return None[?25h[?25l[32;37r[32;1H[L[1;38r[32;1H[?25h[?25l[32;37r[32;1H[L[1;38r[32;1H[?25h[?25l[32;37r[32;1H[L[1;38r[32;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h












































[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[17;37r[17;1H[L[1;38r[16;1H[K[17;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[17;37r[17;1H[L[1;38r[16;1H[K[17;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[17;37r[17;1H[L[1;38r[16;1H[K[17;1Hdef get_dashboard_uid_from_title(title):[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m





[18;1H[18;1H[18;1H[?25l[38;1H1 line less; before #18  4 seconds ago[16;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[38;1H[K[38;1H1 line less; before #18  4 seconds ago[16;1H[?25h[?25l[38;1H1 line less; before #18  4 seconds ago[16;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[38;1H[K[38;1H1 line less; before #18  4 seconds ago[16;1H[?25h[?25l[38;1H1 line less; before #18  4 seconds ago[16;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[38;1H[K[38;1H1 line less; before #18  4 seconds ago[16;1H[?25h[?25l[38;3Hmore line; after #18  4 seconds ago[38;38H[K[?25l[38;3Hmore line; after #18  4 seconds ago[38;38H[K[?25l[38;3Hmore line; after #18  4 seconds ago[38;38H[K[17;37r[17;1H[L[1;38r[16;1H[K[17;1Hdef get_dashboard_uid_from_title(title):[38;1H[K[38;1H1 more line; after #18  4 seconds ago[17;37r[17;1H[L[1;38r[16;1H[K[17;1Hdef get_dashboard_uid_from_title(title):[38;1H[K[38;1H1 more line; after #18  4 seconds ago[17;37r[17;1H[L[1;38r[16;1H[K[17;1Hdef get_dashboard_uid_from_title(title):[38;1H[K[38;1H1 more line; after #18  4 seconds ago[16;1H[?25h[16;1H[?25h[16;1H[?25h[?25l[38;3Hline less; before #18  5 seconds ago[?25l[38;3Hline less; before #18  5 seconds ago[?25l[38;3Hline less; before #18  5 seconds ago[16;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[38;1H[K[38;1H1 line less; before #18  5 seconds ago[16;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[38;1H[K[38;1H1 line less; before #18  5 seconds ago[16;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[38;1H[K[38;1H1 line less; before #18  5 seconds ago[16;1H[?25h[16;1H[?25h[16;1H[?25h[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25hwwwqqq[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25hqqq!!![?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?25l[?2004l[>4;m[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py
[?2004l
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 420 lines, 14762 bytes 420 lines, 14762 bytes 420 lines, 14762 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[[1;1H[?25h[?4m





















































[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[13C[13C[13C[?2004l[>4;ms[?2004l[>4;ms[?2004l[>4;ms[?25l[12;37r[12;1H[L[1;38r[38;1H[K[12;1H[?25h[?25l[12;37r[12;1H[L[1;38r[38;1H[K[12;1H[?25h[?25l[12;37r[12;1H[L[1;38r[38;1H[K[12;1H[?25h[?25li[?25h[?25li[?25h[?25li[?25h[?25lm[?25h[?25lm[?25h[?25lm[?25h[?25lp[?25h[?25lp[?25h[?25lp[?25h[?25lo[?25h[?25lo[?25h[?25lo[?25h[?25lr[?25h[?25lr[?25h[?25lr[?25h[?25lt[?25h[?25lt[?25h[?25lt[?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25lj[?25h[?25lj[?25h[?25lj[?25h[?25la[?25h[?25la[?25h[?25la[?25h[?25ls[?25h[?25ls[?25h[?25ls[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25ls[?25h[?25ls[?25h[?25ls[?25h[?25lo[?25h[?25lo[?25h[?25lo[?25h[?25ln[?25h[?25ln[?25h[?25ln[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[13;11H[13;11H[13;11H[14;11H[14;11H[14;11H[15;11H[15;11H[15;11H[16;11H[16;11H[16;11H


[18;11H[18;11H[18;11H[19;11H[19;11H[19;11H


[21;11H[21;11H[21;11H[22;11H[22;11H[22;11H[23;11H[23;11H[23;11H[24;11H[24;11H[24;11H[25;11H[25;11H[25;11H[26;11H[26;11H[26;11H


[28;11H[28;11H[28;11H[29;11H[29;11H[29;11H[30;11H[30;11H[30;11H[31;11H[31;11H[31;11H[32;11H[32;11H[32;11H[31;11H[31;11H[31;11H[30;11H[30;11H[30;11H[29;11H[29;11H[29;11H[28;11H[28;11H[28;11H[27;1H[27;1H[27;1H[26;11H[26;11H[26;11H[59C[59C[59C[?2004l[>4;mt[?2004l[>4;mt[?2004l[>4;mt[?25l[27;37r[27;1H[L[1;38r[27;1H[?25h[?25l[27;37r[27;1H[L[1;38r[27;1H[?25h[?25l[27;37r[27;1H[L[1;38r[27;1H[?25h[?25lGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25lGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25lGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m


[29;26H[29;26H[29;26H[30;36H[30;36H[30;36H[31;38H[31;38H[31;38H[32;34H[32;34H[32;34H[33;35H[33;35H[33;35H


[35;35H[35;35H[35;35H[36;20H[36;20H[36;20H[37;24H[37;24H[37;24H[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;20H[?25h[?25l[1;37r[37;1H
[1;38r[37;20H[?25h[?25l[1;37r[37;1H
[1;38r[37;20H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[37;63H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l
:[?25h[?25l
:[?25h[?25l
:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 422 lines, 14838 bytes written 422 lines, 14838 bytes written 422 lines, 14838 bytes written[23;2t[23;2t[23;1t[23;2t
[?2004l[?1l>[23;1t
[?2004l[?1l>[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pvi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pvi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1Pvi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C

[?2004l
[?2004l[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[1;38r[?12h[?12l[22;2t[1;38r[?12h[?12l[22;2t[22;1t[22;1t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 422 lines, 14838 bytes 422 lines, 14838 bytes 422 lines, 14838 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m

[2;1H

[2;1H

[2;1H








































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H



    
    
    [18;5H[18;5H[18;5H[17;1H[17;1H[17;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[18;37r[18;1H[L[1;38r[18;1H[?25h[?25l[18;37r[18;1H[L[1;38r[18;1H[?25h[?25l[18;37r[18;1H[L[1;38r[18;1H[?25h[?25l[19;37r[19;1H[L[1;38r[19;1H[?25h[?25l[19;37r[19;1H[L[1;38r[19;1H[?25h[?25l[19;37r[19;1H[L[1;38r[19;1H[?25h[?25l[20;37r[20;1H[L[1;38r[20;1H[?25h[?25l[20;37r[20;1H[L[1;38r[20;1H[?25h[?25l[20;37r[20;1H[L[1;38r[20;1H[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[20;37r[20;1H[L[1;38r[20;1HA[?4m[?2004h[>4;2m[?2004l[>4;m[?25l[20;37r[20;1H[L[1;38r[20;1HA[?4m[?25h[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[20;37r[20;1H[L[1;38r[20;1HA[?4m[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[20;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[20;1H[?25h[?25l[20;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[20;1H[?25h[?25l[20;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[20;1H[?25h[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?2004h[>4;2m[?2004l[>4;m[?25l[17;37r[17;1H[L[1;38r[17;1HB[?4m[?2004h[>4;2m[?2004l[>4;m[?25l[17;37r[17;1H[L[1;38r[17;1HB[?4m[?25h[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[17;37r[17;1H[L[1;38r[17;1HB[?4m[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[17;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[17;1H[?25h[?25l[17;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[17;1H[?25h[?25l[17;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[17;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[18;37r[18;1H[16L[1;38r[17;1Hdef get_dashboard_uid_from_title(title):
    try:[19;9Houtput = subprocess.check_output([[20;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[21;13H"-H", "Content-Type: application/json",[22;13H"-u", "admin:admin"[23;9H])[24;9Hdashboards = json.loads(output)[25;9Hfor dash in dashboards:[26;13Hif dash.get("title", "").lower() == title.lower():[27;17Hreturn dash.get("uid")
    except Exception as e:[29;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[18;37r[18;1H[16L[1;38r[17;1Hdef get_dashboard_uid_from_title(title):
    try:[19;9Houtput = subprocess.check_output([[20;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[21;13H"-H", "Content-Type: application/json",[22;13H"-u", "admin:admin"[23;9H])[24;9Hdashboards = json.loads(output)[25;9Hfor dash in dashboards:[26;13Hif dash.get("title", "").lower() == title.lower():[27;17Hreturn dash.get("uid")
    except Exception as e:[29;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[18;37r[18;1H[16L[1;38r[17;1Hdef get_dashboard_uid_from_title(title):
    try:[19;9Houtput = subprocess.check_output([[20;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[21;13H"-H", "Content-Type: application/json",[22;13H"-u", "admin:admin"[23;9H])[24;9Hdashboards = json.loads(output)[25;9Hfor dash in dashboards:[26;13Hif dash.get("title", "").lower() == title.lower():[27;17Hreturn dash.get("uid")
    except Exception as e:[29;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[32;31H[32;31H[32;31H[31;1H[31;1H[31;1H[30;15H[30;15H[30;15H[29;63H[29;63H[29;63H[28;26H[28;26H[28;26H[27;38H[27;38H[27;38H[26;62H[26;62H[26;62H[25;31H[25;31H[25;31H[24;39H[24;39H[24;39H[23;10H[23;10H[23;10H[22;31H[22;31H[22;31H[21;51H[21;51H[21;51H[20;68H[20;68H[20;68H[19;42H[19;42H[19;42H[18;8H[18;8H[18;8H[17;40H[17;40H[17;40H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[18;37r[18;1H[L[1;38r[17;1H[K[18;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[18;37r[18;1H[L[1;38r[17;1H[K[18;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[18;37r[18;1H[L[1;38r[17;1H[K[18;1Hdef get_dashboard_uid_from_title(title):[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m
























































[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[?25l[22;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[22;1H[?25h[?25l[22;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[22;1H[?25h[?25l[22;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[22;1H[?25h[?25l[22;37r[37;1H
[1;38r[37;5Hexcept ValueError:[22;1H[?25h[?25l[22;37r[37;1H
[1;38r[37;5Hexcept ValueError:[22;1H[?25h[?25l[22;37r[37;1H
[1;38r[37;5Hexcept ValueError:[22;1H[?25h












































[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H












































[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H














[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H










































































[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify data exists[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify data exists[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify data exists[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No data found for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No data found for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No data found for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;32Hmessage="No data available yet. Please wait..."), 202[?25h[?25l[1;37r[37;1H
[1;38r[37;32Hmessage="No data available yet. Please wait..."), 202[?25h[?25l[1;37r[37;1H
[1;38r[37;32Hmessage="No data available yet. Please wait..."), 202[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Check/import dashboards if needed[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Check/import dashboards if needed[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Check/import dashboards if needed[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.info("Dashboards missing, attempting import")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.info("Dashboards missing, attempting import")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.info("Dashboards missing, attempting import")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Himport_grafana_dashboards()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Himport_grafana_dashboards()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Himport_grafana_dashboards()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(2)  # Brief delay for import to complete[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(2)  # Brief delay for import to complete[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(2)  # Brief delay for import to complete[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html',[?25h[?25l[1;37r[37;1H
[1;38r[37;28Hmessage="Unable to load dashboard"), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;28Hmessage="Unable to load dashboard"), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;28Hmessage="Unable to load dashboard"), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[42C[42C[42C[13;9H[13;9H[13;9H[12;9H[12;9H[12;9H[11;1H[11;1H[11;1H[10;9H[10;9H[10;9H[9;9H[9;9H[9;9H[8;9H[8;9H[8;9H[7;9H[7;9H[7;9H[6;9H[6;9H[6;9H[5;1H[5;1H[5;1H[4;9H[4;9H[4;9H[3;8H[3;8H[3;8H[2;9H[2;9H[2;9H[1;9H[1;9H[1;9H[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[2;9H[2;9H[2;9H


[4;9H[4;9H[4;9H[5;9H[5;9H[5;9H[6;9H[6;9H[6;9H


[8;9H[8;9H[8;9H[9;9H[9;9H[9;9H[10;9H[10;9H[10;9H[11;8H[11;8H[11;8H[12;9H[12;9H[12;9H


[14;9H[14;9H[14;9H[15;9H[15;9H[15;9H[16;9H[16;9H[16;9H[17;9H[17;9H[17;9H[18;9H[18;9H[18;9H


[20;9H[20;9H[20;9H[21;9H[21;9H[21;9H[22;9H[22;9H[22;9H[23;9H[23;9H[23;9H[24;9H[24;9H[24;9H


[26;9H[26;9H[26;9H


[28;9H[28;9H[28;9H[29;9H[29;9H[29;9H[30;9H[30;9H[30;9H[31;9H[31;9H[31;9H


[33;9H[33;9H[33;9H[34;9H[34;9H[34;9H[35;9H[35;9H[35;9H[36;9H[36;9H[36;9H[37;9H[37;9H[37;9H[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[36;9H[36;9H[36;9H[35;1H[35;1H[35;1H[34;9H[34;9H[34;9H[33;9H[33;9H[33;9H[32;9H[32;9H[32;9H[31;1H[31;1H[31;1H[30;9H[30;9H[30;9H[29;9H[29;9H[29;9H[28;9H[28;9H[28;9H[27;9H[27;9H[27;9H[26;9H[26;9H[26;9H[25;9H[25;9H[25;9H[24;9H[24;9H[24;9H[23;9H[23;9H[23;9H[22;9H[22;9H[22;9H[21;1H[21;1H[21;1H[20;9H[20;9H[20;9H[19;9H[19;9H[19;9H[18;9H[18;9H[18;9H[17;9H[17;9H[17;9H[16;9H[16;9H[16;9H[15;9H[15;9H[15;9H[14;9H[14;9H[14;9H[13;1H[13;1H[13;1H[12;9H[12;9H[12;9H[11;9H[11;9H[11;9H[10;9H[10;9H[10;9H[9;9H[9;9H[9;9H[8;9H[8;9H[8;9H[7;9H[7;9H[7;9H[6;9H[6;9H[6;9H[5;9H[5;9H[5;9H[4;9H[4;9H[4;9H[3;9H[3;9H[3;9H[2;9H[2;9H[2;9H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;28Hmessage="Unable to load dashboard"), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;28Hmessage="Unable to load dashboard"), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;28Hmessage="Unable to load dashboard"), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(2)  # Brief delay for import to complete[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(2)  # Brief delay for import to complete[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(2)  # Brief delay for import to complete[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Himport_grafana_dashboards()[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Himport_grafana_dashboards()[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Himport_grafana_dashboards()[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.info("Dashboards missing, attempting import")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.info("Dashboards missing, attempting import")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.info("Dashboards missing, attempting import")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not check_grafana_dashboards_exist():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not check_grafana_dashboards_exist():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not check_grafana_dashboards_exist():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Check/import dashboards if needed[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Check/import dashboards if needed[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Check/import dashboards if needed[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;32Hmessage="No data available yet. Please wait..."), 202[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;32Hmessage="No data available yet. Please wait..."), 202[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;32Hmessage="No data available yet. Please wait..."), 202[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"No data found for user {user_id}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"No data found for user {user_id}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"No data found for user {user_id}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not verify_dashboard_data(user_id):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not verify_dashboard_data(user_id):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not verify_dashboard_data(user_id):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Verify data exists[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Verify data exists[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Verify data exists[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;9H[?25h


[3;9H[3;9H[3;9H


[5;9H[5;9H[5;9H[6;9H[6;9H[6;9H[7;9H[7;9H[7;9H


[9;9H[9;9H[9;9H[10;9H[10;9H[10;9H[11;9H[11;9H[11;9H[12;8H[12;8H[12;8H[13;9H[13;9H[13;9H


[15;9H[15;9H[15;9H[16;9H[16;9H[16;9H[17;9H[17;9H[17;9H[18;9H[18;9H[18;9H[19;9H[19;9H[19;9H


[21;9H[21;9H[21;9H[22;9H[22;9H[22;9H[23;9H[23;9H[23;9H[24;9H[24;9H[24;9H[25;9H[25;9H[25;9H


[27;9H[27;9H[27;9H


[29;9H[29;9H[29;9H[30;9H[30;9H[30;9H[31;9H[31;9H[31;9H[32;9H[32;9H[32;9H


[34;9H[34;9H[34;9H[35;9H[35;9H[35;9H[36;9H[36;9H[36;9H[37;9H[37;9H[37;9H[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;9H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[36;9H[36;9H[36;9H[35;1H[35;1H[35;1H[34;9H[34;9H[34;9H[33;9H[33;9H[33;9H[32;9H[32;9H[32;9H[31;1H[31;1H[31;1H[30;9H[30;9H[30;9H[29;9H[29;9H[29;9H[28;9H[28;9H[28;9H[27;9H[27;9H[27;9H[26;9H[26;9H[26;9H[25;9H[25;9H[25;9H[24;9H[24;9H[24;9H[23;9H[23;9H[23;9H[22;9H[22;9H[22;9H[21;1H[21;1H[21;1H[20;9H[20;9H[20;9H[19;9H[19;9H[19;9H[18;9H[18;9H[18;9H[17;9H[17;9H[17;9H[16;9H[16;9H[16;9H[15;9H[15;9H[15;9H[14;9H[14;9H[14;9H[13;1H[13;1H[13;1H[12;9H[12;9H[12;9H[11;9H[11;9H[11;9H[10;9H[10;9H[10;9H[9;9H[9;9H[9;9H[8;9H[8;9H[8;9H[7;9H[7;9H[7;9H[6;9H[6;9H[6;9H[5;9H[5;9H[5;9H[4;9H[4;9H[4;9H[3;9H[3;9H[3;9H[2;9H[2;9H[2;9H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;28Hmessage="Unable to load dashboard"), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;28Hmessage="Unable to load dashboard"), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;28Hmessage="Unable to load dashboard"), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(2)  # Brief delay for import to complete[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(2)  # Brief delay for import to complete[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(2)  # Brief delay for import to complete[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Himport_grafana_dashboards()[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Himport_grafana_dashboards()[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Himport_grafana_dashboards()[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.info("Dashboards missing, attempting import")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.info("Dashboards missing, attempting import")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.info("Dashboards missing, attempting import")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not check_grafana_dashboards_exist():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not check_grafana_dashboards_exist():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not check_grafana_dashboards_exist():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Check/import dashboards if needed[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Check/import dashboards if needed[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Check/import dashboards if needed[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;32Hmessage="No data available yet. Please wait..."), 202[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;32Hmessage="No data available yet. Please wait..."), 202[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;32Hmessage="No data available yet. Please wait..."), 202[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template('error.html',[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"No data found for user {user_id}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"No data found for user {user_id}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"No data found for user {user_id}")[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not verify_dashboard_data(user_id):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not verify_dashboard_data(user_id):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif not verify_dashboard_data(user_id):[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Verify data exists[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Verify data exists[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Verify data exists[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;9H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;9H[?25h


[3;9H[3;9H[3;9H


[5;9H[5;9H[5;9H[6;9H[6;9H[6;9H[7;9H[7;9H[7;9H


[9;9H[9;9H[9;9H[?25l[9;37r[37;1H
[1;38r[37;5Hsys.exit(0)[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;5Hsys.exit(0)[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;5Hsys.exit(0)[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;1Hdef main():[9;5H[?25h[?25l[9;37r[37;1H
[1;38r[37;1Hdef main():[9;5H[?25h[?25l[9;37r[37;1H
[1;38r[37;1Hdef main():[9;5H[?25h[?25l[9;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;5Htry:[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;5Htry:[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;5Htry:[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Register signal handlers[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Register signal handlers[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Register signal handlers[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Himport signal[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Himport signal[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Himport signal[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[9;32H[?25h[?25l[9;37r[37;1H
[1;38r[9;32H[?25h[?25l[9;37r[37;1H
[1;38r[9;32H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Htry:[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Htry:[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Htry:[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hsubprocess.run([9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hsubprocess.run([9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hsubprocess.run([9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17Htimeout=5[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17Htimeout=5[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;17Htimeout=5[9;13H[?25h[?25l[9;37r[37;1H
[1;38r[37;13H)[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;13H)[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;13H)[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[9;5H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[9;5H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[9;5H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[9;9H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Verify database connectivity[9;28H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Verify database connectivity[9;28H[?25h[?25l[9;37r[37;1H
[1;38r[37;9H# Verify database connectivity[9;28H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Htry:[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Htry:[9;1H[?25h[?25l[9;37r[37;1H
[1;38r[37;9Htry:[9;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[10;37r[10;1H[L[1;38r[10;1H[?25h[?25l[10;37r[10;1H[L[1;38r[10;1H[?25h[?25l[10;37r[10;1H[L[1;38r[10;1H[?25h[?25l[11;37r[11;1H[L[1;38r[11;1H[?25h[?25l[11;37r[11;1H[L[1;38r[11;1H[?25h[?25l[11;37r[11;1H[L[1;38r[11;1H[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[11;37r[11;1H[L[1;38r[11;1HA[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[11;37r[11;1H[L[1;38r[11;1HA[?4m[?25h[?2004h[>4;2m[?2004l[>4;m[?25l[11;37r[11;1H[L[1;38r[11;1HA[?4m[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[11;37r[37;1H
[1;38r[11;1H[?25h[?25l[11;37r[37;1H
[1;38r[11;1H[?25h[?25l[11;37r[37;1H
[1;38r[11;1H[?25h[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[9;37r[9;1H[L[1;38r[9;1H[?25h[?25l[9;37r[9;1H[L[1;38r[9;1H[?25h[?25l[9;37r[9;1H[L[1;38r[9;1H[?25h[?25l[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[2;17Htotal_devices = cursor.fetchone()['count'][3;17H[K[4;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[5;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[6;9H        active_devices = cursor.fetchone()['active'][6;61H[K[7;9H[K[8;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[9;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[10;17Hresult = cursor.fetchone()[12;9Hreturn jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,[16;49H[K[17;5H        "total_energy": result['energy'] or 0,[18;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[22;9H})[22;11H[K[23;5Hexcept Exception as e:[24;9Hlogger.error(f"User data fetch failed: {str(e)}")[25;9Hreturn jsonify({"error": "Data unavailable"}), 500

@app.route('/api/access-points')[27;33H[K[28;1Hdef access_points():
    pi_ip = get_pi_ip()[29;24H[K[30;5Haccess_points = [f"http://{pi_ip}:5000"][30;45H[K[31;5Htry:[31;17H[K[32;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[33;9Hif tailscale_ip:[34;9H    access_points.append(f"http://{tailscale_ip}:5000")
    except:[35;13H[K[36;9Htailscale_ip = None[36;29H[K[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25l[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[2;17Htotal_devices = cursor.fetchone()['count'][3;17H[K[4;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[5;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[6;9H        active_devices = cursor.fetchone()['active'][6;61H[K[7;9H[K[8;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[9;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[10;17Hresult = cursor.fetchone()[12;9Hreturn jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,[16;49H[K[17;5H        "total_energy": result['energy'] or 0,[18;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[22;9H})[22;11H[K[23;5Hexcept Exception as e:[24;9Hlogger.error(f"User data fetch failed: {str(e)}")[25;9Hreturn jsonify({"error": "Data unavailable"}), 500

@app.route('/api/access-points')[27;33H[K[28;1Hdef access_points():
    pi_ip = get_pi_ip()[29;24H[K[30;5Haccess_points = [f"http://{pi_ip}:5000"][30;45H[K[31;5Htry:[31;17H[K[32;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[33;9Hif tailscale_ip:[34;9H    access_points.append(f"http://{tailscale_ip}:5000")
    except:[35;13H[K[36;9Htailscale_ip = None[36;29H[K[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25h[?25l[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[2;17Htotal_devices = cursor.fetchone()['count'][3;17H[K[4;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[5;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[6;9H        active_devices = cursor.fetchone()['active'][6;61H[K[7;9H[K[8;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[9;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[10;17Hresult = cursor.fetchone()[12;9Hreturn jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,[16;49H[K[17;5H        "total_energy": result['energy'] or 0,[18;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[22;9H})[22;11H[K[23;5Hexcept Exception as e:[24;9Hlogger.error(f"User data fetch failed: {str(e)}")[25;9Hreturn jsonify({"error": "Data unavailable"}), 500

@app.route('/api/access-points')[27;33H[K[28;1Hdef access_points():
    pi_ip = get_pi_ip()[29;24H[K[30;5Haccess_points = [f"http://{pi_ip}:5000"][30;45H[K[31;5Htry:[31;17H[K[32;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[33;9Hif tailscale_ip:[34;9H    access_points.append(f"http://{tailscale_ip}:5000")
    except:[35;13H[K[36;9Htailscale_ip = None[36;29H[K[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[36;27H[36;27H[36;27H[35;11H[35;11H[35;11H[34;63H[34;63H[34;63H[33;24H[33;24H[33;24H[32;70H[32;70H[32;70H[31;8H[31;8H[31;8H[30;44H[30;44H[30;44H[29;23H[29;23H[29;23H[28;20H[28;20H[28;20H[27;32H[27;32H[27;32H[26;1H[26;1H[26;1H[25;58H[25;58H[25;58H[24;57H[24;57H[24;57H[23;26H[23;26H[23;26H[22;10H[22;10H[22;10H[21;82H[21;82H[21;82H[20;82H[20;82H[20;82H[19;82H[19;82H[19;82H[18;82H[18;82H[18;82H[17;50H[17;50H[17;50H[16;48H[16;48H[16;48H[15;45H[15;45H[15;45H[14;43H[14;43H[14;43H[13;33H[13;33H[13;33H[12;24H[12;24H[12;24H[11;1H[11;1H[11;1H[10;42H[10;42H[10;42H[8;82H[8;82H[8;82H[7;1H[7;1H[7;1H[6;60H[6;60H[6;60H[4;82H[4;82H[4;82H[3;1H[3;1H[3;1H[2;58H[2;58H[2;58H[1;82H[1;82H[1;82H[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;82H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;82H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[2;82H[2;82H[2;82H[3;51H[3;51H[3;51H[4;82H[4;82H[4;82H


[6;22H[6;22H[6;22H[7;82H[7;82H[7;82H[8;82H[8;82H[8;82H[9;82H[9;82H[9;82H[10;82H[10;82H[10;82H[11;9H[11;9H[11;9H[12;76H[12;76H[12;76H


[14;26H[14;26H[14;26H[15;50H[15;50H[15;50H[16;82H[16;82H[16;82H


[18;39H[18;39H[18;39H[19;13H[19;13H[19;13H[20;19H[20;19H[20;19H[21;37H[21;37H[21;37H


[23;28H[23;28H[23;28H[24;15H[24;15H[24;15H[25;20H[25;20H[25;20H[26;8H[26;8H[26;8H[27;36H[27;36H[27;36H[28;38H[28;38H[28;38H[29;49H[29;49H[29;49H[30;41H[30;41H[30;41H[31;82H[31;82H[31;82H[32;58H[32;58H[32;58H


[34;82H[34;82H[34;82H[36;60H[36;60H[36;60H


[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;82H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;82H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1H# ===== Main Execution =====
def safe_shutdown(signum, frame):[36;28H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1H# ===== Main Execution =====
def safe_shutdown(signum, frame):[36;28H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1H# ===== Main Execution =====
def safe_shutdown(signum, frame):[36;28H[?25h[37;33H[37;33H[37;33H[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5Hsys.exit(0)[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5Hsys.exit(0)[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5Hsys.exit(0)[?25h


[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Main application entry point"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Register signal handlers[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Clean up any existing processes[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', 'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;82H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Verify database connectivity[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Start the server[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hport=5000,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hdebug=False,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hthreaded=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[?25h[?25l[1;37r[37;1H
[1;38r[37;13Huse_reloader=False[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[36;26H[36;26H[36;26H[35;1H[35;1H[35;1H[34;19H[33;57H[34;19H[33;57H[34;19H[33;57H[32;26H[32;26H[32;26H[31;1H[31;1H[31;1H[30;9H[30;9H[30;9H[29;30H[29;30H[29;30H[28;26H[27;24H[28;26H[27;24H[28;26H[27;24H[26;22H[26;22H[26;22H[25;27H[24;16H[25;27H[24;16H[25;27H[24;16H[23;79H[23;79H[23;79H[22;26H[22;26H[22;26H[21;1H[21;1H[21;1H[20;23H[20;23H[20;23H[19;70H[19;70H[19;70H[18;30H[17;29H[18;30H[17;29H[18;30H[17;29H[16;51H[16;51H[16;51H[15;12H[15;12H[15;12H[14;38H[13;1H[14;38H[13;1H[14;38H[13;1H[12;63H[12;63H[12;63H[11;30H[11;30H[11;30H[10;55H[10;55H[10;55H[9;41H[8;13H[9;41H[8;13H[9;41H[8;13H[7;25H[7;25H[7;25H[6;42H[5;82H[6;42H[5;82H[6;42H[5;82H[4;27H[4;27H[4;27H[3;12H[2;41H[3;12H[2;41H[3;12H[2;41H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Himport signal[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Register signal handlers[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Main application entry point"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef main():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsys.exit(0)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[2;28H[2;28H[2;28H[3;33H[3;33H[3;33H[4;44H[4;44H[4;44H[5;59H[5;59H[5;59H[6;15H[6;15H[6;15H


[8;11H[8;11H[8;11H[9;38H[9;38H[9;38H[8;11H[8;11H[8;11H[?25l[8;37r[37;1H
[1;38r[37;9Happ.run([8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Happ.run([8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Happ.run([8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hhost='0.0.0.0',[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hport=5000,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hport=5000,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hport=5000,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hdebug=False,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hdebug=False,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hdebug=False,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hthreaded=True,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hthreaded=True,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Hthreaded=True,[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Huse_reloader=False[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Huse_reloader=False[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Huse_reloader=False[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H)[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H)[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;9H)[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hsys.exit(1)[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hsys.exit(1)[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hsys.exit(1)[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hmain()[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hmain()[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hmain()[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;13H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;5H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;5H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;5H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;9H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;1H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;5H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;5H[?25h[?25l[8;37r[m[37;1H
[1;38r[37;1H[1m[34m~                                                                                                                                     [8;5H[?25h[?25l~                                                                                                                                     [7;1H[?25h[?25l~                                                                                                                                     [7;1H[?25h[?25l~                                                                                                                                     [7;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[m[8;1H[K[8;1H[?25h[?25l[m[8;1H[K[8;1H[?25h[?25l[m[8;1H[K[8;1H[?25h[?25li[?25h[?25li[?25h[?25li[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?2004h[>4;2m[?25l[8;1H[K[8;1H[?25h[?4m[?2004h[>4;2m[?25l[8;1H[K[8;1H[?25h[?4m[?2004h[>4;2m[?25l[8;1H[K[8;1H[?25h[?4m[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[1;37r[1;1H[4M[1;38r[4;1Hdef main():
    try:[5;9H[K[6;1H        import signal[6;22H[K[7;1H        signal.signal(signal.SIGINT, safe_shutdown)[7;52H[K[8;1H        signal.signal(signal.SIGTERM, safe_shutdown)[8;53H[K[9;1H[K[10;1H        try:[10;13H[K[11;1H            subprocess.run([11;28H[K[12;1H                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[12;100H[K[13;1H                stderr=subprocess.DEVNULL,[13;43H[K[14;1H                timeout=5[14;26H[K[15;1H            )[15;14H[K[16;1H        except subprocess.TimeoutExpired:[16;42H[K[17;1H            logger.warning("Process cleanup timed out")[17;56H[K[18;1H        except Exception as e:[18;31H[K[19;1H            logger.warning(f"Process cleanup failed: {str(e)}")[19;64H[K[20;1H[K[21;1H        try:[21;13H[K[22;1H            test_conn = db_manager.get_connection()[22;52H[K[23;1H            test_conn.close()[23;30H[K[24;1H        except Exception as e:[24;31H[K[25;1H            logger.critical(f"Startup database test failed: {str(e)}")[25;71H[K[26;1H            sys.exit(1)[26;24H[K[27;1H[K[28;1H        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[28;80H[K[29;1H        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[29;91H[K[30;1H[K[31;1H    except Exception as e:[31;27H[K[32;1H        logger.critical(f"Fatal startup error: {str(e)}")[32;58H[K[33;1H        sys.exit(1)[33;20H[K[35;1Hif __name__ == '__main__':
    main()
[?25h[?25l[1;37r[1;1H[4M[1;38r[4;1Hdef main():
    try:[5;9H[K[6;1H        import signal[6;22H[K[7;1H        signal.signal(signal.SIGINT, safe_shutdown)[7;52H[K[8;1H        signal.signal(signal.SIGTERM, safe_shutdown)[8;53H[K[9;1H[K[10;1H        try:[10;13H[K[11;1H            subprocess.run([11;28H[K[12;1H                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[12;100H[K[13;1H                stderr=subprocess.DEVNULL,[13;43H[K[14;1H                timeout=5[14;26H[K[15;1H            )[15;14H[K[16;1H        except subprocess.TimeoutExpired:[16;42H[K[17;1H            logger.warning("Process cleanup timed out")[17;56H[K[18;1H        except Exception as e:[18;31H[K[19;1H            logger.warning(f"Process cleanup failed: {str(e)}")[19;64H[K[20;1H[K[21;1H        try:[21;13H[K[22;1H            test_conn = db_manager.get_connection()[22;52H[K[23;1H            test_conn.close()[23;30H[K[24;1H        except Exception as e:[24;31H[K[25;1H            logger.critical(f"Startup database test failed: {str(e)}")[25;71H[K[26;1H            sys.exit(1)[26;24H[K[27;1H[K[28;1H        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[28;80H[K[29;1H        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[29;91H[K[30;1H[K[31;1H    except Exception as e:[31;27H[K[32;1H        logger.critical(f"Fatal startup error: {str(e)}")[32;58H[K[33;1H        sys.exit(1)[33;20H[K[35;1Hif __name__ == '__main__':
    main()
[?25h[?25l[1;37r[1;1H[4M[1;38r[4;1Hdef main():
    try:[5;9H[K[6;1H        import signal[6;22H[K[7;1H        signal.signal(signal.SIGINT, safe_shutdown)[7;52H[K[8;1H        signal.signal(signal.SIGTERM, safe_shutdown)[8;53H[K[9;1H[K[10;1H        try:[10;13H[K[11;1H            subprocess.run([11;28H[K[12;1H                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[12;100H[K[13;1H                stderr=subprocess.DEVNULL,[13;43H[K[14;1H                timeout=5[14;26H[K[15;1H            )[15;14H[K[16;1H        except subprocess.TimeoutExpired:[16;42H[K[17;1H            logger.warning("Process cleanup timed out")[17;56H[K[18;1H        except Exception as e:[18;31H[K[19;1H            logger.warning(f"Process cleanup failed: {str(e)}")[19;64H[K[20;1H[K[21;1H        try:[21;13H[K[22;1H            test_conn = db_manager.get_connection()[22;52H[K[23;1H            test_conn.close()[23;30H[K[24;1H        except Exception as e:[24;31H[K[25;1H            logger.critical(f"Startup database test failed: {str(e)}")[25;71H[K[26;1H            sys.exit(1)[26;24H[K[27;1H[K[28;1H        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[28;80H[K[29;1H        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[29;91H[K[30;1H[K[31;1H    except Exception as e:[31;27H[K[32;1H        logger.critical(f"Fatal startup error: {str(e)}")[32;58H[K[33;1H        sys.exit(1)[33;20H[K[35;1Hif __name__ == '__main__':
    main()
[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l
:[?25h[?25l
:[?25h[?25l
:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 479 lines, 17750 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 479 lines, 17750 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 479 lines, 17750 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l[?2004h[?2004h
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -lrht [Kls -lrht [Kls -lrht [Kcat shems_monitoring_server.py_bkp2cat shems_monitoring_server.py_bkp2cat shems_monitoring_server.py_bkp2ls -lrth [Kls -lrth [Kls -lrth [Kmv shems_monitoring_server.py_bkp shems_monitoring_server.pymv shems_monitoring_server.py_bkp shems_monitoring_server.pymv shems_monitoring_server.py_bkp shems_monitoring_server.py shems_monitoring_server.py_bkp2 shems_monitoring_server.py_bkp2 shems_monitoring_server.py_bkp2[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -lrth[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -lrth[K[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -lrth[K./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 09:58:55 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 09:58:55 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 09:58:55 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 09:58:55 PM IST 2025
Checking for existing processes...
Checking for existing processes...
No existing simulation process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: SCRIPT_DIR: command not found
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
./shems_deploy_interface.sh: line 65: /shems_deploy_grafana.sh: No such file or directory
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...

[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27mshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh" 111 lines, 3438 bytes 111 lines, 3438 bytes 111 lines, 3438 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfor i in {1..30}; do[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Start the monitoring server[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Start the monitoring server[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Start the monitoring server[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H"$(SCRIPT_DIR)/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Deploy Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Deploy Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Deploy Grafana[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy Python scripts[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy Python scripts[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy Python scripts[?25h






































[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[?25l$(SCRIPT_DIR)/shems_deploy_grafana.sh"[11;39H[K[11;1H[?25h[?25l$(SCRIPT_DIR)/shems_deploy_grafana.sh"[11;39H[K[11;1H[?25h[?25l$(SCRIPT_DIR)/shems_deploy_grafana.sh"[11;39H[K[11;1H[?25h$$$[?25lSCRIPT_DIR)/shems_deploy_grafana.sh"[11;38H[K[11;2H[?25h[?25lSCRIPT_DIR)/shems_deploy_grafana.sh"[11;38H[K[11;2H[?25h[?25lSCRIPT_DIR)/shems_deploy_grafana.sh"[11;38H[K[11;2H[?25hSSSCCCRRRIIIPPPTTT___DDDIIIRRR[?25l/shems_deploy_grafana.sh"[11;37H[K[11;12H[?25h[?25l/shems_deploy_grafana.sh"[11;37H[K[11;12H[?25h[?25l/shems_deploy_grafana.sh"[11;37H[K[11;12H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25ls$SCRIPT_DIR/shems_deploy_grafana.sh"s[?25h[?25ls$SCRIPT_DIR/shems_deploy_grafana.sh"s[?25h[?25ls$SCRIPT_DIR/shems_deploy_grafana.sh"s[?25h[?25lh$SCRIPT_DIR/shems_deploy_grafana.sh"sh[?25h[?25lh$SCRIPT_DIR/shems_deploy_grafana.sh"sh[?25h[?25lh$SCRIPT_DIR/shems_deploy_grafana.sh"sh[?25h[?25l $SCRIPT_DIR/shems_deploy_grafana.sh"sh [?25h[?25l $SCRIPT_DIR/shems_deploy_grafana.sh"sh [?25h[?25l $SCRIPT_DIR/shems_deploy_grafana.sh"sh [?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m   $$$SSSCCCRRRIIIPPPTTT___DDDIIIRRR///ssshhheeemmmsss___dddeeepppllloooyyy___gggrrraaafffaaannnaaa...ssshhh[?25l[11;39H[K[11;38H[?25h[?25l[11;39H[K[11;38H[?25h[?25l[11;39H[K[11;38H[?25h[10;38H[10;38H[10;38H[9;27H[9;27H[9;27H[8;16H[8;16H[8;16H[7;1H[7;1H[7;1H[6;38H[6;38H[6;38H[5;38H[5;38H[5;38H[4;38H[4;38H[4;38H[3;38H[3;38H[3;38H[2;34H[2;34H[2;34H[1;21H[1;21H[1;21H[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy HTML templates[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy HTML templates[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Copy HTML templates[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install pymysql flask werkzeug tailscale[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install pymysql flask werkzeug tailscale[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install pymysql flask werkzeug tailscale[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install --upgrade pip[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install --upgrade pip[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#pip install --upgrade pip[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install Python dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install Python dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install Python dependencies[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create Python virtual environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create Python virtual environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create Python virtual environment[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring MariaDB..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring MariaDB..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Configuring MariaDB..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure MariaDB[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure MariaDB[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure MariaDB[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#sudo apt-get update[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Installing required packages..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Installing required packages..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Installing required packages..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install required packages[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install required packages[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Install required packages[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_data_simulation.py" || echo "No existing simulation process found"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_data_simulation.py" || echo "No existing simulation process found"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_data_simulation.py" || echo "No existing simulation process found"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_monitoring_server.py" || echo "No existing server process found"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_monitoring_server.py" || echo "No existing server process found"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hpkill -f "shems_monitoring_server.py" || echo "No existing server process found"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Checking for existing processes..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Checking for existing processes..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Checking for existing processes..."[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check for existing processes and kill them[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check for existing processes and kill them[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check for existing processes and kill them[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting SHEMS deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting SHEMS deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hecho "Starting SHEMS deployment at $(date)"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hexec > >(tee -a "$LOG_FILE") 2>&1[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_deployment.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_deployment.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_FILE="$LOG_DIR/shems_deployment.log"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Log file[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hmkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create directories[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create directories[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Create directories[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR="/app/smarthome/data/logs"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR="/app/smarthome/data"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR="/app/smarthome/data"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR="/app/smarthome/data"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR="/app/smarthome/dev/bin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR="/app/smarthome/dev/bin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR="/app/smarthome/dev/bin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR="/app/smarthome/dev/templates"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR="/app/smarthome/dev/templates"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR="/app/smarthome/dev/templates"[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Configure paths[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfi[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexit 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hecho "This script should not be run as root. Please run as a regular user."[1;38H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hif [ "$(id -u)" -eq 0 ]; then[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Check if running as root[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/bin/bash[?25h


[3;26H[3;26H[3;26H[4;29H[4;29H[4;29H[5;38H[5;38H[5;38H[6;10H[6;10H[6;10H
f
f
f


[9;17H[9;17H[9;17H[10;38H[10;38H[10;38H[11;35H[11;35H[11;35H[12;28H[12;28H[12;28H[13;34H[13;34H[13;34H


[15;20H[15;20H[15;20H[16;38H[16;38H[16;38H


[18;10H[18;10H[18;10H[19;38H[19;38H[19;38H[20;33H[20;33H[20;33H


[22;38H[22;38H[22;38H


[24;38H[24;38H[24;38H[25;38H[25;38H[25;38H[26;38H[26;38H[26;38H[27;38H[27;38H[27;38H


[29;27H[29;27H[29;27H[30;38H[30;38H[30;38H[31;20H[31;20H[31;20H[32;38H[32;38H[32;38H


[34;19H[34;19H[34;19H[35;29H[35;29H[35;29H[36;38H[36;38H[36;38H[37;38H[37;38H[37;38H[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsh $SCRIPT_DIR/shems_deploy_grafana.sh[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsh $SCRIPT_DIR/shems_deploy_grafana.sh[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsh $SCRIPT_DIR/shems_deploy_grafana.sh[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Access points:"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Web Interface (Local): http://$PI_IP:5000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Web Interface (Tailscale): http://$TAILSCALE_IP:5000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "  - Grafana (Local): http://$PI_IP:3000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -n "$TAILSCALE_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "  - Grafana (Tailscale): http://$TAILSCALE_IP:3000"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Grafana credentials: admin/admin (change this after first login)"[37;38H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Log files are available in: $LOG_DIR"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed at $(date)"[?25h[?25l
:[?25h[?25l
:[?25h[?25l
:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_deploy_interface.sh"[?25l[?2004l[>4;m"shems_deploy_interface.sh"[?25l[?2004l[>4;m"shems_deploy_interface.sh" 111 lines, 3437 bytes written 111 lines, 3437 bytes written 111 lines, 3437 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_deploy_interface.shvi shems_deploy_interface.shvi shems_deploy_interface.sh[1P./shems_deploy_interface.sh[1P./shems_deploy_interface.sh[1P./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 10:00:07 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:00:07 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:00:07 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:00:07 PM IST 2025
Checking for existing processes...
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Installing required packages...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
No existing simulation process found
Configuring MariaDB...
Installing required packages...
Configuring MariaDB...
Configuring MariaDB...
Setting up Python environment...
Setting up Python environment...
Setting up Python environment...
Setting up Python environment...



[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_deploy_interface.shvi shems_deploy_interface.shvi shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[22;1t[1;38r[?12h[?12l[22;2t[1;38r[?12h[?12l[22;2t[22;1t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_interface.sh" 111 lines, 3437 bytes 111 lines, 3437 bytes 111 lines, 3437 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
HTML_DIR="/app/smarthome/dev/templates"
SCRIPT_DIR="/app/smarthome/dev/bin"
DB_DIR="/app/smarthome/data"
LOG_DIR="/app/smarthome/data/logs"

# Create directories
mkdir -p "$HTML_DIR" "$SCRIPT_DIR" "$DB_DIR" "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_deployment.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting SHEMS deployment at $(date)"

# Check for existing processes and kill them
echo "Checking for existing processes..."
pkill -f "shems_monitoring_server.py" || echo "No existing server process found"
pkill -f "shems_data_simulation.py" || echo "No existing simulation process found"

# Install required packages
echo "Installing required packages..."
#sudo apt-get update
#sudo apt-get install -y python3 python3-pip python3-venv mariadb-server libmariadb-dev

# Configure MariaDB
echo "Configuring MariaDB..."
#sudo mysql -e "CREATE DATABASE IF NOT EXISTS $DB_NAME;"
#sudo mysql -e "CREATE USER IF NOT EXISTS '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';"[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'localhost';"[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#sudo mysql -e "FLUSH PRIVILEGES;"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Create Python virtual environment[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Setting up Python environment..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hpython3 -m venv "$SCRIPT_DIR/venv"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsource "$SCRIPT_DIR/venv/bin/activate"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Install Python dependencies[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install --upgrade pip[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#pip install pymysql flask werkzeug tailscale[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy HTML templates[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying HTML templates..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_input.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_dashboard_visuals.html" "$HTML_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Copy Python scripts[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Python scripts..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_monitoring_server.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#cp "$(dirname "$0")/shems_data_simulation.py" "$SCRIPT_DIR/"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_monitoring_server.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$SCRIPT_DIR/shems_data_simulation.py"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Deploy Grafana[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deploying Grafana..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H#chmod +x "$(dirname "$0")/shems_deploy_grafana.sh"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsh $SCRIPT_DIR/shems_deploy_grafana.sh[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsh $SCRIPT_DIR/shems_deploy_grafana.sh[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hsh $SCRIPT_DIR/shems_deploy_grafana.sh[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Start the monitoring server[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Starting monitoring server..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hnohup "$SCRIPT_DIR/venv/bin/python" "$SCRIPT_DIR/shems_monitoring_server.py" >> "$LOG_DIR/shems_server.log" 2>&1 &[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Wait for server to start (max 30 seconds)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Waiting for server to start..."[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfor i in {1..30}; do[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hif curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hecho "Server is running"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hbreak[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsleep 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdone[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif ! curl -s "http://localhost:5000" > /dev/null; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hecho "Server failed to start within 30 seconds"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexit 1[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Raspberry Pi IP[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1HPI_IP=$(hostname -I | awk '{print $1}')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif [ -z "$PI_IP" ]; then[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;5HPI_IP="127.0.0.1"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hfi[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# Get Tailscale IP if available[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1HTAILSCALE_IP=$(tailscale ip -4 2>/dev/null | head -n1 || echo "")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho "Deployment completed successfully!"[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hecho ""[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1Hssshhh   $$$SSSCCCRRRIIIPPP[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_deploy_interface.sh"[?25l[?2004l[>4;m"shems_deploy_interface.sh"[?25l[?2004l[>4;m"shems_deploy_interface.sh" 111 lines, 3437 bytes written 111 lines, 3437 bytes written 111 lines, 3437 bytes written[23;2t[23;2t[23;2t[23;1t[23;1t[23;1t
[?2004l[?1l>
[?2004l[?1l>
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_deploy_interface.shvi shems_deploy_interface.shvi shems_deploy_interface.sh[1P./shems_deploy_interface.sh[1P./shems_deploy_interface.sh[1P./shems_deploy_interface.shvi shems_deploy_interface.shvi shems_deploy_interface.shvi shems_deploy_interface.sh[1P./shems_deploy_interface.sh[1P./shems_deploy_interface.sh[1P./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 10:00:35 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:00:35 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:00:35 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:00:35 PM IST 2025
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
Installing required packages...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Configuring MariaDB...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Setting up Python environment...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
/app/smarthome/dev/bin/shems_deploy_grafana.sh: 15: Syntax error: redirection unexpected
/app/smarthome/dev/bin/shems_deploy_grafana.sh: 15: Syntax error: redirection unexpected
/app/smarthome/dev/bin/shems_deploy_grafana.sh: 15: Syntax error: redirection unexpected
/app/smarthome/dev/bin/shems_deploy_grafana.sh: 15: Syntax error: redirection unexpected
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...



[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccttt[K[K[Kaaattt---[K[K[K   ---nnn   [7m/app/smarthome/dev/bin/shems_deploy_grafana.sh[27m[7m/app/smarthome/dev/bin/shems_deploy_grafana.sh[27m[7m/app/smarthome/dev/bin/shems_deploy_grafana.sh[27m/app/smarthome/dev/bin/shems_deploy_grafana.sh
[?2004l/app/smarthome/dev/bin/shems_deploy_grafana.sh
[?2004l/app/smarthome/dev/bin/shems_deploy_grafana.sh
[?2004l     1	#!/bin/bash
     2	
     3	# Check if running as root
     4	if [ "$(id -u)" -eq 0 ]; then
     5	    echo "This script should not be run as root. Please run as a regular user."
     6	    exit 1
     7	fi
     8	
     9	# Configure paths
    10	LOG_DIR="/app/smarthome/data/logs"
    11	mkdir -p "$LOG_DIR"
    12	
    13	# Log file
    14	LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
    15	exec > >(tee -a "$LOG_FILE") 2>&1
    16	
    17	echo "Starting Grafana deployment at $(date)"
    18	
    19	# Check if Grafana is already installed
    20	if ! command -v grafana-server &> /dev/null; then
    21	    echo "Grafana not found. Installing..."
    22	    
    23	    # Install dependencies
    24	    sudo apt-get update
    25	    sudo apt-get install -y apt-transport-https software-properties-common wget
    26	    
    27	    # Add Grafana repository
    28	    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    29	    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
    30	    
    31	    # Install Grafana
    32	    sudo apt-get update
    33	    sudo apt-get install -y grafana
    34	    
    35	    # Enable and start Grafana service
    36	    sudo systemctl enable grafana-server
    37	    sudo systemctl start grafana-server
    38	    
    39	    echo "Grafana installed successfully"
    40	else
    41	    echo "Grafana is already installed"
    42	fi
    43	
    44	# Wait for Grafana to start (max 30 seconds)
    45	echo "Waiting for Grafana to start..."
    46	for i in {1..30}; do
    47	    if systemctl is-active --quiet grafana-server; then
    48	        echo "Grafana is running"
    49	        break
    50	    fi
    51	    sleep 1
    52	done
    53	
    54	if ! systemctl is-active --quiet grafana-server; then
    55	    echo "Grafana failed to start within 30 seconds"
    56	    exit 1
    57	fi
    58	
    59	# Configure Grafana data source (MySQL)
    60	echo "Configuring Grafana data source..."
    61	
    62	# Get MySQL credentials from environment
    63	DB_USER="${DB_USER:-shems_mis}"
    64	DB_PASS="${DB_PASS:-RAS@23}"
    65	DB_NAME="${DB_NAME:-shems_db}"
    66	
    67	# Get Raspberry Pi IP
    68	PI_IP=$(hostname -I | awk '{print $1}')
    69	
    70	# Create data source configuration
    71	DATASOURCE_JSON=$(cat <<EOF
    72	{
    73	  "name": "SHEMS-MySQLDB",
    74	  "type": "mysql",
    75	  "url": "$PI_IP:3306",
    76	  "database": "$DB_NAME",
    77	  "user": "$DB_USER",
    78	  "password": "$DB_PASS",
    79	  "access": "proxy",
    80	  "isDefault": true,
    81	  "jsonData": {
    82	    "maxOpenConns": 10,
    83	    "maxIdleConns": 5,
    84	    "connMaxLifetime": 14400
    85	  }
    86	}
    87	EOF
    88	)
    89	
    90	# Configure data source using Grafana API
    91	for i in {1..10}; do
    92	    RESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \
    93	        -H "Content-Type: application/json" \
    94	        -d "$DATASOURCE_JSON" \
    95	        -u admin:admin)
    96	    
    97	    if echo "$RESPONSE" | grep -q "Datasource added"; then
    98	        echo "Data source configured successfully"
    99	        break
   100	    elif echo "$RESPONSE" | grep -q "already exists"; then
   101	        echo "Data source already exists"
   102	        break
   103	    else
   104	        echo "Attempt $i: Failed to configure data source, retrying..."
   105	        sleep 3
   106	    fi
   107	done
   108	
   109	# Import dashboards
   110	echo "Importing Grafana dashboards..."
   111	
   112	# Dashboard files
   113	DASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"
   114	mkdir -p "$DASHBOARD_DIR"
   115	
   116	# Import dashboards using Grafana API
   117	for dashboard in "$DASHBOARD_DIR"/*.json; do
   118	    dashboard_name=$(basename "$dashboard" .json)
   119	    echo "Importing dashboard: $dashboard_name"
   120	    
   121	    for i in {1..5}; do
   122	        RESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \
   123	            -H "Content-Type: application/json" \
   124	            -d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \
   125		    -u admin:admin)
   126	        
   127	        if echo "$RESPONSE" | grep -q '"status":"success"'; then
   128	            echo "Dashboard $dashboard_name imported successfully"
   129	            break
   130	        else
   131	            echo "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."
   132	            sleep 3
   133	        fi
   134	    done
   135	done
   136	
   137	echo "Grafana deployment completed at $(date)"
     1	#!/bin/bash
     2	
     3	# Check if running as root
     4	if [ "$(id -u)" -eq 0 ]; then
     5	    echo "This script should not be run as root. Please run as a regular user."
     6	    exit 1
     7	fi
     8	
     9	# Configure paths
    10	LOG_DIR="/app/smarthome/data/logs"
    11	mkdir -p "$LOG_DIR"
    12	
    13	# Log file
    14	LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
    15	exec > >(tee -a "$LOG_FILE") 2>&1
    16	
    17	echo "Starting Grafana deployment at $(date)"
    18	
    19	# Check if Grafana is already installed
    20	if ! command -v grafana-server &> /dev/null; then
    21	    echo "Grafana not found. Installing..."
    22	    
    23	    # Install dependencies
    24	    sudo apt-get update
    25	    sudo apt-get install -y apt-transport-https software-properties-common wget
    26	    
    27	    # Add Grafana repository
    28	    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    29	    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
    30	    
    31	    # Install Grafana
    32	    sudo apt-get update
    33	    sudo apt-get install -y grafana
    34	    
    35	    # Enable and start Grafana service
    36	    sudo systemctl enable grafana-server
    37	    sudo systemctl start grafana-server
    38	    
    39	    echo "Grafana installed successfully"
    40	else
    41	    echo "Grafana is already installed"
    42	fi
    43	
    44	# Wait for Grafana to start (max 30 seconds)
    45	echo "Waiting for Grafana to start..."
    46	for i in {1..30}; do
    47	    if systemctl is-active --quiet grafana-server; then
    48	        echo "Grafana is running"
    49	        break
    50	    fi
    51	    sleep 1
    52	done
    53	
    54	if ! systemctl is-active --quiet grafana-server; then
    55	    echo "Grafana failed to start within 30 seconds"
    56	    exit 1
    57	fi
    58	
    59	# Configure Grafana data source (MySQL)
    60	echo "Configuring Grafana data source..."
    61	
    62	# Get MySQL credentials from environment
    63	DB_USER="${DB_USER:-shems_mis}"
    64	DB_PASS="${DB_PASS:-RAS@23}"
    65	DB_NAME="${DB_NAME:-shems_db}"
    66	
    67	# Get Raspberry Pi IP
    68	PI_IP=$(hostname -I | awk '{print $1}')
    69	
    70	# Create data source configuration
    71	DATASOURCE_JSON=$(cat <<EOF
    72	{
    73	  "name": "SHEMS-MySQLDB",
    74	  "type": "mysql",
    75	  "url": "$PI_IP:3306",
    76	  "database": "$DB_NAME",
    77	  "user": "$DB_USER",
    78	  "password": "$DB_PASS",
    79	  "access": "proxy",
    80	  "isDefault": true,
    81	  "jsonData": {
    82	    "maxOpenConns": 10,
    83	    "maxIdleConns": 5,
    84	    "connMaxLifetime": 14400
    85	  }
    86	}
    87	EOF
    88	)
    89	
    90	# Configure data source using Grafana API
    91	for i in {1..10}; do
    92	    RESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \
    93	        -H "Content-Type: application/json" \
    94	        -d "$DATASOURCE_JSON" \
    95	        -u admin:admin)
    96	    
    97	    if echo "$RESPONSE" | grep -q "Datasource added"; then
    98	        echo "Data source configured successfully"
    99	        break
   100	    elif echo "$RESPONSE" | grep -q "already exists"; then
   101	        echo "Data source already exists"
   102	        break
   103	    else
   104	        echo "Attempt $i: Failed to configure data source, retrying..."
   105	        sleep 3
   106	    fi
   107	done
   108	
   109	# Import dashboards
   110	echo "Importing Grafana dashboards..."
   111	
   112	# Dashboard files
   113	DASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"
   114	mkdir -p "$DASHBOARD_DIR"
   115	
   116	# Import dashboards using Grafana API
   117	for dashboard in "$DASHBOARD_DIR"/*.json; do
   118	    dashboard_name=$(basename "$dashboard" .json)
   119	    echo "Importing dashboard: $dashboard_name"
   120	    
   121	    for i in {1..5}; do
   122	        RESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \
   123	            -H "Content-Type: application/json" \
   124	            -d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \
   125		    -u admin:admin)
   126	        
   127	        if echo "$RESPONSE" | grep -q '"status":"success"'; then
   128	            echo "Dashboard $dashboard_name imported successfully"
   129	            break
   130	        else
   131	            echo "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."
   132	            sleep 3
   133	        fi
   134	    done
   135	done
   136	
   137	echo "Grafana deployment completed at $(date)"
     1	#!/bin/bash
     2	
     3	# Check if running as root
     4	if [ "$(id -u)" -eq 0 ]; then
     5	    echo "This script should not be run as root. Please run as a regular user."
     6	    exit 1
     7	fi
     8	
     9	# Configure paths
    10	LOG_DIR="/app/smarthome/data/logs"
    11	mkdir -p "$LOG_DIR"
    12	
    13	# Log file
    14	LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
    15	exec > >(tee -a "$LOG_FILE") 2>&1
    16	
    17	echo "Starting Grafana deployment at $(date)"
    18	
    19	# Check if Grafana is already installed
    20	if ! command -v grafana-server &> /dev/null; then
    21	    echo "Grafana not found. Installing..."
    22	    
    23	    # Install dependencies
    24	    sudo apt-get update
    25	    sudo apt-get install -y apt-transport-https software-properties-common wget
    26	    
    27	    # Add Grafana repository
    28	    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    29	    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
    30	    
    31	    # Install Grafana
    32	    sudo apt-get update
    33	    sudo apt-get install -y grafana
    34	    
    35	    # Enable and start Grafana service
    36	    sudo systemctl enable grafana-server
    37	    sudo systemctl start grafana-server
    38	    
    39	    echo "Grafana installed successfully"
    40	else
    41	    echo "Grafana is already installed"
    42	fi
    43	
    44	# Wait for Grafana to start (max 30 seconds)
    45	echo "Waiting for Grafana to start..."
    46	for i in {1..30}; do
    47	    if systemctl is-active --quiet grafana-server; then
    48	        echo "Grafana is running"
    49	        break
    50	    fi
    51	    sleep 1
    52	done
    53	
    54	if ! systemctl is-active --quiet grafana-server; then
    55	    echo "Grafana failed to start within 30 seconds"
    56	    exit 1
    57	fi
    58	
    59	# Configure Grafana data source (MySQL)
    60	echo "Configuring Grafana data source..."
    61	
    62	# Get MySQL credentials from environment
    63	DB_USER="${DB_USER:-shems_mis}"
    64	DB_PASS="${DB_PASS:-RAS@23}"
    65	DB_NAME="${DB_NAME:-shems_db}"
    66	
    67	# Get Raspberry Pi IP
    68	PI_IP=$(hostname -I | awk '{print $1}')
    69	
    70	# Create data source configuration
    71	DATASOURCE_JSON=$(cat <<EOF
    72	{
    73	  "name": "SHEMS-MySQLDB",
    74	  "type": "mysql",
    75	  "url": "$PI_IP:3306",
    76	  "database": "$DB_NAME",
    77	  "user": "$DB_USER",
    78	  "password": "$DB_PASS",
    79	  "access": "proxy",
    80	  "isDefault": true,
    81	  "jsonData": {
    82	    "maxOpenConns": 10,
    83	    "maxIdleConns": 5,
    84	    "connMaxLifetime": 14400
    85	  }
    86	}
    87	EOF
    88	)
    89	
    90	# Configure data source using Grafana API
    91	for i in {1..10}; do
    92	    RESPONSE=$(curl -s -X POST "http://localhost:3000/api/datasources" \
    93	        -H "Content-Type: application/json" \
    94	        -d "$DATASOURCE_JSON" \
    95	        -u admin:admin)
    96	    
    97	    if echo "$RESPONSE" | grep -q "Datasource added"; then
    98	        echo "Data source configured successfully"
    99	        break
   100	    elif echo "$RESPONSE" | grep -q "already exists"; then
   101	        echo "Data source already exists"
   102	        break
   103	    else
   104	        echo "Attempt $i: Failed to configure data source, retrying..."
   105	        sleep 3
   106	    fi
   107	done
   108	
   109	# Import dashboards
   110	echo "Importing Grafana dashboards..."
   111	
   112	# Dashboard files
   113	DASHBOARD_DIR="/app/smarthome/grafana/grafana_dashboards"
   114	mkdir -p "$DASHBOARD_DIR"
   115	
   116	# Import dashboards using Grafana API
   117	for dashboard in "$DASHBOARD_DIR"/*.json; do
   118	    dashboard_name=$(basename "$dashboard" .json)
   119	    echo "Importing dashboard: $dashboard_name"
   120	    
   121	    for i in {1..5}; do
   122	        RESPONSE=$(curl -s -X POST "http://localhost:3000/api/dashboards/db" \
   123	            -H "Content-Type: application/json" \
   124	            -d "$(jq -n --argfile dash $dashboard '{dashboard: $dash, overwrite: true}')" \
   125		    -u admin:admin)
   126	        
   127	        if echo "$RESPONSE" | grep -q '"status":"success"'; then
   128	            echo "Dashboard $dashboard_name imported successfully"
   129	            break
   130	        else
   131	            echo "Attempt $i: Failed to import dashboard $dashboard_name, retrying..."
   132	            sleep 3
   133	        fi
   134	    done
   135	done
   136	
   137	echo "Grafana deployment completed at $(date)"
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis  18K Apr 18 21:58 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis  18K Apr 18 21:58 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 20:57 shems_deploy_grafana.sh
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis  18K Apr 18 21:58 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [K[K[K[K[K[K[K[K[Kvvviii   [7mshems_deploy_grafana.sh[27m[7mshems_deploy_grafana.sh[27m[7mshems_deploy_grafana.sh[27mshems_deploy_grafana.sh
[?2004lshems_deploy_grafana.sh
[?2004lshems_deploy_grafana.sh
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_deploy_grafana.sh" 137 lines, 3730 bytes 137 lines, 3730 bytes 137 lines, 3730 bytes[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m[1;1H#!/bin/bash

# Check if running as root
if [ "$(id -u)" -eq 0 ]; then
    echo "This script should not be run as root. Please run as a regular user."
    exit 1
fi

# Configure paths
LOG_DIR="/app/smarthome/data/logs"
mkdir -p "$LOG_DIR"

# Log file
LOG_FILE="$LOG_DIR/shems_grafana_deploy.log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "Starting Grafana deployment at $(date)"

# Check if Grafana is already installed
if ! command -v grafana-server &> /dev/null; then
    echo "Grafana not found. Installing..."[23;5H# Install dependencies
    sudo apt-get update
    sudo apt-get install -y apt-transport-https software-properties-common wget[27;5H# Add Grafana repository
    wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list[31;5H# Install Grafana
    sudo apt-get update
    sudo apt-get install -y grafana[35;5H# Enable and start Grafana service
    sudo systemctl enable grafana-server
    sudo systemctl start grafana-server[1;1H[?25h[?4m









































[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l#exec > >(tee -a "$LOG_FILE") 2>&1#[?25h[?25l#exec > >(tee -a "$LOG_FILE") 2>&1#[?25h[?25l#exec > >(tee -a "$LOG_FILE") 2>&1#[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_deploy_grafana.sh"[?25l[?2004l[>4;m"shems_deploy_grafana.sh"[?25l[?2004l[>4;m"shems_deploy_grafana.sh" 137 lines, 3731 bytes written 137 lines, 3731 bytes written 137 lines, 3731 bytes written[23;2t[23;2t[23;1t[23;2t
[?2004l[?1l>[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_deploy_grafana.shvi shems_deploy_grafana.shvi shems_deploy_grafana.sh[17Pls -lrth [17Pls -lrth [17Pls -lrth cat -n /app/smarthome/dev/bin/shems_deploy_grafana.shcat -n /app/smarthome/dev/bin/shems_deploy_grafana.shcat -n /app/smarthome/dev/bin/shems_deploy_grafana.sh[26P./shems_deploy_interface.sh[26P./shems_deploy_interface.sh[26P./shems_deploy_interface.sh


[?2004l[?2004l[?2004lStarting SHEMS deployment at Fri Apr 18 10:02:12 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:02:12 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:02:12 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:02:12 PM IST 2025
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 10:02:25 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:02:25 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:02:25 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Starting Grafana deployment at Fri Apr 18 10:02:25 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:2 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Hit:2 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Hit:2 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Hit:2 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Hit:3 http://archive.raspberrypi.com/debian bookworm InRelease
Hit:3 http://archive.raspberrypi.com/debian bookworm InRelease
Hit:3 http://archive.raspberrypi.com/debian bookworm InRelease
Hit:3 http://archive.raspberrypi.com/debian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 6,581 B in 2s (3,689 B/s)
Reading package lists...Fetched 6,581 B in 2s (3,689 B/s)
Reading package lists...Fetched 6,581 B in 2s (3,689 B/s)
Reading package lists...Fetched 6,581 B in 2s (3,689 B/s)
Reading package lists...



WWWW: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Reading package lists...Reading package lists...Reading package lists...Reading package lists...



Building dependency tree...Building dependency tree...Building dependency tree...Building dependency tree...
Reading state information...

Reading state information...Reading state information...
Reading state information...



apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
The following packages were automatically installed and are no longer required:
apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
The following packages were automatically installed and are no longer required:
apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
The following packages were automatically installed and are no longer required:
apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
The following packages were automatically installed and are no longer required:
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: The list of sources could not be read.
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Data source already exists
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
jq: Bad JSON in --argfile dash /app/smarthome/grafana/grafana_dashboards/device-details.json: ':' not as part of an object at line 273, column 21
jq: Bad JSON in --argfile dash /app/smarthome/grafana/grafana_dashboards/device-details.json: ':' not as part of an object at line 273, column 21
jq: Bad JSON in --argfile dash /app/smarthome/grafana/grafana_dashboards/device-details.json: ':' not as part of an object at line 273, column 21
jq: Bad JSON in --argfile dash /app/smarthome/grafana/grafana_dashboards/device-details.json: ':' not as part of an object at line 273, column 21
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 10:02:48 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:02:48 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:02:48 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:02:48 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server failed to start within 30 seconds
Server failed to start within 30 seconds
Server failed to start within 30 seconds
Server failed to start within 30 seconds
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m rrrmmm   ---rrrfff   [7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m[7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m[7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m[7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m[7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"/app/smarthome/grafana/grafana_dashboards/device-details.json" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"/app/smarthome/grafana/grafana_dashboards/device-details.json" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"/app/smarthome/grafana/grafana_dashboards/device-details.json" [New File][2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[m[8C"definition": "SELECT UserId as __value, Username as __text FROM Users",
        "label": "User ID",[2;28H[K[3;1H        "name": "userId",[3;26H[K[4;1H        "options": [],[4;23H[K[5;1H        "query": "SELECT UserId as __value, Username as __text FROM Users",[5;76H[K[6;1H        "refresh": 1,[6;22H[K[7;1H        "type": "query"[7;24H[K[8;1H      },[8;9H[K[9;1H      {[9;8H[K[10;1H        "current": {[10;21H[K[11;1H          "text": "Smart Light #2",[11;36H[K[12;1H          "value": "2"[12;23H[K[13;1H        },[13;11H[K[14;1H        "datasource": {[14;24H[K[15;1H          "type": "mysql",[15;27H[K[16;1H          "uid": "beja3ou85vhmof"[16;34H[K[17;1H        },[17;11H[K[18;1H        "definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[18;113H[K[19;1H        "label": "Device",[19;27H[K[20;1H        "name": "deviceId",[20;28H[K[21;1H        "options": [],[21;23H[K[22;1H        "query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[22;108H[K[23;1H        "refresh": 1,[23;22H[K[24;1H        "type": "query"[24;24H[K[25;1H      }[25;8H[K[26;1H    ][26;6H[K[27;1H  },[27;5H[K[28;1H  "time": {[28;12H[K[29;1H    "from": "now-7d",[29;22H[K[30;1H    "to": "now"[30;16H[K[31;1H  },[31;5H[K[32;1H  "timepicker": {},[32;20H[K[33;1H  "timezone": "browser",[33;25H[K[34;1H  "title": "Device Details",[34;29H[K[35;1H  "uid": "dejaf5pvb8e0wf",[35;27H[K[36;1H  "version": 4[36;15H[K[37;1H}[37;2H[K[37;2H[?25h[?25l[m[8C"definition": "SELECT UserId as __value, Username as __text FROM Users",
        "label": "User ID",[2;28H[K[3;1H        "name": "userId",[3;26H[K[4;1H        "options": [],[4;23H[K[5;1H        "query": "SELECT UserId as __value, Username as __text FROM Users",[5;76H[K[6;1H        "refresh": 1,[6;22H[K[7;1H        "type": "query"[7;24H[K[8;1H      },[8;9H[K[9;1H      {[9;8H[K[10;1H        "current": {[10;21H[K[11;1H          "text": "Smart Light #2",[11;36H[K[12;1H          "value": "2"[12;23H[K[13;1H        },[13;11H[K[14;1H        "datasource": {[14;24H[K[15;1H          "type": "mysql",[15;27H[K[16;1H          "uid": "beja3ou85vhmof"[16;34H[K[17;1H        },[17;11H[K[18;1H        "definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[18;113H[K[19;1H        "label": "Device",[19;27H[K[20;1H        "name": "deviceId",[20;28H[K[21;1H        "options": [],[21;23H[K[22;1H        "query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[22;108H[K[23;1H        "refresh": 1,[23;22H[K[24;1H        "type": "query"[24;24H[K[25;1H      }[25;8H[K[26;1H    ][26;6H[K[27;1H  },[27;5H[K[28;1H  "time": {[28;12H[K[29;1H    "from": "now-7d",[29;22H[K[30;1H    "to": "now"[30;16H[K[31;1H  },[31;5H[K[32;1H  "timepicker": {},[32;20H[K[33;1H  "timezone": "browser",[33;25H[K[34;1H  "title": "Device Details",[34;29H[K[35;1H  "uid": "dejaf5pvb8e0wf",[35;27H[K[36;1H  "version": 4[36;15H[K[37;1H}[37;2H[K[37;2H[?25h[?25l[m[8C"definition": "SELECT UserId as __value, Username as __text FROM Users",
        "label": "User ID",[2;28H[K[3;1H        "name": "userId",[3;26H[K[4;1H        "options": [],[4;23H[K[5;1H        "query": "SELECT UserId as __value, Username as __text FROM Users",[5;76H[K[6;1H        "refresh": 1,[6;22H[K[7;1H        "type": "query"[7;24H[K[8;1H      },[8;9H[K[9;1H      {[9;8H[K[10;1H        "current": {[10;21H[K[11;1H          "text": "Smart Light #2",[11;36H[K[12;1H          "value": "2"[12;23H[K[13;1H        },[13;11H[K[14;1H        "datasource": {[14;24H[K[15;1H          "type": "mysql",[15;27H[K[16;1H          "uid": "beja3ou85vhmof"[16;34H[K[17;1H        },[17;11H[K[18;1H        "definition": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[18;113H[K[19;1H        "label": "Device",[19;27H[K[20;1H        "name": "deviceId",[20;28H[K[21;1H        "options": [],[21;23H[K[22;1H        "query": "SELECT DeviceId as __value, DeviceName as __text FROM DeviceInfo WHERE UserId = $userId",[22;108H[K[23;1H        "refresh": 1,[23;22H[K[24;1H        "type": "query"[24;24H[K[25;1H      }[25;8H[K[26;1H    ][26;6H[K[27;1H  },[27;5H[K[28;1H  "time": {[28;12H[K[29;1H    "from": "now-7d",[29;22H[K[30;1H    "to": "now"[30;16H[K[31;1H  },[31;5H[K[32;1H  "timepicker": {},[32;20H[K[33;1H  "timezone": "browser",[33;25H[K[34;1H  "title": "Device Details",[34;29H[K[35;1H  "uid": "dejaf5pvb8e0wf",[35;27H[K[36;1H  "version": 4[36;15H[K[37;1H}[37;2H[K[37;2H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m[?25l[?2004l[>4;m"/app/smarthome/grafana/grafana_dashboards/device-details.json""/app/smarthome/grafana/grafana_dashboards/device-details.json"[?25l[?2004l[>4;m"/app/smarthome/grafana/grafana_dashboards/device-details.json" [New File] 318 lines, 7891 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m [New File] 318 lines, 7891 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m [New File] 318 lines, 7891 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ccchhhmmmoooddd   777777777   [7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m[7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m[7m/app/smarthome/grafana/grafana_dashboards/device-details.json[27m/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l/app/smarthome/grafana/grafana_dashboards/device-details.json
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lslsls   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis  18K Apr 18 21:58 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis  18K Apr 18 21:58 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis  18K Apr 18 21:58 shems_monitoring_server.py
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[1;38r[?12h[?12l[22;2t[22;1t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 479 lines, 17750 bytes 479 lines, 17750 bytes 479 lines, 17750 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1H# ===== Main Execution =====
def safe_shutdown(signum, frame):[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1H# ===== Main Execution =====
def safe_shutdown(signum, frame):[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1H# ===== Main Execution =====
def safe_shutdown(signum, frame):[36;1H[?25h


[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5Hsys.exit(0)[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5Hsys.exit(0)[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5Hsys.exit(0)[?25h


[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[?25h[?25l[1;37r[37;1H
[1;38r[37;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h























[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H
































[?25l[18;37r[37;1H
[1;38r[37;13H)[18;1H[?25h[?25l[18;37r[37;1H
[1;38r[37;13H)[18;1H[?25h[?25l[18;37r[37;1H
[1;38r[37;13H)[18;1H[?25h[?25l[18;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[18;1H[?25h[?25l[18;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[18;1H[?25h[?25l[18;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[18;1H[?25h
























































[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h















































[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"active_devices": active_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"active_devices": active_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"active_devices": active_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_devices": total_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_devices": total_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_devices": total_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"username": username,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"username": username,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"username": username,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({"access_points": access_points, "tailscale_ip": tailscale_ip})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5H"""Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5H"""Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;5H"""Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")[36;1H[?25h


[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1Hdef main():
    try:[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1Hdef main():
    try:[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;1Hdef main():
    try:[36;1H[?25h


[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[?25l[16;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[16;1H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[16;1H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[16;1H[?25h[?25l[16;37r[37;1H
[1;38r[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Htry:[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Htry:[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Htry:[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;13Hsubprocess.run([16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;13Hsubprocess.run([16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;13Hsubprocess.run([16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;17Hstderr=subprocess.DEVNULL,[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;17Htimeout=5[16;13H[?25h[?25l[16;37r[37;1H
[1;38r[37;17Htimeout=5[16;13H[?25h[?25l[16;37r[37;1H
[1;38r[37;17Htimeout=5[16;13H[?25h[?25l[16;37r[37;1H
[1;38r[37;13H)[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;13H)[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;13H)[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hexcept subprocess.TimeoutExpired:[16;9H[?25h[?25l[16;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;13Hlogger.warning("Process cleanup timed out")[16;5H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[16;1H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[16;1H[?25h[?25l[16;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[16;1H[?25h[15;1H[15;1H[15;1H[?25l[15;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[15;1H[?25h[?25l[15;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[15;1H[?25h[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 465 lines, 17332 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 465 lines, 17332 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 465 lines, 17332 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.pyls -lrth [Kls -lrth [Kls -lrth [Kchmod 777 /app/smarthome/grafana/grafana_dashboards/device-details.jsonchmod 777 /app/smarthome/grafana/grafana_dashboards/device-details.jsonchmod 777 /app/smarthome/grafana/grafana_dashboards/device-details.json[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pvi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pvi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7Pvi[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@rm -rf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@rm -rf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@rm -rf[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[41P./shems_deploy_interface.sh[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[41P./shems_deploy_interface.sh[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[41P./shems_deploy_interface.sh[1Pvi shems_deploy_grafana.sh[1Pvi shems_deploy_grafana.sh[1Pvi shems_deploy_grafana.sh./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 10:09:58 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:09:58 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:09:58 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:09:58 PM IST 2025
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Installing required packages...
Configuring MariaDB...
Configuring MariaDB...
No existing simulation process found
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 10:10:10 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:10:10 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:10:10 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:10:10 PM IST 2025
Grafana not found. Installing...
Grafana not found. Installing...
Grafana not found. Installing...
/usr/sbin/grafana-server
/usr/sbin/grafana-server
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: The list of sources could not be read.
E: The list of sources could not be read.
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
EE: EE: : : Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Data source already exists
Importing Grafana dashboards...
Data source already exists
Data source already exists
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 10:10:17 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:10:17 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:10:17 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:10:17 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running
Server is running
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 10:10:19 PM IST 2025
Deployment completed at Fri Apr 18 10:10:19 PM IST 2025
Deployment completed at Fri Apr 18 10:10:19 PM IST 2025
Deployment completed at Fri Apr 18 10:10:19 PM IST 2025
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   [K[K[K[K[K[K[K[K[Kcccddd   ......///......///dddaaatttaaa///lllooogggsss
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 1.7M
-rw-r--r-- 1 shems-mis shems-mis  28K Apr 18 20:16 shems_grafana_deploy.log
-rw-r--r-- 1 shems-mis shems-mis 7.6K Apr 18 22:11 shems_simulation.log
-rw-r--r-- 1 shems-mis shems-mis  82K Apr 18 22:12 shems_server.log
-rw-r--r-- 1 shems-mis shems-mis 1.6M Apr 18 22:12 shems_deployment.log
total 1.7M
-rw-r--r-- 1 shems-mis shems-mis  28K Apr 18 20:16 shems_grafana_deploy.log
-rw-r--r-- 1 shems-mis shems-mis 7.6K Apr 18 22:11 shems_simulation.log
-rw-r--r-- 1 shems-mis shems-mis  82K Apr 18 22:12 shems_server.log
-rw-r--r-- 1 shems-mis shems-mis 1.6M Apr 18 22:12 shems_deployment.log
total 1.7M
-rw-r--r-- 1 shems-mis shems-mis  28K Apr 18 20:16 shems_grafana_deploy.log
-rw-r--r-- 1 shems-mis shems-mis 7.6K Apr 18 22:11 shems_simulation.log
-rw-r--r-- 1 shems-mis shems-mis  82K Apr 18 22:12 shems_server.log
-rw-r--r-- 1 shems-mis shems-mis 1.6M Apr 18 22:12 shems_deployment.log
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m tttaaaiiilll   ---fff   [7mshems_server.log[27m[7mshems_server.log[27m[7mshems_server.log[27mshems_server.log
[?2004lshems_server.log
[?2004lshems_server.log
[?2004l2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -



[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m 

[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m cccaaattt      [7mshems_server.log[27m[7mshems_server.log[27m[7mshems_server.log[27mshems_server.log
[?2004lshems_server.log
[?2004lshems_server.log
[?2004l  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 177
    cursor.execute(
                  ^
SyntaxError: '(' was never closed
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 177
    cursor.execute(
                  ^
SyntaxError: '(' was never closed
2025-04-18 16:29:46,138 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 16:30:51,160 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 16:38:15,327 - SHEMS-Server - INFO - Database connection established
2025-04-18 16:38:15,328 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
2025-04-18 16:38:15,339 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 16:38:15,339 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 16:38:22,555 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:15:22,590 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:22,590 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:22,592 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
2025-04-18 17:15:22,592 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 17:15:22,603 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:15:22,603 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:15:22,603 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:15:22,603 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:15:23,533 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,533 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,577 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,577 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:33,790 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:33] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:33,790 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:33] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:35,076 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:35,076 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:35,940 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:35,940 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:36,142 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:36] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:36,142 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:36] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:45,774 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:45,774 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:45,776 - shems_monitoring_server - ERROR - Exception on /submit [POST]
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 920, in full_dispatch_request
    return self.finalize_request(rv)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 939, in finalize_request
    response = self.make_response(rv)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1212, in make_response
    raise TypeError(
TypeError: The view function for 'submit' did not return a valid response. The function either returned None or ended without a return statement.
2025-04-18 17:15:45,776 - shems_monitoring_server - ERROR - Exception on /submit [POST]
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 920, in full_dispatch_request
    return self.finalize_request(rv)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 939, in finalize_request
    response = self.make_response(rv)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1212, in make_response
    raise TypeError(
TypeError: The view function for 'submit' did not return a valid response. The function either returned None or ended without a return statement.
2025-04-18 17:15:45,791 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:45] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 17:15:45,791 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:45] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 17:34:36,435 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:34:36,435 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:36:07,076 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:36:07,076 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:36:07,077 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 7726)
2025-04-18 17:36:07,077 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 7726)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 17:36:07,087 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:36:07,087 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:36:07,087 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:36:07,087 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:36:07,192 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,192 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,232 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,232 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:02,104 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:02,104 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:02,813 - SHEMS-Server - INFO - Created new user 1
2025-04-18 17:37:02,813 - SHEMS-Server - INFO - Created new user 1
2025-04-18 17:37:02,814 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:02,814 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:02,815 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:02,815 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:03,073 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 5 days
2025-04-18 17:37:03,102 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 17:37:03,821 - SHEMS-Simulator - INFO - Generated data for device 1 (Fan #1)
2025-04-18 17:37:04,547 - SHEMS-Simulator - INFO - Generated data for device 2 (Smart Light #2)
2025-04-18 17:37:05,276 - SHEMS-Simulator - INFO - Generated data for device 3 (Game Console #3)
2025-04-18 17:37:06,013 - SHEMS-Simulator - INFO - Generated data for device 4 (Router #4)
2025-04-18 17:37:06,022 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 17:37:26,064 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:26,064 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:26,383 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:37:26,383 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:37:32,822 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:32,822 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:32,827 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:32,827 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:39,514 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:39,514 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:40,209 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:40,209 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:40,211 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:40,211 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:40,467 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 17:37:40,491 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 17:37:41,066 - SHEMS-Simulator - INFO - Generated data for device 5 (Streaming Box #1)
2025-04-18 17:37:41,642 - SHEMS-Simulator - INFO - Generated data for device 6 (Game Console #2)
2025-04-18 17:37:42,229 - SHEMS-Simulator - INFO - Generated data for device 7 (LED Bulb #3)
2025-04-18 17:37:42,799 - SHEMS-Simulator - INFO - Generated data for device 8 (AC Unit #4)
2025-04-18 17:37:42,809 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 17:37:42,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:42,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:42,836 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:42,836 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:52,842 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:52,842 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:52,846 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:52,846 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:02,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:02,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:02,857 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:02,857 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:10,218 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:10,218 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:10,222 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:10,222 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:12,864 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:12,864 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:12,868 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:12,868 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:20,229 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:20,229 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:20,233 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:20,233 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:22,869 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:38:22,869 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:38:22,873 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:38:22] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:38:22,873 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:38:22] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:38:30,240 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:30,240 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:30,245 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:30,245 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:40,253 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:40,253 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:40,256 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:40,256 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:50,260 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:50,260 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:50,263 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:50,263 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:39:00,264 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:39:00,264 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:39:00,270 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,270 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,312 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 17:39:00,312 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 17:39:00,315 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,315 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,330 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET / HTTP/1.1" 200 -
2025-04-18 17:39:00,330 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET / HTTP/1.1" 200 -
2025-04-18 17:39:00,590 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:39:00,590 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:04:35,167 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:04:35,167 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:04:35,867 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 18:04:35,867 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 18:04:35,868 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 18:04:35,868 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 18:04:36,130 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 18:04:36,152 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 18:04:36,744 - SHEMS-Simulator - INFO - Generated data for device 9 (Lamp #1)
2025-04-18 18:04:37,327 - SHEMS-Simulator - INFO - Generated data for device 10 (Unknown Device #2)
2025-04-18 18:04:37,907 - SHEMS-Simulator - INFO - Generated data for device 11 (Washing Machine #3)
2025-04-18 18:04:38,488 - SHEMS-Simulator - INFO - Generated data for device 12 (Ceiling Light #4)
2025-04-18 18:04:38,498 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 18:05:05,874 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:05,874 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:05,877 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:05,877 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:15,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:15,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:15,889 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:15,889 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:25,895 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:25,895 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:25,900 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:25,900 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:35,907 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:35,907 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:35,911 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:35,911 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:45,927 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:45,927 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:45,934 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:45,934 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:55,935 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 18:05:55,935 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 18:05:55,942 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,942 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,974 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 18:05:55,974 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 18:05:55,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,997 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "GET / HTTP/1.1" 200 -
2025-04-18 18:05:55,997 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "GET / HTTP/1.1" 200 -
2025-04-18 18:05:56,154 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:56] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:05:56,154 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:56] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:11:34,530 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 18:11:34,530 - SHEMS-Server - INFO - Received shutdown signal, terminating...
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 228, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 227, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 227, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
2025-04-18 18:56:42,858 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:56:42,858 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:56:42,859 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 8875)
2025-04-18 18:56:42,859 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 8875)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 18:56:42,877 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 18:56:42,877 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 18:56:42,878 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 18:56:42,878 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 18:56:43,019 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,019 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,065 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,065 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:36,946 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:36] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:36,946 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:36] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:37,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:37] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:57:37,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:37] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:57:46,121 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:57:46,121 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:57:46,126 - SHEMS-Server - CRITICAL - Submit error: (1146, "Table 'smart_home.Users' doesn't exist")
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 297, in submit
    cursor.execute(
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 825, in _read_query_result
    result.read()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'smart_home.Users' doesn't exist")
2025-04-18 18:57:46,126 - SHEMS-Server - CRITICAL - Submit error: (1146, "Table 'smart_home.Users' doesn't exist")
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 297, in submit
    cursor.execute(
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 825, in _read_query_result
    result.read()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'smart_home.Users' doesn't exist")
2025-04-18 18:57:46,153 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:46] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 18:57:46,153 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:46] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 19:02:57,936 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:02:57,936 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:04:27,278 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:27,278 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:27,279 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9127)
2025-04-18 19:04:27,279 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9127)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 19:04:27,290 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:04:27,290 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:04:27,290 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:04:27,290 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:04:27,413 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,413 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,478 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,478 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:38,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:38,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:38,802 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:04:38,802 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:04:38,804 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:04:38,804 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:04:39,112 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:04:39,140 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:04:39,794 - SHEMS-Simulator - INFO - Generated data for device 13 (Ceiling Light #1)
2025-04-18 19:04:40,416 - SHEMS-Simulator - INFO - Generated data for device 14 (Air Purifier #2)
2025-04-18 19:04:41,026 - SHEMS-Simulator - INFO - Generated data for device 15 (Unknown Device #3)
2025-04-18 19:04:41,670 - SHEMS-Simulator - INFO - Generated data for device 16 (Unknown Device #4)
2025-04-18 19:04:41,680 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:05:08,812 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:08,812 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:08,818 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:08,818 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:18,826 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:18,826 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:18,832 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:18,832 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:28,839 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:28,839 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:28,845 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:28,845 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:38,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:38,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:38,858 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:38,858 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:48,865 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:48,865 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:48,871 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:48,871 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:58,872 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:05:58,872 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:05:58,880 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,880 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,923 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:05:58,923 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:05:58,926 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,926 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,950 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "GET / HTTP/1.1" 200 -
2025-04-18 19:05:58,950 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "GET / HTTP/1.1" 200 -
2025-04-18 19:05:59,196 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:59] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:05:59,196 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:59] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:06:24,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:24,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:25,247 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:06:25,247 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:06:25,250 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:06:25,250 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:06:25,546 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:06:25,578 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:06:26,227 - SHEMS-Simulator - INFO - Generated data for device 17 (Unknown Device #1)
2025-04-18 19:06:26,849 - SHEMS-Simulator - INFO - Generated data for device 18 (Lamp #2)
2025-04-18 19:06:27,476 - SHEMS-Simulator - INFO - Generated data for device 19 (Smart Plug #3)
2025-04-18 19:06:28,083 - SHEMS-Simulator - INFO - Generated data for device 20 (Fan #4)
2025-04-18 19:06:28,086 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:06:55,256 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:55,256 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:55,261 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:06:55,261 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:05,266 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:05,266 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:05,269 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:05,269 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:15,275 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:15,275 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:15,280 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:15,280 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:25,287 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:25,287 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:25,292 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:25,292 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:35,300 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:35,300 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:35,305 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:35,305 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:45,307 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:07:45,307 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:07:45,313 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,313 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,343 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:07:45,343 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:07:45,346 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,346 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,367 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET / HTTP/1.1" 200 -
2025-04-18 19:07:45,367 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET / HTTP/1.1" 200 -
2025-04-18 19:07:45,527 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:07:45,527 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:19:00,498 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:19:00,498 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:22:51,657 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:22:51,657 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:22:51,658 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9512)
2025-04-18 19:22:51,658 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9512)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 19:22:51,669 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:22:51,669 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:22:51,670 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:22:51,670 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:22:51,724 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,724 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,765 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,765 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:23:13,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:13,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:14,593 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:23:14,593 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:23:14,595 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:23:14,595 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:23:14,885 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:23:14,911 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:23:15,557 - SHEMS-Simulator - INFO - Generated data for device 21 (Ceiling Light #1)
2025-04-18 19:23:16,153 - SHEMS-Simulator - INFO - Generated data for device 22 (Microwave #2)
2025-04-18 19:23:16,768 - SHEMS-Simulator - INFO - Generated data for device 23 (Fan #3)
2025-04-18 19:23:17,387 - SHEMS-Simulator - INFO - Generated data for device 24 (Microwave #4)
2025-04-18 19:23:17,393 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:23:44,602 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:44,602 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:44,607 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:44,607 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:54,614 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:54,614 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:54,619 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:54,619 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:04,623 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:04,623 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:04,626 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:04,626 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:14,633 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:14,633 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:14,638 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:14,638 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:24,645 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:24,645 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:24,650 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:24,650 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:34,652 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:24:34,652 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:24:34,660 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,660 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,705 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:24:34,705 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:24:34,708 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,708 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,731 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET / HTTP/1.1" 200 -
2025-04-18 19:24:34,731 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET / HTTP/1.1" 200 -
2025-04-18 19:24:34,988 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:24:34,988 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:29:05,250 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:05,250 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:05,954 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:29:05,954 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:29:05,956 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:29:05,956 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:29:06,245 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:29:06,270 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:29:06,908 - SHEMS-Simulator - INFO - Generated data for device 25 (Router #1)
2025-04-18 19:29:07,505 - SHEMS-Simulator - INFO - Generated data for device 26 (Dishwasher #2)
2025-04-18 19:29:08,110 - SHEMS-Simulator - INFO - Generated data for device 27 (Air Purifier #3)
2025-04-18 19:29:08,716 - SHEMS-Simulator - INFO - Generated data for device 28 (Router #4)
2025-04-18 19:29:08,723 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:29:35,963 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:35,963 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:35,968 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:35,968 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:45,975 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:45,975 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:45,980 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:45,980 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:55,986 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:55,986 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:55,991 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:55,991 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:05,998 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:05,998 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:06,003 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:06,003 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:16,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:16,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:16,015 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:16,015 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:26,016 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:30:26,016 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:30:26,023 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,023 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,050 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:30:26,050 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:30:26,053 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,053 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,072 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET / HTTP/1.1" 200 -
2025-04-18 19:30:26,072 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET / HTTP/1.1" 200 -
2025-04-18 19:30:26,433 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:30:26,433 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:16:45,226 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:16:45,226 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:17:00,758 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:00,758 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:00,759 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9708)
2025-04-18 20:17:00,759 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9708)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:17:00,771 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:17:00,771 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:17:00,771 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:17:00,771 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:17:00,918 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,918 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,969 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,969 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:09,705 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:09,705 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:10,412 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:17:10,412 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:17:10,414 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:17:10,414 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:17:10,709 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:17:10,733 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:17:11,384 - SHEMS-Simulator - INFO - Generated data for device 29 (Router #1)
2025-04-18 20:17:11,994 - SHEMS-Simulator - INFO - Generated data for device 30 (Charger #2)
2025-04-18 20:17:12,599 - SHEMS-Simulator - INFO - Generated data for device 31 (AC Unit #3)
2025-04-18 20:17:13,208 - SHEMS-Simulator - INFO - Generated data for device 32 (Smart Light #4)
2025-04-18 20:17:13,215 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:17:40,421 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:40,421 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:40,427 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:40,427 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:50,435 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:50,435 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:50,440 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:50,440 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:00,448 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:00,448 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:00,454 - SHEMS-Server   File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 177
    cursor.execute(
                  ^
SyntaxError: '(' was never closed
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 177
    cursor.execute(
                  ^
SyntaxError: '(' was never closed
2025-04-18 16:29:46,138 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 16:30:51,160 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 16:38:15,327 - SHEMS-Server - INFO - Database connection established
2025-04-18 16:38:15,328 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
2025-04-18 16:38:15,339 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 16:38:15,339 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 16:38:22,555 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:15:22,590 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:22,590 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:22,592 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
2025-04-18 17:15:22,592 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 17:15:22,603 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:15:22,603 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:15:22,603 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:15:22,603 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:15:23,533 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,533 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,577 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,577 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:33,790 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:33] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:33,790 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:33] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:35,076 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:35,076 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:35,940 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:35,940 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:36,142 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:36] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:36,142 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:36] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:45,774 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:45,774 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:45,776 - shems_monitoring_server - ERROR - Exception on /submit [POST]
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 920, in full_dispatch_request
    return self.finalize_request(rv)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 939, in finalize_request
    response = self.make_response(rv)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1212, in make_response
    raise TypeError(
TypeError: The view function for 'submit' did not return a valid response. The function either returned None or ended without a return statement.
2025-04-18 17:15:45,776 - shems_monitoring_server - ERROR - Exception on /submit [POST]
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 920, in full_dispatch_request
    return self.finalize_request(rv)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 939, in finalize_request
    response = self.make_response(rv)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1212, in make_response
    raise TypeError(
TypeError: The view function for 'submit' did not return a valid response. The function either returned None or ended without a return statement.
2025-04-18 17:15:45,791 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:45] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 17:15:45,791 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:45] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 17:34:36,435 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:34:36,435 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:36:07,076 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:36:07,076 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:36:07,077 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 7726)
2025-04-18 17:36:07,077 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 7726)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 17:36:07,087 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:36:07,087 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:36:07,087 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:36:07,087 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:36:07,192 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,192 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,232 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,232 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:02,104 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:02,104 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:02,813 - SHEMS-Server - INFO - Created new user 1
2025-04-18 17:37:02,813 - SHEMS-Server - INFO - Created new user 1
2025-04-18 17:37:02,814 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:02,814 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:02,815 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:02,815 - SHEMS-Server - INFO - - WARNING - Dashboard check failed: 0
2025-04-18 20:18:00,454 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:10,461 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:10,461 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:10,467 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:10,467 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:20,474 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:20,474 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:20,479 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:20,479 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:30,481 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 20:18:30,481 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 20:18:30,489 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,489 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,592 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 20:18:30,592 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 20:18:30,599 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,599 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,652 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "GET / HTTP/1.1" 200 -
2025-04-18 20:18:30,652 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "GET / HTTP/1.1" 200 -
2025-04-18 20:18:31,034 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:18:31,034 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:51:59,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:51:59,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:52:12,767 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:52:12,767 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:52:12,768 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9839)
2025-04-18 20:52:12,768 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9839)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:52:12,778 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:52:12,778 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:52:12,779 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:52:12,779 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:52:12,893 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,893 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,956 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,956 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:53:47,843 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:53:47,843 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:54:00,997 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:54:00,997 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:54:00,999 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9889)
2025-04-18 20:54:00,999 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9889)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:54:01,009 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:54:01,009 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:54:01,009 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:54:01,009 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:54:01,129 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,129 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,197 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,197 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:40,437 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:57:40,437 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:57:53,576 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:57:53,576 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:57:53,578 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9953)
2025-04-18 20:57:53,578 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9953)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:57:53,588 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:57:53,588 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,458 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:58:43,485 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:58:44,130 - SHEMS-Simulator - INFO - Generated data for device 33 (Smart Light #1)
2025-04-18 20:58:44,745 - SHEMS-Simulator - INFO - Generated data for device 34 (Ceiling Light #2)
2025-04-18 20:Started simulation for user 1
2025-04-18 17:37:03,073 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 5 days
2025-04-18 17:37:03,102 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 17:37:03,821 - SHEMS-Simulator - INFO - Generated data for device 1 (Fan #1)
2025-04-18 17:37:04,547 - SHEMS-Simulator - INFO - Generated data for device 2 (Smart Light #2)
2025-04-18 17:37:05,276 - SHEMS-Simulator - INFO - Generated data for device 3 (Game Console #3)
2025-04-18 17:37:06,013 - SHEMS-Simulator - INFO - Generated data for device 4 (Router #4)
2025-04-18 17:37:06,022 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 17:37:26,064 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:26,064 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:26,383 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:37:26,383 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:37:32,822 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:32,822 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:32,827 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:32,827 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:39,514 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:39,514 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:40,209 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:40,209 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:40,211 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:40,211 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:40,467 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 17:37:40,491 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 17:37:41,066 - SHEMS-Simulator - INFO - Generated data for device 5 (Streaming Box #1)
2025-04-18 17:37:41,642 - SHEMS-Simulator - INFO - Generated data for device 6 (Game Console #2)
2025-04-18 17:37:42,229 - SHEMS-Simulator - INFO - Generated data for device 7 (LED Bulb #3)
2025-04-18 17:37:42,799 - SHEMS-Simulator - INFO - Generated data for device 8 (AC Unit #4)
2025-04-18 17:37:42,809 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 17:37:42,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:42,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:42,836 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:42,836 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:52,842 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:52,842 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:52,846 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:52,846 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:02,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:02,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:02,857 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:02,857 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:10,218 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:10,218 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:10,222 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:10,222 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:12,864 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:12,864 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:12,868 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:12,868 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:20,229 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:20,229 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:20,233 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:20,233 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:22,869 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:38:22,869 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:38:22,873 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:38:22] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:38:22,873 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:38:22] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:38:30,240 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:30,240 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:30,245 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:30,245 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:40,253 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:40,253 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:40,256 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:40,256 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:50,260 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:50,260 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:50,263 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:50,263 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:39:00,264 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:39:00,264 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:39:00,270 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,270 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,312 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 17:39:00,312 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 17:39:00,315 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,315 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,330 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET / HTTP/1.1" 200 -
2025-04-18 17:39:00,330 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET / HTTP/1.1" 200 -
2025-04-18 17:39:00,590 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:39:00,590 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:04:35,167 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:04:35,167 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:04:35,867 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 18:04:35,867 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 18:04:35,868 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 18:04:35,868 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 18:04:36,130 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 18:04:36,152 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 18:04:36,744 - SHEMS-Simulator - INFO - Generated data for device 9 (Lamp #1)
2025-04-18 18:04:37,327 - SHEMS-Simulator - INFO - Generated data for device 10 (Unknown Device #2)
2025-04-18 18:04:37,907 - SHEMS-Simulator - INFO - Generated data for device 11 (Washing Machine #3)
2025-04-18 18:04:38,488 - SHEMS-Simulator - INFO - Generated data for device 1258:45,334 - SHEMS-Simulator - INFO - Generated data for device 35 (Refrigerator #3)
2025-04-18 20:58:45,937 - SHEMS-Simulator - INFO - Generated data for device 36 (Lamp #4)
2025-04-18 20:58:45,944 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:18:25,586 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:18:25,586 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:18:38,598 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:18:38,598 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:18:38,600 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10074)
2025-04-18 21:18:38,600 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10074)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:18:38,618 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:18:38,618 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:18:38,619 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:18:38,619 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:18:38,775 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,775 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,833 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,833 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:19:18,341 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:18,341 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:19,049 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:19:19,049 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:19:19,051 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:19:19,051 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:19:19,339 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:19:19,357 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:19:19,570 - SHEMS-Simulator - INFO - Generated data for device 37 (Router #1)
2025-04-18 21:19:19,576 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:19:49,058 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:49,058 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:49,063 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:49,063 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:59,071 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:59,071 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:59,076 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:59,076 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:09,083 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:09,083 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:09,088 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:09,088 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:19,096 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:19,096 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:19,101 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:19,101 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:29,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:29,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:29,113 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:29,113 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:39,115 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:20:39,115 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:20:39,123 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,123 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,153 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:20:39,153 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:20:39,156 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,156 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,176 - werkzeug - INFO - 192.168.1.245 - - [18 (Ceiling Light #4)
2025-04-18 18:04:38,498 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 18:05:05,874 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:05,874 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:05,877 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:05,877 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:15,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:15,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:15,889 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:15,889 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:25,895 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:25,895 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:25,900 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:25,900 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:35,907 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:35,907 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:35,911 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:35,911 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:45,927 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:45,927 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:45,934 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:45,934 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:55,935 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 18:05:55,935 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 18:05:55,942 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,942 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,974 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 18:05:55,974 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 18:05:55,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,997 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "GET / HTTP/1.1" 200 -
2025-04-18 18:05:55,997 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "GET / HTTP/1.1" 200 -
2025-04-18 18:05:56,154 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:56] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:05:56,154 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:56] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:11:34,530 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 18:11:34,530 - SHEMS-Server - INFO - Received shutdown signal, terminating...
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 228, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 227, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 227, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
2025-04-18 18:56:42,858 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:56:42,858 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:56:42,859 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 8875)
2025-04-18 18:56:42,859 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 8875)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 18:56:42,877 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 18:56:42,877 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 18:56:42,878 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 18:56:42,878 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 18:56:43,019 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,019 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,065 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,065 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:36,946 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:36] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:36,946 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:36] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:37,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:37] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:57:37,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:37] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:57:46,121 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:57:46,121 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:57:46,126 - SHEMS-Server - CRITICAL - Submit error: (1146, "Table 'smart_home.Users' doesn't exist")
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 297, in submit
    cursor.execute(
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 825, in _read_query_result
    result.read()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'smart_home.Users' doesn't exist")
2025-04-18 18:57:46,126 - SHEMS-Server - CRITICAL - Submit error: (1146, "Table 'smart_home.Users' doesn't exist")
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 297, in submit
    cursor.execute(
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 825, in _read_query_result
    result.read()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'smart_home.Users' doesn't exist")
2025-04-18 18:57:46,153 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:46] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 18:57:46,153 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:46] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 19:02:57,936 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:02:57,936 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:04:27,278 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:27,278 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:27,279 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9127)
2025-04-18 19:04:27,279 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9127)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 19:04:27,290 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:04:27,290 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:04:27,290 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:04:27,290 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:04:27,413 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,413 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,478 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,478 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:38,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:38,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:38,802 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:04:38,802 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:04:38,804 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:04:38,804 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:04:39,112 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:04:39,140 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:04:39,794 - SHEMS-Simulator - INFO - Generated data for device 13 (Ceiling Light #1)
2025-04-18 19:04:40,416 - SHEMS-Simulator - INFO - Generated data for device 14 (Air Purifier #2)
2025-04-18 19:04:41,026 - SHEMS-Simulator - INFO - Generated data for device 15 (Unknown Device #3)
2025-04-18 19:04:41,670 - SHEMS-Simulator - INFO - Generated data for device 16 (Unknown Device #4)
2025-04-18 19:04:41,680 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:05:08,812 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:08,812 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:08,818 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:08,818 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:18,826 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:18,826 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:18,832 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:18,832 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:28,839 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:28,839 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:28,845 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:28,845 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:38,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:38,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:38,858 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:38,858 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:48,865 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:48,865 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:48,871 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:48,871 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:58,872 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:05:58,872 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:05:58,880 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,880 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,923 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:05:58,923 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:05:58,926 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,926 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,950 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "GET / HTTP/1.1" 200 -
2025-04-18 19:05:58,950 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "GET / HTTP/1.1" 200 -
2025-04-18 19:05:59,196 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:59] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:05:59,196 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:59] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:06:24,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:24,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:25,247 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:06:25,247 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:06:25,250 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:06:25,250 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:06:25,546 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:06:25,578 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:06:26,227 - SHEMS-Simulator - INFO - Generated data for device 17 (Unknown Device #1)
2025-04-18 19:06:26,849 - SHEMS-Simulator - INFO - Generated data for device 18 (Lamp #2)
2025-04-18 19:06:27,476 - SHEMS-Simulator - INFO - Generated data for device 19 (Smart Plug #3)
2025-04-18 19:06:28,083 - SHEMS-Simulator - INFO - Generated data for device 2/Apr/2025 21:20:39] "GET / HTTP/1.1" 200 -
2025-04-18 21:20:39,176 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET / HTTP/1.1" 200 -
2025-04-18 21:20:39,996 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:20:39,996 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:22:11,024 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:22:11,024 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:22:24,066 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:24,066 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:24,068 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10150)
2025-04-18 21:22:24,068 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10150)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:22:24,078 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:22:24,078 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:22:24,079 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:22:24,079 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:22:24,200 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,200 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,267 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,267 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:50,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:50,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:51,532 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:22:51,532 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:22:51,534 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:22:51,534 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:22:51,830 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:22:51,848 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:22:52,063 - SHEMS-Simulator - INFO - Generated data for device 38 (AC Unit #1)
2025-04-18 21:22:52,070 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:23:21,541 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:21,541 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:21,546 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:21,546 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:31,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:31,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:31,558 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:31,558 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:41,565 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:41,565 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:41,570 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:41,570 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:51,578 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:51,578 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:51,583 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:51,583 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:01,591 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:24:01,591 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:24:01,597 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:01,597 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:11,599 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:24:11,599 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:24:11,606 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,606 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,634 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:24:11,634 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:24:11,637 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,637 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,658 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET / HTTP/1.1" 200 -
2025-04-18 21:24:11,658 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET / HTTP/1.1" 200 -
2025-04-18 21:24:11,944 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:24:11,944 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:02,499 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:41:02,499 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:41:15,527 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:15,527 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:15,528 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10246)
2025-04-18 21:41:15,528 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10246)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:41:15,538 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:41:15,538 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:41:15,539 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:41:15,539 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:41:15,696 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,696 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,743 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,743 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:25,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:25,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:25,718 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,718 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,750 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:41:25,750 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-040 (Fan #4)
2025-04-18 19:06:28,086 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:06:55,256 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:55,256 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:55,261 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:06:55,261 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:05,266 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:05,266 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:05,269 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:05,269 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:15,275 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:15,275 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:15,280 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:15,280 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:25,287 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:25,287 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:25,292 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:25,292 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:35,300 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:35,300 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:35,305 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:35,305 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:45,307 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:07:45,307 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:07:45,313 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,313 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,343 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:07:45,343 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:07:45,346 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,346 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,367 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET / HTTP/1.1" 200 -
2025-04-18 19:07:45,367 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET / HTTP/1.1" 200 -
2025-04-18 19:07:45,527 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:07:45,527 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:19:00,498 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:19:00,498 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:22:51,657 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:22:51,657 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:22:51,658 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9512)
2025-04-18 19:22:51,658 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9512)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 19:22:51,669 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:22:51,669 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:22:51,670 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:22:51,670 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:22:51,724 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,724 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,765 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,765 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:23:13,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:13,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:14,593 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:23:14,593 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:23:14,595 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:23:14,595 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:23:14,885 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:23:14,911 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:23:15,557 - SHEMS-Simulator - INFO - Generated data for device 21 (Ceiling Light #1)
2025-04-18 19:23:16,153 - SHEMS-Simulator - INFO - Generated data for device 22 (Microwave #2)
2025-04-18 19:23:16,768 - SHEMS-Simulator - INFO - Generated data for device 23 (Fan #3)
2025-04-18 19:23:17,387 - SHEMS-Simulator - INFO - Generated data for device 24 (Microwave #4)
2025-04-18 19:23:17,393 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:23:44,602 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:44,602 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:44,607 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:44,607 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:54,614 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:54,614 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:54,619 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:54,619 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:04,623 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:04,623 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:04,626 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:04,626 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:14,633 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:14,633 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:14,638 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:14,638 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:24,645 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:24,645 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:24,650 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:24,650 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:34,652 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:24:34,652 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:24:34,660 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,660 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,705 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:24:34,705 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:24:34,708 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,708 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/-18 21:41:25,752 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,752 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,774 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:25,774 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:26,042 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:41:26,064 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:41:26,294 - SHEMS-Simulator - INFO - Generated data for device 39 (Smart Plug #1)
2025-04-18 21:41:26,300 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:26,300 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:26,301 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:42:31,000 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:42:31,000 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:42:31,701 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,701 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,718 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:42:31,718 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:42:31,721 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,721 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,750 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET / HTTP/1.1" 200 -
2025-04-18 21:42:31,750 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET / HTTP/1.1" 200 -
2025-04-18 21:42:31,962 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:42:31,962 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:42:32,077 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:42:32,095 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:42:32,318 - SHEMS-Simulator - INFO - Generated data for device 40 (Charger #1)
2025-04-18 21:42:32,325 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:58:55,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:58:55,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
2025-04-18 22:10:18,869 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:18,869 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:18,870 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 11271)
2025-04-18 22:10:18,870 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 11271)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 22:10:18,881 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 22:10:18,881 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 22:10:18,882 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 22:10:18,882 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 22:10:19,030 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,030 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,086 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,086 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:59,557 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:59,557 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:00,261 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 22:11:00,261 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 22:11:00,263 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 22:11:00,263 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 22:11:00,555 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 22:11:00,577 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 22:11:00,787 - SHEMS-Simulator - INFO - Generated data for device 41 (Unknown Device #1)
2025-04-18 22:11:00,794 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 22:11:30,270 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:30,270 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:30,276 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:30,276 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:40,283 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:40,283 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:40,288 -2025 19:24:34] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,731 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET / HTTP/1.1" 200 -
2025-04-18 19:24:34,731 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET / HTTP/1.1" 200 -
2025-04-18 19:24:34,988 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:24:34,988 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:29:05,250 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:05,250 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:05,954 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:29:05,954 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:29:05,956 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:29:05,956 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:29:06,245 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:29:06,270 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:29:06,908 - SHEMS-Simulator - INFO - Generated data for device 25 (Router #1)
2025-04-18 19:29:07,505 - SHEMS-Simulator - INFO - Generated data for device 26 (Dishwasher #2)
2025-04-18 19:29:08,110 - SHEMS-Simulator - INFO - Generated data for device 27 (Air Purifier #3)
2025-04-18 19:29:08,716 - SHEMS-Simulator - INFO - Generated data for device 28 (Router #4)
2025-04-18 19:29:08,723 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:29:35,963 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:35,963 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:35,968 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:35,968 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:45,975 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:45,975 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:45,980 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:45,980 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:55,986 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:55,986 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:55,991 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:55,991 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:05,998 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:05,998 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:06,003 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:06,003 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:16,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:16,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:16,015 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:16,015 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:26,016 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:30:26,016 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:30:26,023 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,023 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,050 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:30:26,050 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:30:26,053 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,053 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,072 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET / HTTP/1.1" 200 -
2025-04-18 19:30:26,072 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET / HTTP/1.1" 200 -
2025-04-18 19:30:26,433 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:30:26,433 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:16:45,226 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:16:45,226 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:17:00,758 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:00,758 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:00,759 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9708)
2025-04-18 20:17:00,759 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9708)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:17:00,771 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:17:00,771 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:17:00,771 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:17:00,771 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:17:00,918 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,918 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,969 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,969 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:09,705 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:09,705 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:10,412 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:17:10,412 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:17:10,414 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:17:10,414 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:17:10,709 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:17:10,733 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:17:11,384 - SHEMS-Simulator - INFO - Generated data for device 29 (Router #1)
2025-04-18 20:17:11,994 - SHEMS-Simulator - INFO - Generated data for device 30 (Charger #2)
2025-04-18 20:17:12,599 - SHEMS-Simulator - INFO - Generated data for device 31 (AC Unit #3)
2025-04-18 20:17:13,208 - SHEMS-Simulator - INFO - Generated data for device 32 (Smart Light #4)
2025-04-18 20:17:13,215 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:17:40,421 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:40,421 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:40,427 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:40,427 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:50,435 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:50,435 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:50,440 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:50,440 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:00,448 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:00,448 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:00,454 - SHEMS-Server  SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:40,288 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,295 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:50,295 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,377 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 22:12:20,377 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 22:12:20,380 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,380 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,405 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "GET / HTTP/1.1" 200 -
2025-04-18 22:12:20,405 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "GET / HTTP/1.1" 200 -
2025-04-18 22:12:21,097 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:21] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 22:12:21,097 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:21] "GET /api/access-points HTTP/1.1" 200 -
- WARNING - Dashboard check failed: 0
2025-04-18 20:18:00,454 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:10,461 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:10,461 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:10,467 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:10,467 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:20,474 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:20,474 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:20,479 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:20,479 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:30,481 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 20:18:30,481 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 20:18:30,489 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,489 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,592 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 20:18:30,592 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 20:18:30,599 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,599 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,652 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "GET / HTTP/1.1" 200 -
2025-04-18 20:18:30,652 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "GET / HTTP/1.1" 200 -
2025-04-18 20:18:31,034 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:18:31,034 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:51:59,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:51:59,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:52:12,767 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:52:12,767 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:52:12,768 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9839)
2025-04-18 20:52:12,768 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9839)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:52:12,778 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:52:12,778 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:52:12,779 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:52:12,779 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:52:12,893 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,893 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,956 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,956 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:53:47,843 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:53:47,843 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:54:00,997 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:54:00,997 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:54:00,999 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9889)
2025-04-18 20:54:00,999 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9889)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:54:01,009 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:54:01,009 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:54:01,009 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:54:01,009 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:54:01,129 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,129 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,197 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,197 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:40,437 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:57:40,437 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:57:53,576 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:57:53,576 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:57:53,578 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9953)
2025-04-18 20:57:53,578 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9953)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:57:53,588 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:57:53,588 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,458 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:58:43,485 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:58:44,130 - SHEMS-Simulator - INFO - Generated data for device 33 (Smart Light #1)
2025-04-18 20:58:44,745 - SHEMS-Simulator - INFO - Generated data for device 34 (Ceiling Light #2)
2025-04-18 20:58:45,334 - SHEMS-Simulator - INFO - Generated data for device 35 (Refrigerator #3)
2025-04-18 20:58:45,937 - SHEMS-Simulator - INFO - Generated data for device 36 (Lamp #4)
2025-04-18 20:58:45,944 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:18:25,586 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:18:25,586 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:18:38,598 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:18:38,598 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:18:38,600 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10074)
2025-04-18 21:18:38,600 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10074)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:18:38,618 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:18:38,618 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:18:38,619 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:18:38,619 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:18:38,775 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,775 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,833 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,833 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:19:18,341 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:18,341 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:19,049 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:19:19,049 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:19:19,051 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:19:19,051 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:19:19,339 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:19:19,357 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:19:19,570 - SHEMS-Simulator - INFO - Generated data for device 37 (Router #1)
2025-04-18 21:19:19,576 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:19:49,058 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:49,058 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:49,063 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:49,063 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:59,071 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:59,071 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:59,076 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:59,076 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:09,083 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:09,083 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:09,088 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:09,088 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:19,096 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:19,096 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:19,101 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:19,101 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:29,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:29,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:29,113 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:29,113 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:39,115 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:20:39,115 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:20:39,123 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,123 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,153 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:20:39,153 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:20:39,156 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,156 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,176 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET / HTTP/1.1" 200 -
2025-04-18 21:20:39,176 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET / HTTP/1.1" 200 -
2025-04-18 21:20:39,996 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:20:39,996 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:22:11,024 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:22:11,024 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:22:24,066 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:24,066 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:24,068 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10150)
2025-04-18 21:22:24,068 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10150)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:22:24,078 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:22:24,078 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:22:24,079 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:22:24,079 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:22:24,200 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,200 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,267 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,267 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:50,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:50,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:51,532 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:22:51,532 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:22:51,534 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:22:51,534 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:22:51,830 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:22:51,848 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:22:52,063 - SHEMS-Simulator - INFO - Generated data for device 38 (AC Unit #1)
2025-04-18 21:22:52,070 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:23:21,541 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:21,541 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:21,546 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:21,546 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:31,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:31,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:31,558 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:31,558 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:41,565 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:41,565 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:41,570 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:41,570 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:51,578 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:51,578 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:51,583 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:51,583 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:01,591 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:24:01,591 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:24:01,597 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:01,597 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:11,599 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:24:11,599 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:24:11,606 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,606 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,634 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:24:11,634 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:24:11,637 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,637 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,658 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET / HTTP/1.1" 200 -
2025-04-18 21:24:11,658 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET / HTTP/1.1" 200 -
2025-04-18 21:24:11,944 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:24:11,944 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:02,499 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:41:02,499 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:41:15,527 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:15,527 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:15,528 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10246)
2025-04-18 21:41:15,528 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10246)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:41:15,538 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:41:15,538 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:41:15,539 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:41:15,539 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:41:15,696 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,696 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,743 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,743 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:25,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:25,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:25,718 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,718 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,750 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:41:25,750 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 177
    cursor.execute(
                  ^
SyntaxError: '(' was never closed
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 177
    cursor.execute(
                  ^
SyntaxError: '(' was never closed
2025-04-18 16:29:46,138 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 16:30:51,160 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 16:38:15,327 - SHEMS-Server - INFO - Database connection established
2025-04-18 16:38:15,328 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
2025-04-18 16:38:15,339 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 16:38:15,339 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 16:38:22,555 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:15:22,590 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:22,590 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:22,592 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
2025-04-18 17:15:22,592 - SHEMS-Server - INFO - Starting SHEMS server on port 5000
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 17:15:22,603 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:15:22,603 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:15:22,603 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:15:22,603 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:15:23,533 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,533 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,577 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:23,577 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:15:23] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:33,790 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:33] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:33,790 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:33] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:35,076 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:35,076 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:35,940 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:35,940 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:35] "GET / HTTP/1.1" 200 -
2025-04-18 17:15:36,142 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:36] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:36,142 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:36] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:15:45,774 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:45,774 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:15:45,776 - shems_monitoring_server - ERROR - Exception on /submit [POST]
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 920, in full_dispatch_request
    return self.finalize_request(rv)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 939, in finalize_request
    response = self.make_response(rv)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1212, in make_response
    raise TypeError(
TypeError: The view function for 'submit' did not return a valid response. The function either returned None or ended without a return statement.
2025-04-18 17:15:45,776 - shems_monitoring_server - ERROR - Exception on /submit [POST]
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 920, in full_dispatch_request
    return self.finalize_request(rv)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 939, in finalize_request
    response = self.make_response(rv)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/app.py", line 1212, in make_response
    raise TypeError(
TypeError: The view function for 'submit' did not return a valid response. The function either returned None or ended without a return statement.
2025-04-18 17:15:45,791 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:45] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 17:15:45,791 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:15:45] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 17:34:36,435 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:34:36,435 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 17:36:07,076 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:36:07,076 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:36:07,077 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 7726)
2025-04-18 17:36:07,077 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 7726)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 17:36:07,087 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:36:07,087 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 17:36:07,087 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:36:07,087 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 17:36:07,192 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,192 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,232 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:36:07,232 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 17:36:07] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:02,104 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:02,104 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:02,813 - SHEMS-Server - INFO - Created new user 1
2025-04-18 17:37:02,813 - SHEMS-Server - INFO - Created new user 1
2025-04-18 17:37:02,814 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:02,814 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:02,815 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:02,815 - SHEMS-Server - INFO - [?2004h-18 21:41:25,752 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,752 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,774 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:25,774 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:26,042 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:41:26,064 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:41:26,294 - SHEMS-Simulator - INFO - Generated data for device 39 (Smart Plug #1)
2025-04-18 21:41:26,300 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:26,300 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:26,301 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:42:31,000 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:42:31,000 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:42:31,701 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,701 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,718 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:42:31,718 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:42:31,721 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,721 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,750 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET / HTTP/1.1" 200 -
2025-04-18 21:42:31,750 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET / HTTP/1.1" 200 -
2025-04-18 21:42:31,962 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:42:31,962 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:42:32,077 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:42:32,095 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:42:32,318 - SHEMS-Simulator - INFO - Generated data for device 40 (Charger #1)
2025-04-18 21:42:32,325 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:58:55,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:58:55,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
2025-04-18 22:10:18,869 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:18,869 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:18,870 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 11271)
2025-04-18 22:10:18,870 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 11271)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 22:10:18,881 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 22:10:18,881 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 22:10:18,882 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 22:10:18,882 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 22:10:19,030 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,030 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,086 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,086 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:59,557 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:59,557 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:00,261 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 22:11:00,261 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 22:11:00,263 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 22:11:00,263 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 22:11:00,555 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 22:11:00,577 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 22:11:00,787 - SHEMS-Simulator - INFO - Generated data for device 41 (Unknown Device #1)
2025-04-18 22:11:00,794 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 22:11:30,270 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:30,270 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:30,276 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:30,276 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:40,283 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:40,283 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:40,288 -(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m Started simulation for user 1
2025-04-18 17:37:03,073 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 5 days
2025-04-18 17:37:03,102 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 17:37:03,821 - SHEMS-Simulator - INFO - Generated data for device 1 (Fan #1)
2025-04-18 17:37:04,547 - SHEMS-Simulator - INFO - Generated data for device 2 (Smart Light #2)
2025-04-18 17:37:05,276 - SHEMS-Simulator - INFO - Generated data for device 3 (Game Console #3)
2025-04-18 17:37:06,013 - SHEMS-Simulator - INFO - Generated data for device 4 (Router #4)
2025-04-18 17:37:06,022 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 17:37:26,064 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:26,064 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET / HTTP/1.1" 200 -
2025-04-18 17:37:26,383 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:37:26,383 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:37:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:37:32,822 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:32,822 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:32,827 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:32,827 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:39,514 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:39,514 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:40,209 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:40,209 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 17:37:40,211 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:40,211 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 17:37:40,467 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 17:37:40,491 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 17:37:41,066 - SHEMS-Simulator - INFO - Generated data for device 5 (Streaming Box #1)
2025-04-18 17:37:41,642 - SHEMS-Simulator - INFO - Generated data for device 6 (Game Console #2)
2025-04-18 17:37:42,229 - SHEMS-Simulator - INFO - Generated data for device 7 (LED Bulb #3)
2025-04-18 17:37:42,799 - SHEMS-Simulator - INFO - Generated data for device 8 (AC Unit #4)
2025-04-18 17:37:42,809 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 17:37:42,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:42,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:42,836 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:42,836 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:52,842 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:52,842 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:37:52,846 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:37:52,846 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:02,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:02,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:02,857 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:02,857 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:10,218 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:10,218 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:10,222 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:10,222 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:12,864 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:12,864 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:12,868 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:12,868 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:20,229 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:20,229 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:20,233 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:20,233 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:22,869 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:38:22,869 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:38:22,873 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:38:22] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:38:22,873 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:38:22] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:38:30,240 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:30,240 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:30,245 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:30,245 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:40,253 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:40,253 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:40,256 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:40,256 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:50,260 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:50,260 - SHEMS-Server - INFO - Database connection established
2025-04-18 17:38:50,263 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:38:50,263 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 17:39:00,264 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:39:00,264 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 17:39:00,270 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,270 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,312 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 17:39:00,312 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 17:39:00,315 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,315 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 17:39:00,330 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET / HTTP/1.1" 200 -
2025-04-18 17:39:00,330 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET / HTTP/1.1" 200 -
2025-04-18 17:39:00,590 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 17:39:00,590 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 17:39:00] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:04:35,167 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:04:35,167 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:04:35,867 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 18:04:35,867 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 18:04:35,868 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 18:04:35,868 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 18:04:36,130 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 18:04:36,152 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 18:04:36,744 - SHEMS-Simulator - INFO - Generated data for device 9 (Lamp #1)
2025-04-18 18:04:37,327 - SHEMS-Simulator - INFO - Generated data for device 10 (Unknown Device #2)
2025-04-18 18:04:37,907 - SHEMS-Simulator - INFO - Generated data for device 11 (Washing Machine #3)
2025-04-18 18:04:38,488 - SHEMS-Simulator - INFO - Generated data for device 12 SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:40,288 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,295 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:50,295 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,377 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 22:12:20,377 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 22:12:20,380 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,380 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,405 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "GET / HTTP/1.1" 200 -
2025-04-18 22:12:20,405 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "GET / HTTP/1.1" 200 -
2025-04-18 22:12:21,097 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:21] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 22:12:21,097 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:21] "GET /api/access-points HTTP/1.1" 200 -
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m  (Ceiling Light #4)
2025-04-18 18:04:38,498 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 18:05:05,874 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:05,874 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:05,877 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:05,877 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:15,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:15,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:15,889 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:15,889 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:25,895 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:25,895 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:25,900 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:25,900 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:35,907 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:35,907 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:35,911 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:35,911 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:45,927 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:45,927 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:05:45,934 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:45,934 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 18:05:55,935 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 18:05:55,935 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 18:05:55,942 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,942 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,974 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 18:05:55,974 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 18:05:55,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 18:05:55,997 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "GET / HTTP/1.1" 200 -
2025-04-18 18:05:55,997 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:55] "GET / HTTP/1.1" 200 -
2025-04-18 18:05:56,154 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:56] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:05:56,154 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:05:56] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:11:34,530 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 18:11:34,530 - SHEMS-Server - INFO - Received shutdown signal, terminating...
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 228, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 227, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 227, in <module>
    @login_required
     ^^^^^^^^^^^^^^
NameError: name 'login_required' is not defined
2025-04-18 18:56:42,858 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:56:42,858 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:56:42,859 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 8875)
2025-04-18 18:56:42,859 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 8875)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 18:56:42,877 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 18:56:42,877 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 18:56:42,878 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 18:56:42,878 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 18:56:43,019 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,019 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,065 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:56:43,065 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 18:56:43] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:36,946 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:36] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:36,946 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:36] "GET / HTTP/1.1" 200 -
2025-04-18 18:57:37,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:37] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:57:37,978 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:37] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 18:57:46,121 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:57:46,121 - SHEMS-Server - INFO - Database connection established
2025-04-18 18:57:46,126 - SHEMS-Server - CRITICAL - Submit error: (1146, "Table 'smart_home.Users' doesn't exist")
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 297, in submit
    cursor.execute(
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 825, in _read_query_result
    result.read()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'smart_home.Users' doesn't exist")
2025-04-18 18:57:46,126 - SHEMS-Server - CRITICAL - Submit error: (1146, "Table 'smart_home.Users' doesn't exist")
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 297, in submit
    cursor.execute(
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 153, in execute
    result = self._query(query)
             ^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/cursors.py", line 322, in _query
    conn.query(q)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 563, in query
    self._affected_rows = self._read_query_result(unbuffered=unbuffered)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 825, in _read_query_result
    result.read()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 1199, in read
    first_packet = self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/connections.py", line 775, in _read_packet
    packet.raise_for_error()
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/pymysql/err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.ProgrammingError: (1146, "Table 'smart_home.Users' doesn't exist")
2025-04-18 18:57:46,153 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:46] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 18:57:46,153 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 18:57:46] "[35m[1mPOST /submit HTTP/1.1[0m" 500 -
2025-04-18 19:02:57,936 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:02:57,936 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:04:27,278 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:27,278 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:27,279 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9127)
2025-04-18 19:04:27,279 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9127)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 19:04:27,290 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:04:27,290 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:04:27,290 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:04:27,290 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:04:27,413 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,413 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,478 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:27,478 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:04:27] "GET / HTTP/1.1" 200 -
2025-04-18 19:04:38,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:38,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:04:38,802 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:04:38,802 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:04:38,804 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:04:38,804 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:04:39,112 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:04:39,140 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:04:39,794 - SHEMS-Simulator - INFO - Generated data for device 13 (Ceiling Light #1)
2025-04-18 19:04:40,416 - SHEMS-Simulator - INFO - Generated data for device 14 (Air Purifier #2)
2025-04-18 19:04:41,026 - SHEMS-Simulator - INFO - Generated data for device 15 (Unknown Device #3)
2025-04-18 19:04:41,670 - SHEMS-Simulator - INFO - Generated data for device 16 (Unknown Device #4)
2025-04-18 19:04:41,680 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:05:08,812 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:08,812 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:08,818 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:08,818 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:18,826 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:18,826 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:18,832 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:18,832 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:28,839 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:28,839 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:28,845 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:28,845 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:38,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:38,852 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:38,858 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:38,858 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:48,865 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:48,865 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:05:48,871 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:48,871 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:05:58,872 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:05:58,872 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:05:58,880 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,880 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,923 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:05:58,923 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:05:58,926 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,926 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:05:58,950 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "GET / HTTP/1.1" 200 -
2025-04-18 19:05:58,950 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:58] "GET / HTTP/1.1" 200 -
2025-04-18 19:05:59,196 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:59] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:05:59,196 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:05:59] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:06:24,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:24,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:25,247 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:06:25,247 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:06:25,250 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:06:25,250 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:06:25,546 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:06:25,578 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:06:26,227 - SHEMS-Simulator - INFO - Generated data for device 17 (Unknown Device #1)
2025-04-18 19:06:26,849 - SHEMS-Simulator - INFO - Generated data for device 18 (Lamp #2)
2025-04-18 19:06:27,476 - SHEMS-Simulator - INFO - Generated data for device 19 (Smart Plug #3)
2025-04-18 19:06:28,083 - SHEMS-Simulator - INFO - Generated data for device 20 (Fan #4)
2025-04-18 19:06:28,086 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:06:55,256 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:55,256 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:06:55,261 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:06:55,261 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:05,266 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:05,266 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:05,269 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:05,269 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:15,275 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:15,275 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:15,280 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:15,280 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:25,287 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:25,287 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:25,292 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:25,292 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:35,300 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:35,300 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:07:35,305 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:35,305 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:07:45,307 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:07:45,307 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:07:45,313 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,313 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,343 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:07:45,343 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:07:45,346 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,346 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:07:45,367 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET / HTTP/1.1" 200 -
2025-04-18 19:07:45,367 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET / HTTP/1.1" 200 -
2025-04-18 19:07:45,527 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:07:45,527 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:07:45] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:19:00,498 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:19:00,498 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 19:22:51,657 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:22:51,657 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:22:51,658 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9512)
2025-04-18 19:22:51,658 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9512)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 19:22:51,669 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:22:51,669 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 19:22:51,670 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:22:51,670 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 19:22:51,724 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,724 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,765 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:22:51,765 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 19:22:51] "GET / HTTP/1.1" 200 -
2025-04-18 19:23:13,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:13,884 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:14,593 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:23:14,593 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:23:14,595 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:23:14,595 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:23:14,885 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:23:14,911 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:23:15,557 - SHEMS-Simulator - INFO - Generated data for device 21 (Ceiling Light #1)
2025-04-18 19:23:16,153 - SHEMS-Simulator - INFO - Generated data for device 22 (Microwave #2)
2025-04-18 19:23:16,768 - SHEMS-Simulator - INFO - Generated data for device 23 (Fan #3)
2025-04-18 19:23:17,387 - SHEMS-Simulator - INFO - Generated data for device 24 (Microwave #4)
2025-04-18 19:23:17,393 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:23:44,602 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:44,602 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:44,607 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:44,607 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:54,614 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:54,614 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:23:54,619 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:23:54,619 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:04,623 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:04,623 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:04,626 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:04,626 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:14,633 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:14,633 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:14,638 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:14,638 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:24,645 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:24,645 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:24:24,650 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:24,650 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:24:34,652 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:24:34,652 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:24:34,660 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,660 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,705 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:24:34,705 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:24:34,708 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,708 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:24:34,731 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET / HTTP/1.1" 200 -
2025-04-18 19:24:34,731 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET / HTTP/1.1" 200 -
2025-04-18 19:24:34,988 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:24:34,988 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:24:34] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:29:05,250 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:05,250 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:05,954 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:29:05,954 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 19:29:05,956 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:29:05,956 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 19:29:06,245 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 19:29:06,270 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 19:29:06,908 - SHEMS-Simulator - INFO - Generated data for device 25 (Router #1)
2025-04-18 19:29:07,505 - SHEMS-Simulator - INFO - Generated data for device 26 (Dishwasher #2)
2025-04-18 19:29:08,110 - SHEMS-Simulator - INFO - Generated data for device 27 (Air Purifier #3)
2025-04-18 19:29:08,716 - SHEMS-Simulator - INFO - Generated data for device 28 (Router #4)
2025-04-18 19:29:08,723 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 19:29:35,963 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:35,963 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:35,968 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:35,968 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:45,975 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:45,975 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:45,980 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:45,980 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:55,986 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:55,986 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:29:55,991 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:29:55,991 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:05,998 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:05,998 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:06,003 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:06,003 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:16,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:16,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 19:30:16,015 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:16,015 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 19:30:26,016 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:30:26,016 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 19:30:26,023 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,023 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,050 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:30:26,050 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 19:30:26,053 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,053 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 19:30:26,072 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET / HTTP/1.1" 200 -
2025-04-18 19:30:26,072 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET / HTTP/1.1" 200 -
2025-04-18 19:30:26,433 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 19:30:26,433 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 19:30:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:16:45,226 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:16:45,226 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:17:00,758 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:00,758 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:00,759 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9708)
2025-04-18 20:17:00,759 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9708)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:17:00,771 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:17:00,771 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:17:00,771 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:17:00,771 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:17:00,918 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,918 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,969 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:00,969 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:17:00] "GET / HTTP/1.1" 200 -
2025-04-18 20:17:09,705 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:09,705 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:10,412 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:17:10,412 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:17:10,414 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:17:10,414 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:17:10,709 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:17:10,733 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:17:11,384 - SHEMS-Simulator - INFO - Generated data for device 29 (Router #1)
2025-04-18 20:17:11,994 - SHEMS-Simulator - INFO - Generated data for device 30 (Charger #2)
2025-04-18 20:17:12,599 - SHEMS-Simulator - INFO - Generated data for device 31 (AC Unit #3)
2025-04-18 20:17:13,208 - SHEMS-Simulator - INFO - Generated data for device 32 (Smart Light #4)
2025-04-18 20:17:13,215 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:17:40,421 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:40,421 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:40,427 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:40,427 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:50,435 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:50,435 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:17:50,440 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:17:50,440 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:00,448 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:00,448 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:00,454 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:00,454 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:10,461 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:10,461 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:10,467 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:10,467 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:20,474 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:20,474 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:18:20,479 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:20,479 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:18:30,481 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 20:18:30,481 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 20:18:30,489 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,489 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,592 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 20:18:30,592 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 20:18:30,599 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,599 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 20:18:30,652 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "GET / HTTP/1.1" 200 -
2025-04-18 20:18:30,652 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:30] "GET / HTTP/1.1" 200 -
2025-04-18 20:18:31,034 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:18:31,034 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 20:18:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 20:51:59,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:51:59,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:52:12,767 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:52:12,767 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:52:12,768 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9839)
2025-04-18 20:52:12,768 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9839)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:52:12,778 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:52:12,778 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:52:12,779 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:52:12,779 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:52:12,893 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,893 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,956 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:52:12,956 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:52:12] "GET / HTTP/1.1" 200 -
2025-04-18 20:53:47,843 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:53:47,843 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:54:00,997 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:54:00,997 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:54:00,999 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9889)
2025-04-18 20:54:00,999 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9889)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:54:01,009 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:54:01,009 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:54:01,009 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:54:01,009 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:54:01,129 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,129 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,197 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:54:01,197 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:54:01] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:40,437 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 20:57:40,437 - SHEMS-Server - INFO - Received shutdown signal, terminating...
nohup: ignoring input
2025-04-18 20:57:53,576 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:57:53,576 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:57:53,578 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9953)
2025-04-18 20:57:53,578 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 9953)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 20:57:53,588 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:57:53,588 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,588 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,705 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:57:53,770 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 20:57:53] "GET / HTTP/1.1" 200 -
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:42,460 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,164 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,166 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 20:58:43,458 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 4 devices over 4 days
2025-04-18 20:58:43,485 - SHEMS-Simulator - INFO - Created 4 devices for user 1
2025-04-18 20:58:44,130 - SHEMS-Simulator - INFO - Generated data for device 33 (Smart Light #1)
2025-04-18 20:58:44,745 - SHEMS-Simulator - INFO - Generated data for device 34 (Ceiling Light #2)
2025-04-18 20:58:45,334 - SHEMS-Simulator - INFO - Generated data for device 35 (Refrigerator #3)
2025-04-18 20:58:45,937 - SHEMS-Simulator - INFO - Generated data for device 36 (Lamp #4)
2025-04-18 20:58:45,944 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,174 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:13,179 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,187 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:23,192 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,199 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:33,204 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,211 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:43,216 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,224 - SHEMS-Server - INFO - Database connection established
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 20:59:53,229 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,231 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,239 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,278 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,281 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,301 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET / HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:00:03,458 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:00:03] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:18:25,586 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:18:25,586 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:18:38,598 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:18:38,598 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:18:38,600 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10074)
2025-04-18 21:18:38,600 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10074)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:18:38,618 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:18:38,618 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:18:38,619 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:18:38,619 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:18:38,775 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,775 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,833 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:18:38,833 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:18:38] "GET / HTTP/1.1" 200 -
2025-04-18 21:19:18,341 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:18,341 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:19,049 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:19:19,049 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:19:19,051 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:19:19,051 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:19:19,339 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:19:19,357 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:19:19,570 - SHEMS-Simulator - INFO - Generated data for device 37 (Router #1)
2025-04-18 21:19:19,576 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:19:49,058 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:49,058 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:49,063 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:49,063 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:59,071 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:59,071 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:19:59,076 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:19:59,076 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:09,083 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:09,083 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:09,088 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:09,088 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:19,096 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:19,096 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:19,101 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:19,101 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:29,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:29,108 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:20:29,113 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:29,113 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:20:39,115 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:20:39,115 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:20:39,123 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,123 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,153 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:20:39,153 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:20:39,156 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,156 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:20:39,176 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET / HTTP/1.1" 200 -
2025-04-18 21:20:39,176 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET / HTTP/1.1" 200 -
2025-04-18 21:20:39,996 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:20:39,996 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:20:39] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:22:11,024 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:22:11,024 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:22:24,066 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:24,066 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:24,068 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10150)
2025-04-18 21:22:24,068 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10150)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:22:24,078 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:22:24,078 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:22:24,079 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:22:24,079 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:22:24,200 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,200 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,267 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:24,267 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:22:24] "GET / HTTP/1.1" 200 -
2025-04-18 21:22:50,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:50,833 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:22:51,532 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:22:51,532 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 21:22:51,534 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:22:51,534 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 21:22:51,830 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:22:51,848 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:22:52,063 - SHEMS-Simulator - INFO - Generated data for device 38 (AC Unit #1)
2025-04-18 21:22:52,070 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:23:21,541 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:21,541 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:21,546 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:21,546 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:31,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:31,553 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:31,558 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:31,558 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:41,565 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:41,565 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:41,570 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:41,570 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:51,578 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:51,578 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:23:51,583 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:23:51,583 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:01,591 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:24:01,591 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:24:01,597 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:01,597 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 21:24:11,599 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:24:11,599 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 21:24:11,606 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,606 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,634 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:24:11,634 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 21:24:11,637 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,637 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:24:11,658 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET / HTTP/1.1" 200 -
2025-04-18 21:24:11,658 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET / HTTP/1.1" 200 -
2025-04-18 21:24:11,944 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:24:11,944 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:24:11] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:02,499 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:41:02,499 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:41:15,527 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:15,527 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:15,528 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10246)
2025-04-18 21:41:15,528 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 10246)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 21:41:15,538 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:41:15,538 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 21:41:15,539 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:41:15,539 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 21:41:15,696 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,696 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,743 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:15,743 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 21:41:15] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:25,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:25,010 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:41:25,718 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,718 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,750 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:41:25,750 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:41:25,752 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,752 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:41:25,774 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:25,774 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:25] "GET / HTTP/1.1" 200 -
2025-04-18 21:41:26,042 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:41:26,064 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:41:26,294 - SHEMS-Simulator - INFO - Generated data for device 39 (Smart Plug #1)
2025-04-18 21:41:26,300 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:26,300 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:41:26] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:41:26,301 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:42:31,000 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:42:31,000 - SHEMS-Server - INFO - Database connection established
2025-04-18 21:42:31,701 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,701 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,718 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:42:31,718 - SHEMS-Server - WARNING - Unauthorized access attempt to /dashboard
2025-04-18 21:42:31,721 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,721 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 21:42:31,750 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET / HTTP/1.1" 200 -
2025-04-18 21:42:31,750 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET / HTTP/1.1" 200 -
2025-04-18 21:42:31,962 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:42:31,962 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 21:42:31] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 21:42:32,077 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 21:42:32,095 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 21:42:32,318 - SHEMS-Simulator - INFO - Generated data for device 40 (Charger #1)
2025-04-18 21:42:32,325 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 21:58:55,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
2025-04-18 21:58:55,592 - SHEMS-Server - INFO - Received shutdown signal, terminating...
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
Traceback (most recent call last):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 426, in <module>
    @app.route('/api/access-points')
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 362, in decorator
    self.add_url_rule(rule, endpoint, f, **options)
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/scaffold.py", line 47, in wrapper_func
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/app/smarthome/dev/bin/venv/lib/python3.11/site-packages/flask/sansio/app.py", line 657, in add_url_rule
    raise AssertionError(
AssertionError: View function mapping is overwriting an existing endpoint function: access_points
2025-04-18 22:10:18,869 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:18,869 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:18,870 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 11271)
2025-04-18 22:10:18,870 - SHEMS-Server - INFO - Starting SHEMS server on port 5000 (PID: 11271)
 * Serving Flask app 'shems_monitoring_server'
 * Debug mode: off
2025-04-18 22:10:18,881 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 22:10:18,881 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://192.168.1.223:5000
2025-04-18 22:10:18,882 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 22:10:18,882 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-04-18 22:10:19,030 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,030 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,086 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:19,086 - werkzeug - INFO - 127.0.0.1 - - [18/Apr/2025 22:10:19] "GET / HTTP/1.1" 200 -
2025-04-18 22:10:59,557 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:10:59,557 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:00,261 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 22:11:00,261 - SHEMS-Server - DEBUG - Session created for 1
2025-04-18 22:11:00,263 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 22:11:00,263 - SHEMS-Server - INFO - Started simulation for user 1
2025-04-18 22:11:00,555 - SHEMS-Simulator - INFO - Starting simulation for user 1 with 1 devices over 1 days
2025-04-18 22:11:00,577 - SHEMS-Simulator - INFO - Created 1 devices for user 1
2025-04-18 22:11:00,787 - SHEMS-Simulator - INFO - Generated data for device 41 (Unknown Device #1)
2025-04-18 22:11:00,794 - SHEMS-Simulator - INFO - Completed data generation for user 1
2025-04-18 22:11:30,270 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:30,270 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:30,276 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:30,276 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:40,283 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:40,283 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:40,288 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:40,288 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,295 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:50,295 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:11:50,301 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,308 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:00,312 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,320 - SHEMS-Server - INFO - Database connection established
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:10,325 - SHEMS-Server - WARNING - Dashboard check failed: 0
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,327 - SHEMS-Server - ERROR - Dashboard import timeout - no data generated
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,334 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mPOST /submit HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,377 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 22:12:20,377 - SHEMS-Server - WARNING - Unauthorized access attempt
2025-04-18 22:12:20,380 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,380 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "[32mGET /dashboard HTTP/1.1[0m" 302 -
2025-04-18 22:12:20,405 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "GET / HTTP/1.1" 200 -
2025-04-18 22:12:20,405 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:20] "GET / HTTP/1.1" 200 -
2025-04-18 22:12:21,097 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:21] "GET /api/access-points HTTP/1.1" 200 -
2025-04-18 22:12:21,097 - werkzeug - INFO - 192.168.1.245 - - [18/Apr/2025 22:12:21] "GET /api/access-points HTTP/1.1" 200 -
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/data/logs[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/data/logs $[00m cccddd   ......///....../d/d/devevev///bbbiiinnn
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  17K Apr 18 22:09 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  17K Apr 18 22:09 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  17K Apr 18 22:09 shems_monitoring_server.py
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[22;1t[1;38r[?12h[?12l[22;2t[1;38r[?12h[?12l[22;2t[22;1t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 465 lines, 17332 bytes 465 lines, 17332 bytes 465 lines, 17332 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Houtput = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(output)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").lower() == title.lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Could not fetch UID for {title}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[31;1H[30;1H[29;1H[28;1H[32;1H[31;1H[30;1H[29;1H[28;1H[32;1H[31;1H[30;1H[29;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[24;1H[23;1H[22;1H[21;1H[20;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H











[?25l[19;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Herrors = [][19;13H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Herrors = [][19;13H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Herrors = [][19;13H[?25h[?25l[19;37r[37;1H
[1;38r[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H# Check required fields[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H# Check required fields[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H# Check required fields[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[19;13H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H# Validate numeric fields[19;17H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H# Validate numeric fields[19;17H[?25h[?25l[19;37r[37;1H
[1;38r[37;5H# Validate numeric fields[19;17H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Htry:[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Htry:[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;5Htry:[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[19;9H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[19;5H[?25h[?25l[19;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[19;1H[?25h[?25l[19;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[19;1H[?25h[?25l[19;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[19;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25ldef get_dashboard_uid_from_title(title):
    try:[20;9H[K[21;5H    response = subprocess.check_output([[21;45H[K[22;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"[24;33H[K[25;5H    ])[25;11H[K[26;5H    dashboards = json.loads(response)[27;9Hfor dash in dashboards:
            if dash.get("title", "").strip().lower() == title.strip().lower():
                uid = dash.get("uid")[30;9H        logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[31;13H    return uid[31;27H[K[32;9Hlogger.warning(f"No dashboard matched title '{title}'")
    except Exception as e:[33;27H[K[34;5H    logger.error(f"Error fetching dashboard UID for '{title}': {e}")
    return None[35;16H[K[36;9H[K[37;1Hdef grafana_dashboard_url(uid):[37;32H[K[36;1H[?25h[?25ldef get_dashboard_uid_from_title(title):
    try:[20;9H[K[21;5H    response = subprocess.check_output([[21;45H[K[22;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"[24;33H[K[25;5H    ])[25;11H[K[26;5H    dashboards = json.loads(response)[27;9Hfor dash in dashboards:
            if dash.get("title", "").strip().lower() == title.strip().lower():
                uid = dash.get("uid")[30;9H        logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[31;13H    return uid[31;27H[K[32;9Hlogger.warning(f"No dashboard matched title '{title}'")
    except Exception as e:[33;27H[K[34;5H    logger.error(f"Error fetching dashboard UID for '{title}': {e}")
    return None[35;16H[K[36;9H[K[37;1Hdef grafana_dashboard_url(uid):[37;32H[K[36;1H[?25h[?25ldef get_dashboard_uid_from_title(title):
    try:[20;9H[K[21;5H    response = subprocess.check_output([[21;45H[K[22;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"[24;33H[K[25;5H    ])[25;11H[K[26;5H    dashboards = json.loads(response)[27;9Hfor dash in dashboards:
            if dash.get("title", "").strip().lower() == title.strip().lower():
                uid = dash.get("uid")[30;9H        logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[31;13H    return uid[31;27H[K[32;9Hlogger.warning(f"No dashboard matched title '{title}'")
    except Exception as e:[33;27H[K[34;5H    logger.error(f"Error fetching dashboard UID for '{title}': {e}")
    return None[35;16H[K[36;9H[K[37;1Hdef grafana_dashboard_url(uid):[37;32H[K[36;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m


[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_files = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'overview': '/app/smarthome/grafana/grafana_dashboards/overview-dashboard.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'power': '/app/smarthome/grafana/grafana_dashboards/power-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'energy': '/app/smarthome/grafana/grafana_dashboards/energy-analysis.json',[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'devices': '/app/smarthome/grafana/grafana_dashboards/device-details.json'[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor name, filepath in dashboard_files.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith open(filepath) as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresponse = requests.post([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hf"http://{get_pi_ip()}:3000/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hjson=dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htimeout=10[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif response.status_code == 200:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Successfully imported {name} dashboard")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import dashboards from JSON files"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef import_grafana_dashboards():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h
























































[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25h///[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25hsss[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h///iiimmmpppooorrrttt___gggrrraaafffaaannnaaa[?25l[31msearch hit BOTTOM, continuing at TOP[17;1H[?25h[?25l[31msearch hit BOTTOM, continuing at TOP[17;1H[?25h[?25l[31msearch hit BOTTOM, continuing at TOP[17;1H[?25h
[m    
[m    
[m    
    
    
    [20;9H[20;9H[20;9H[21;9H[21;9H[21;9H[22;9H[22;9H[22;9H[23;9H[23;9H[23;9H
    
    
    
   
   
   
    
    
    [27;9H[27;9H[27;9H[28;13H[28;13H[28;13H[29;17H[29;17H[29;17H[30;17H[30;17H[30;17H[31;21H[31;21H[31;21H[32;21H[32;21H[32;21H[33;21H[33;21H[33;21H[?25l[38;1H[K[38;1H/[?25h[?25l[38;1H[K[38;1H/[?25h[?25l[38;1H[K[38;1H/[?25h[?25l/import_grafana[?25l/import_grafana[?25l/import_grafana[31msearch hit BOTTOM, continuing at TOP[31msearch hit BOTTOM, continuing at TOP[31msearch hit BOTTOM, continuing at TOP[17;5H[?25h[17;5H[?25h[17;5H[?25h[?25l[m[38;1H[K[38;1H/[?25h[?25l[m[38;1H[K[38;1H/[?25h[?25l[m[38;1H[K[38;1H/[?25h:::iiimmmpppooorrrttt___gggrrraaafff[?25l[38;13H[K[38;13H[?25h[?25l[38;13H[K[38;13H[?25h[?25l[38;13H[K[38;13H[?25h[?25l[38;12H[K[38;12H[?25h[?25l[38;12H[K[38;12H[?25h[?25l[38;12H[K[38;12H[?25h[?25l[38;11H[K[38;11H[?25h[?25l[38;11H[K[38;11H[?25h[?25l[38;11H[K[38;11H[?25h[?25l[38;10H[K[38;10H[?25h[?25l[38;10H[K[38;10H[?25h[?25l[38;10H[K[38;10H[?25h[?25l[38;9H[K[38;9H[?25h[?25l[38;9H[K[38;9H[?25h[?25l[38;9H[K[38;9H[?25h[?25l[38;8H[K[38;8H[?25h[?25l[38;8H[K[38;8H[?25h[?25l[38;8H[K[38;8H[?25h[?25l[38;7H[K[38;7H[?25h[?25l[38;7H[K[38;7H[?25h[?25l[38;7H[K[38;7H[?25h[?25l[38;6H[K[38;6H[?25h[?25l[38;6H[K[38;6H[?25h[?25l[38;6H[K[38;6H[?25h[?25l[38;5H[K[38;5H[?25h[?25l[38;5H[K[38;5H[?25h[?25l[38;5H[K[38;5H[?25h[?25l[38;4H[K[38;4H[?25h[?25l[38;4H[K[38;4H[?25h[?25l[38;4H[K[38;4H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h [17;5H [17;5H [17;5H[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25h///iiimmmpppooorrrttt___gggrrraaafffaaannnaaa[?25l[31msearch hit BOTTOM, continuing at TOP[?25l[31msearch hit BOTTOM, continuing at TOP[?25l[31msearch hit BOTTOM, continuing at TOP[17;1H[?25h[17;1H[?25h[17;1H[?25h[16;1H[16;1H[16;1H






























































[?25l[1;37r[m[37;1H
[1;38r[37;17Helse:[38;1H[K[37;1H[?25h[?25l[1;37r[m[37;1H
[1;38r[37;17Helse:[38;1H[K[37;1H[?25h[?25l[1;37r[m[37;1H
[1;38r[37;17Helse:[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.warning(f"Failed to import {name} dashboard: {response.text}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard import error for {name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H


[7;1H[7;1H[7;1H[?25l[7;37r[37;1H
[1;38r[37;17H# Check if user has any device data[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;17H# Check if user has any device data[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;17H# Check if user has any device data[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;17Hcursor.execute([7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;17Hcursor.execute([7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;17Hcursor.execute([7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H(user_id,)[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H(user_id,)[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;21H(user_id,)[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;17H)[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;17H)[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;17H)[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[7;4H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[7;4H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[7;4H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[7;5H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hreturn False[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hreturn False[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hreturn False[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[7;13H[?25h[?25l[7;37r[37;1H
[1;38r[7;13H[?25h[?25l[7;37r[37;1H
[1;38r[7;13H[?25h[?25l[7;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;1Hdef login_required(f):[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;1Hdef login_required(f):[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;1Hdef login_required(f):[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H@wraps(f)[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H@wraps(f)[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H@wraps(f)[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hreturn decorated_function[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hreturn decorated_function[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hreturn decorated_function[7;17H[?25h[?25l[7;37r[37;1H
[1;38r[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[7;21H[?25h[?25l[7;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[7;9H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H@wraps(f)[7;13H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H@wraps(f)[7;13H[?25h[?25l[7;37r[37;1H
[1;38r[37;5H@wraps(f)[7;13H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[7;1H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[7;1H[?25h[?25l[7;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[7;1H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Htry:[7;1H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Htry:[7;1H[?25h[?25l[7;37r[37;1H
[1;38r[37;9Htry:[7;1H[?25h

























































































[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H'access_points': access_points,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpass[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif tailscale_ip:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef access_points():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/access-points')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H








[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H




























































































[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef index():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Routes =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn decorated_function[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif 'user_id' not in session:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H@wraps(f)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef login_required(f):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Decorators =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check if user has any device data[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn response.status_code == 200[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htimeout=5[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hgrafana_url,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = requests.get([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn True[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H# Actual import logic here[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(user_id,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()[0] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Data exists, importing dashboards")[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25H# Actual import logic here[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No devices yet (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[?25l[2;37r[37;1H
[1;38r[37;9H)[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9H)[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9H)[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[2;4H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[2;4H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[2;4H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn False[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn False[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn False[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[2;9H[?25h[?25l[2;37r[37;1H
[1;38r[2;9H[?25h[?25l[2;37r[37;1H
[1;38r[2;9H[?25h[?25l[2;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[2;17H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[2;17H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[2;17H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Htry:[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Htry:[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Htry:[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;17H# Check if user has any device data[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;17H# Check if user has any device data[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;17H# Check if user has any device data[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;17Hcursor.execute([2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;17Hcursor.execute([2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;17Hcursor.execute([2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H(user_id,)[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H(user_id,)[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;21H(user_id,)[2;25H[?25h[?25l[2;37r[37;1H
[1;38r[37;17H)[2;20H[?25h[?25l[2;37r[37;1H
[1;38r[37;17H)[2;20H[?25h[?25l[2;37r[37;1H
[1;38r[37;17H)[2;20H[?25h[?25l[2;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[2;21H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[2;8H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[2;8H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[2;8H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn False[2;9H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn False[2;9H[?25h[?25l[2;37r[37;1H
[1;38r[37;9Hreturn False[2;9H[?25h[?25l[2;37r[37;1H
[1;38r[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[2;13H[?25h[?25l[2;37r[37;1H
[1;38r[37;1Hdef login_required(f):[2;4H[?25h[?25l[2;37r[37;1H
[1;38r[37;1Hdef login_required(f):[2;4H[?25h[?25l[2;37r[37;1H
[1;38r[37;1Hdef login_required(f):[2;4H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H@wraps(f)[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H@wraps(f)[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5H@wraps(f)[2;5H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[2;1H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[2;1H[?25h[?25l[2;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[2;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[1;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[2;33Hcontinue[3;1H[K[4;5H                        with open(dashboard_path, 'r') as f:
        [24Cdashboard_json = json.load(f)[6;9H[K[7;9H                    import_payload = {[8;13H            [8C"dashboard": dashboard_json,[9;13H                    "overwrite": True,[10;13H         [11C"folderId": 0[11;9H [19C}[12;9H[K[13;5H                        result = subprocess.run([14;9H                        ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[15;9H            [13C"-H", "Content-Type: application/json",[16;34H"-u", "admin:admin",
                                 "-d", json.dumps(import_payload)],
                                capture_output=True, text=True
        [20C)[20;9H[K[21;13H                if '"status":"success"' in result.stdout:[22;17H                logger.info(f"Successfully imported '{title}'")[23;17H            else:[24;21H            logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[25;21H[K[26;21H    return True[27;17H[K[28;17H    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)[30;9H[K[31;9Hexcept Exception as e:[32;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)[34;1H[K[35;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False[37;5H[K[37;1H[?25h[?25l[1;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[2;33Hcontinue[3;1H[K[4;5H                        with open(dashboard_path, 'r') as f:
        [24Cdashboard_json = json.load(f)[6;9H[K[7;9H                    import_payload = {[8;13H            [8C"dashboard": dashboard_json,[9;13H                    "overwrite": True,[10;13H         [11C"folderId": 0[11;9H [19C}[12;9H[K[13;5H                        result = subprocess.run([14;9H                        ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[15;9H            [13C"-H", "Content-Type: application/json",[16;34H"-u", "admin:admin",
                                 "-d", json.dumps(import_payload)],
                                capture_output=True, text=True
        [20C)[20;9H[K[21;13H                if '"status":"success"' in result.stdout:[22;17H                logger.info(f"Successfully imported '{title}'")[23;17H            else:[24;21H            logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[25;21H[K[26;21H    return True[27;17H[K[28;17H    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)[30;9H[K[31;9Hexcept Exception as e:[32;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)[34;1H[K[35;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False[37;5H[K[37;1H[?25h[?25l[1;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[2;33Hcontinue[3;1H[K[4;5H                        with open(dashboard_path, 'r') as f:
        [24Cdashboard_json = json.load(f)[6;9H[K[7;9H                    import_payload = {[8;13H            [8C"dashboard": dashboard_json,[9;13H                    "overwrite": True,[10;13H         [11C"folderId": 0[11;9H [19C}[12;9H[K[13;5H                        result = subprocess.run([14;9H                        ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[15;9H            [13C"-H", "Content-Type: application/json",[16;34H"-u", "admin:admin",
                                 "-d", json.dumps(import_payload)],
                                capture_output=True, text=True
        [20C)[20;9H[K[21;13H                if '"status":"success"' in result.stdout:[22;17H                logger.info(f"Successfully imported '{title}'")[23;17H            else:[24;21H            logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[25;21H[K[26;21H    return True[27;17H[K[28;17H    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)[30;9H[K[31;9Hexcept Exception as e:[32;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)[34;1H[K[35;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False[37;5H[K[37;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[36;1H[36;1H[36;1H


[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;33Hcontinue[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hcontinue[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hcontinue[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hcontinue[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hcontinue[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hcontinue[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hif uid:[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hif uid:[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Hif uid:[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[1;1H[L[1;38r[1;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdashboards_expected = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdashboards_expected = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdashboards_expected = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hretry_delay = 10[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hmax_retries = 5[?25h


[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_days <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept ValueError:[?25h



















































































[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-u", "admin:admin"[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn conn[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn conn[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn conn[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hautocommit=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hautocommit=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hautocommit=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconnect_timeout=5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconnect_timeout=5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconnect_timeout=5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hdatabase=self.db_name,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hdatabase=self.db_name,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hdatabase=self.db_name,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword=self.db_pass,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword=self.db_pass,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword=self.db_pass,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser=self.db_user,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser=self.db_user,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser=self.db_user,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hhost='localhost',[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hhost='localhost',[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hhost='localhost',[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hconn = pymysql.connect([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hconn = pymysql.connect([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hconn = pymysql.connect([?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlast_error = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlast_error = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlast_error = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hattempts = 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hattempts = 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hattempts = 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef get_connection(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef get_connection(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef get_connection(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef __init__(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef __init__(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef __init__(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRETRY_DELAY = 2[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRETRY_DELAY = 2[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRETRY_DELAY = 2[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HMAX_RETRIES = 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HMAX_RETRIES = 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HMAX_RETRIES = 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hclass DatabaseManager:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hclass DatabaseManager:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hclass DatabaseManager:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Database Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Database Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Database Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Application Setup =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Application Setup =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Application Setup =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.StreamHandler()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.StreamHandler()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.StreamHandler()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hhandlers=[[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hhandlers=[[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hhandlers=[[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogging.basicConfig([?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogging.basicConfig([?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogging.basicConfig([?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Logging Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Logging Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Logging Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(LOG_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(LOG_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(LOG_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(DB_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(DB_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(DB_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(SCRIPT_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(SCRIPT_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(SCRIPT_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(HTML_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(HTML_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(HTML_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Ensure directories exist[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Ensure directories exist[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Ensure directories exist[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR = '/app/smarthome/data/logs/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR = '/app/smarthome/data/logs/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR = '/app/smarthome/data/logs/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR = '/app/smarthome/data/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR = '/app/smarthome/data/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR = '/app/smarthome/data/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR = '/app/smarthome/dev/bin'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR = '/app/smarthome/dev/bin'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR = '/app/smarthome/dev/bin'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR = '/app/smarthome/dev/templates/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR = '/app/smarthome/dev/templates/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR = '/app/smarthome/dev/templates/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcurrent_pid = os.getpid()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcurrent_pid = os.getpid()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcurrent_pid = os.getpid()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Get Current PID =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Get Current PID =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Get Current PID =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql import MySQLError[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql import MySQLError[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql import MySQLError[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql.cursors import DictCursor[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql.cursors import DictCursor[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql.cursors import DictCursor[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport pymysql[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport pymysql[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport pymysql[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport json[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport json[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport json[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport secrets[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport secrets[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport secrets[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[36;1H[36;1H[36;1H


[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Setup dashboards after delay[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H])[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_days)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(num_devices),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hstr(user_id),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hsys.executable,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hsubprocess.Popen([[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Start data simulation[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['username'] = username[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsession.permanent = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Store session[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconn.commit()[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H(username, password_hash)[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H# Create new user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Helse:[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser_id = user['UserId'][?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif user:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huser = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H(username,)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute([?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H# Check existing user[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hpassword = request.form['password'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = request.form['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H# Validate input[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef submit():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@handle_db_errors[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H})[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H






























































[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H















































[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([?25h[?25l[1;37r[1;1H[2M[1;38r[36;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;17Hstderr=subprocess.DEVNULL,[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;17Hstderr=subprocess.DEVNULL,[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;17Hstderr=subprocess.DEVNULL,[36;1H[?25h


[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9Hexcept subprocess.TimeoutExpired:[37;13Hlogger.warning("Process cleanup timed out")[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9Hexcept subprocess.TimeoutExpired:[37;13Hlogger.warning("Process cleanup timed out")[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9Hexcept subprocess.TimeoutExpired:[37;13Hlogger.warning("Process cleanup timed out")[36;1H[?25h


[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Handle shutdown signals gracefully"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Main Execution =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H})[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_energy": result['energy'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_power": result['power'] or 0,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"active_devices": active_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"active_devices": active_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"active_devices": active_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_devices": total_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_devices": total_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"total_devices": total_devices,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"username": username,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"username": username,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"username": username,[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[2;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[2L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[2;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Husername = session['username'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef api_user_data():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/api/user-data')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hsession.clear()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef logout():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h










































































[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H





[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H


[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25li[?25h[?25li[?25h[?25li[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25lx[?25h[?25lx[?25h[?25lx[?25h[?2004h[>4;2m[?25l[?25h[?4m[?2004h[>4;2m[?25l[?25h[?4m[?2004h[>4;2m[?25l[?25h[?4m[?25l[18;9H[K[18;8H[?25h[?25l[18;9H[K[18;8H[?25h[?25l[18;9H[K[18;8H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l [?25h[?25l [?25h[?25l [?25h[?25l[19;37r[19;1H[8L[1;38r[18;9Hdashboard_uids = {
    "overview": get_dashboard_uid_from_title("SHEMS Overview"),
    "power": get_dashboard_uid_from_title("Power Analysis"),
    "energy": get_dashboard_uid_from_title("Energy Analysis"),
    "devices": get_dashboard_uid_from_title("Device Details")
}
if not all(dashboard_uids.values()):
    logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[19;37r[19;1H[8L[1;38r[18;9Hdashboard_uids = {
    "overview": get_dashboard_uid_from_title("SHEMS Overview"),
    "power": get_dashboard_uid_from_title("Power Analysis"),
    "energy": get_dashboard_uid_from_title("Energy Analysis"),
    "devices": get_dashboard_uid_from_title("Device Details")
}
if not all(dashboard_uids.values()):
    logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[19;37r[19;1H[8L[1;38r[18;9Hdashboard_uids = {
    "overview": get_dashboard_uid_from_title("SHEMS Overview"),
    "power": get_dashboard_uid_from_title("Power Analysis"),
    "energy": get_dashboard_uid_from_title("Energy Analysis"),
    "devices": get_dashboard_uid_from_title("Device Details")
}
if not all(dashboard_uids.values()):
    logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[25;61H[25;61H[25;61H[24;7H[24;7H[24;7H[23;1H[23;1H[23;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l [7C}[?25h[?25l [7C}[?25h[?25l [7C}[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[24;8H[24;8H[24;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l        if not all(dashboard_uids.values()):[24;9H[?25h[?25l        if not all(dashboard_uids.values()):[24;9H[?25h[?25l        if not all(dashboard_uids.values()):[24;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[25;8H[25;8H[25;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l    logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[25;9H[?25h[?25l    logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[25;9H[?25h[?25l    logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[25;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[26;8H[26;8H[26;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[26;9H[?25h[?25l    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[26;9H[?25h[?25l    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[26;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[27;8H[27;8H[27;8H[28;8H[28;8H[28;8H[27;8H[27;8H[27;8H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[28;37r[28;1H[L[1;38r[27;9H[K[28;1Hdashboards = {[?25h[?25l[28;37r[28;1H[L[1;38r[27;9H[K[28;1Hdashboards = {[?25h[?25l[28;37r[28;1H[L[1;38r[27;9H[K[28;1Hdashboards = {[?25h[?25l        dashboards = {[28;9H[?25h[?25l        dashboards = {[28;9H[?25h[?25l        dashboards = {[28;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[27;8H[27;8H[27;8H[26;8H[26;8H[26;8H[25;8H[25;8H[25;8H[24;8H[24;8H[24;8H[23;8H[23;8H[23;8H[22;8H[22;8H[22;8H[21;8H[21;8H[21;8H[20;8H[20;8H[20;8H[19;8H[19;8H[19;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l    "overview": get_dashboard_uid_from_title("SHEMS Overview"),[19;9H[?25h[?25l    "overview": get_dashboard_uid_from_title("SHEMS Overview"),[19;9H[?25h[?25l    "overview": get_dashboard_uid_from_title("SHEMS Overview"),[19;9H[?25h[?25l        "overview": get_dashboard_uid_from_title("SHEMS Overview"),[19;17H[?25h[?25l        "overview": get_dashboard_uid_from_title("SHEMS Overview"),[19;17H[?25h[?25l        "overview": get_dashboard_uid_from_title("SHEMS Overview"),[19;17H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[20;16H[20;16H[20;16H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l    "power": get_dashboard_uid_from_title("Power Analysis"),[20;9H[?25h[?25l    "power": get_dashboard_uid_from_title("Power Analysis"),[20;9H[?25h[?25l    "power": get_dashboard_uid_from_title("Power Analysis"),[20;9H[?25h[?25l        "power": get_dashboard_uid_from_title("Power Analysis"),[20;17H[?25h[?25l        "power": get_dashboard_uid_from_title("Power Analysis"),[20;17H[?25h[?25l        "power": get_dashboard_uid_from_title("Power Analysis"),[20;17H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[21;16H[21;16H[21;16H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l    "energy": get_dashboard_uid_from_title("Energy Analysis"),[21;9H[?25h[?25l    "energy": get_dashboard_uid_from_title("Energy Analysis"),[21;9H[?25h[?25l    "energy": get_dashboard_uid_from_title("Energy Analysis"),[21;9H[?25h[?25l        "energy": get_dashboard_uid_from_title("Energy Analysis"),[21;17H[?25h[?25l        "energy": get_dashboard_uid_from_title("Energy Analysis"),[21;17H[?25h[?25l        "energy": get_dashboard_uid_from_title("Energy Analysis"),[21;17H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[22;16H[22;16H[22;16H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l    "devices": get_dashboard_uid_from_title("Device Details")[22;9H[?25h[?25l    "devices": get_dashboard_uid_from_title("Device Details")[22;9H[?25h[?25l    "devices": get_dashboard_uid_from_title("Device Details")[22;9H[?25h[?25l        "devices": get_dashboard_uid_from_title("Device Details")[22;17H[?25h[?25l        "devices": get_dashboard_uid_from_title("Device Details")[22;17H[?25h[?25l        "devices": get_dashboard_uid_from_title("Device Details")[22;17H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[23;9H[23;9H[23;9H[24;16H[24;16H[24;16H[23;9H[23;9H[23;9H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l [7C}[?25h[?25l [7C}[?25h[?25l [7C}[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[24;16H[24;16H[24;16H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l        if not all(dashboard_uids.values()):[24;17H[?25h[?25l        if not all(dashboard_uids.values()):[24;17H[?25h[?25l        if not all(dashboard_uids.values()):[24;17H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[25;16H[25;16H[25;16H[26;16H[26;16H[26;16H[25;12H[25;12H[25;12H[24;16H[24;16H[24;16H[24;8H[24;8H[24;8H[25;8H[25;8H[25;8H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l        logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[25;17H[?25h[?25l        logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[25;17H[?25h[?25l        logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[25;17H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[26;16H[26;16H[26;16H[27;8H[27;8H[27;8H[26;8H[26;8H[26;8H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l        return render_template("error.html", message="Dashboards are not ready. Please try again later.")[26;17H[?25h[?25l        return render_template("error.html", message="Dashboards are not ready. Please try again later.")[26;17H[?25h[?25l        return render_template("error.html", message="Dashboards are not ready. Please try again later.")[26;17H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[27;8H[27;8H[27;8H[28;16H[28;16H[28;16H[29;16H[29;16H[29;16H[30;16H[30;16H[30;16H[31;16H[31;16H[31;16H[32;16H[32;16H[32;16H[33;9H[33;9H[33;9H[34;16H[34;16H[34;16H


[36;16H[36;16H[36;16H[37;16H[37;16H[37;16H[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[37;16H[?25h[36;16H[36;16H[36;16H[35;16H[35;16H[35;16H[34;16H[34;16H[34;16H[33;8H[33;8H[33;8H[32;16H[32;16H[32;16H[31;15H[31;15H[31;15H[30;16H[30;16H[30;16H[29;1H[29;1H[29;1H[28;16H[28;16H[28;16H[27;16H[27;16H[27;16H[26;13H[26;13H[26;13H[25;16H[25;16H[25;16H[24;1H[24;1H[24;1H[23;16H[23;16H[23;16H[22;16H[22;16H[22;16H[21;16H[21;16H[21;16H[20;1H[20;1H[20;1H[19;16H[19;16H[19;16H[18;9H[18;9H[18;9H[17;16H[17;16H[17;16H[16;16H[16;16H[16;16H[15;16H[15;16H[15;16H[14;16H[14;16H[14;16H[13;16H[13;16H[13;16H[12;8H[12;8H[12;8H[11;16H[11;16H[11;16H[10;16H[10;16H[10;16H[9;16H[9;16H[9;16H[8;16H[8;16H[8;16H[7;16H[7;16H[7;16H[6;16H[6;16H[6;16H[5;16H[5;16H[5;16H[4;16H[4;16H[4;16H[3;16H[3;16H[3;16H[2;16H[2;16H[2;16H[1;16H[1;16H[1;16H[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hwith conn.cursor() as cursor:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwith db_manager.get_connection() as conn:[1;16H[?25h[2;16H[2;16H[2;16H[3;16H[3;16H[3;16H[4;16H[4;16H[4;16H[5;16H[5;16H[5;16H[6;16H[6;16H[6;16H[7;16H[7;16H[7;16H[8;16H[8;16H[8;16H[9;16H[9;16H[9;16H[10;16H[10;16H[10;16H[11;16H[11;16H[11;16H[12;16H[12;16H[12;16H[13;16H[13;16H[13;16H[14;16H[14;16H[14;16H[15;8H[15;8H[15;8H[16;16H[16;16H[16;16H[17;16H[17;16H[17;16H[18;16H[18;16H[18;16H[19;16H[19;16H[19;16H[20;16H[20;16H[20;16H[21;9H[21;9H[21;9H[22;16H[22;16H[22;16H


[24;16H[24;16H[24;16H[25;16H[25;16H[25;16H[26;16H[26;16H[26;16H


[28;16H[28;16H[28;16H[29;13H[29;13H[29;13H[30;16H[30;16H[30;16H[31;16H[31;16H[31;16H


[31;16H[31;16H[31;16H[30;16H[30;16H[30;16H[29;13H[29;13H[29;13H[28;16H[28;16H[28;16H[27;1H[27;1H[27;1H[26;16H[26;16H[26;16H[25;16H[25;16H[25;16H[24;16H[24;16H[24;16H[23;1H[23;1H[23;1H[22;16H[22;16H[22;16H[21;9H[21;9H[21;9H[20;16H[20;16H[20;16H[19;16H[19;16H[19;16H[18;16H[18;16H[18;16H[17;16H[17;16H[17;16H[18;16H[18;16H[18;16H[17;16H[17;16H[17;16H[16;16H[16;16H[16;16H[15;8H[15;8H[15;8H[14;16H[14;16H[14;16H[13;16H[13;16H[13;16H[12;16H[12;16H[12;16H[11;16H[11;16H[11;16H[10;16H[10;16H[10;16H[9;16H[9;16H[9;16H[8;16H[8;16H[8;16H[7;16H[7;16H[7;16H[6;16H[6;16H[6;16H[5;16H[5;16H[5;16H[4;16H[4;16H[4;16H[3;16H[3;16H[3;16H[2;16H[2;16H[2;16H[1;16H[1;16H[1;16H[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Huser_id = session['user_id'][1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef dashboard():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@login_required[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H@app.route('/dashboard')[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn jsonify({"error": "Internal server error"}), 500[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn redirect(url_for('dashboard'))[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;16H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hsetup_grafana_dashboards(user_id)[1;16H[?25h


[3;16H[3;16H[3;16H


[5;16H[5;16H[5;16H[6;16H[6;16H[6;16H[7;16H[7;16H[7;16H


[9;16H[9;16H[9;16H[10;15H[10;15H[10;15H[11;16H[11;16H[11;16H[12;8H[12;8H[12;8H[13;16H[13;16H[13;16H[14;16H[14;16H[14;16H[15;16H[15;16H[15;16H[16;16H[16;16H[16;16H[17;16H[17;16H[17;16H[18;16H[18;16H[18;16H[19;16H[19;16H[19;16H[20;16H[20;16H[20;16H[21;16H[21;16H[21;16H[22;16H[22;16H[22;16H[23;16H[23;16H[23;16H[24;16H[24;16H[24;16H[25;16H[25;16H[25;16H[26;16H[26;16H[26;16H[27;16H[27;16H[27;16H[28;8H[28;8H[28;8H[29;16H[29;16H[29;16H[30;16H[30;16H[30;16H[31;16H[31;16H[31;16H[32;16H[32;16H[32;16H[33;16H[33;16H[33;16H[34;9H[34;9H[34;9H[35;16H[35;16H[35;16H


[37;16H[37;16H[37;16H[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"username": username,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_devices": total_devices,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"active_devices": active_devices,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_power": result['power'] or 0,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"total_energy": result['energy'] or 0,[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;9H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"User data fetch failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Data unavailable"}), 500[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Main Execution =====[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef safe_shutdown(signum, frame):[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Handle shutdown signals gracefully"""[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.info("Received shutdown signal, terminating...")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsys.exit(0)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef main():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Himport signal[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGINT, safe_shutdown)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsignal.signal(signal.SIGTERM, safe_shutdown)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsubprocess.run([37;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;17Hstderr=subprocess.DEVNULL,[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;17Hstderr=subprocess.DEVNULL,[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17H['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],[37;17Hstderr=subprocess.DEVNULL,[36;16H[?25h[37;16H[37;16H[37;16H[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htimeout=5[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[37;1H
[1;38r[37;13H)[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9Hexcept subprocess.TimeoutExpired:[37;13Hlogger.warning("Process cleanup timed out")[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9Hexcept subprocess.TimeoutExpired:[37;13Hlogger.warning("Process cleanup timed out")[36;16H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;9Hexcept subprocess.TimeoutExpired:[37;13Hlogger.warning("Process cleanup timed out")[36;16H[?25h[37;16H[37;16H[37;16H[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Process cleanup failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn = db_manager.get_connection()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htest_conn.close()[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.critical(f"Startup database test failed: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hsys.exit(1)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Happ.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Fatal startup error: {str(e)}")[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hsys.exit(1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hif __name__ == '__main__':[37;16H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmain()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l
:[?25h[?25l
:[?25h[?25l
:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 489 lines, 18909 bytes written 489 lines, 18909 bytes written 489 lines, 18909 bytes written[23;2t[23;2t[23;1t[23;1t[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m
[?2004l[?1l>
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.pyls -lrth [Kls -lrth [Kls -lrth [Kcd ../../dev/bincd ../../dev/bincd ../../dev/binat  shems_server.logat  shems_server.logat  shems_server.log[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[15Pls -lrth [15Pls -lrth [15Pls -lrth cd ../../data/logscd ../../data/logscd ../../data/logs./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh

[?2004l
[?2004l[?2004lStarting SHEMS deployment at Fri Apr 18 10:35:36 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:35:36 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:35:36 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:35:36 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
No existing simulation process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 10:35:48 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:35:48 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:35:48 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:35:48 PM IST 2025
Grafana not found. Installing...
Grafana not found. Installing...
Grafana not found. Installing...
Grafana not found. Installing...
/usr/sbin/grafana-server
/usr/sbin/grafana-server
/usr/sbin/grafana-server
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Grafana installed successfully
Grafana installed successfully
Grafana installed successfully
Waiting for Grafana to start...
Waiting for Grafana to start...
Waiting for Grafana to start...
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 10:35:55 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:35:55 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:35:55 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:35:55 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server failed to start within 30 seconds
Server failed to start within 30 seconds
Server failed to start within 30 seconds
Server failed to start within 30 seconds
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.pyls -lrth [Kls -lrth [Kls -lrth [Kvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py
[?2004l
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 489 lines, 18909 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 489 lines, 18909 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 489 lines, 18909 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif not all(dashboard_uids.values()):[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif not all(dashboard_uids.values()):[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif not all(dashboard_uids.values()):[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;8H[11;8H[11;8H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;8H[7;8H[7;8H[6;8H[6;8H[6;8H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h




















[9;8H[9;8H[9;8H[10;8H[10;8H[10;8H[?25l if not all(dashboard_uids.values()):[10;45H[K[10;8H[?25h[?25l if not all(dashboard_uids.values()):[10;45H[K[10;8H[?25h[?25l if not all(dashboard_uids.values()):[10;45H[K[10;8H[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 489 lines, 18908 bytes written 489 lines, 18908 bytes written 489 lines, 18908 bytes written[23;2t[23;1t[23;2t[23;1t
[?2004l[?1l>
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.pyls -lrth [Kls -lrth [Kls -lrth [Kcd ../../dev/bincd ../../dev/bincd ../../dev/binat  shems_server.logat  shems_server.logat  shems_server.log[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[15Pls -lrth [15Pls -lrth [15Pls -lrth cd ../../data/logscd ../../data/logscd ../../data/logs[9Pls -lrth [9Pls -lrth [9Pls -lrth tail -f shems_server.logtail -f shems_server.logtail -f shems_server.log[3Pcat [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3Pcat [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3Pcat [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[5Pd ../../dev/bin[5Pd ../../dev/bin[5Pd ../../dev/binat  shems_server.logat  shems_server.logat  shems_server.log[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@tail -f[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[15Pls -lrth [15Pls -lrth [15Pls -lrth cd ../../data/logscd ../../data/logscd ../../data/logs./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 10:38:39 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:38:39 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:38:39 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:38:39 PM IST 2025
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 10:38:51 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:38:51 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:38:51 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:38:51 PM IST 2025
Grafana not found. Installing...
Grafana not found. Installing...
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
/usr/sbin/grafana-server
/usr/sbin/grafana-server
EEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
EEE: E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Data source already exists
Importing Grafana dashboards...
Data source already exists
Data source already exists
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 10:38:58 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:38:58 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:38:58 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:38:58 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server failed to start within 30 seconds
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m Server failed to start within 30 seconds
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m Server failed to start within 30 seconds
Server failed to start within 30 seconds
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[K[K[Kpppyyyttthhhooonnn   ---mmm
[?2004l
[?2004l
[?2004lArgument expected for the -m option
usage: python [option] ... [-c cmd | -m mod | file | -] [arg] ...
Argument expected for the -m option
Try `python -h' for more information.
Argument expected for the -m option
usage: python [option] ... [-c cmd | -m mod | file | -] [arg] ...
Try `python -h' for more information.
usage: python [option] ... [-c cmd | -m mod | file | -] [arg] ...
Try `python -h' for more information.
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 22:38 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 22:38 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 22:38 shems_monitoring_server.py
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m pppyyyttthhhooonnn   ---   [K[K[Kmmm   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lTraceback (most recent call last):
Traceback (most recent call last):
  File "<frozen runpy>", line 189, in _run_module_as_main
Traceback (most recent call last):
  File "<frozen runpy>", line 112, in _get_module_details
  File "<frozen runpy>", line 189, in _run_module_as_main
  File "<frozen runpy>", line 112, in _get_module_details
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 397
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 397
  File "<frozen runpy>", line 189, in _run_module_as_main
  File "<frozen runpy>", line 112, in _get_module_details
    if not all(dashboard_uids.values()):
    if not all(dashboard_uids.values()):
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 397
TabError: inconsistent use of tabs and spaces in indentation
TabError: inconsistent use of tabs and spaces in indentation
    if not all(dashboard_uids.values()):
TabError: inconsistent use of tabs and spaces in indentation
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[22;1t[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 489 lines, 18908 bytes 489 lines, 18908 bytes 489 lines, 18908 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H}[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;8H[33;8H[33;8H[32;8H[32;8H[32;8H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H


[32;8H[32;8H[32;8H[33;8H[33;8H[33;8H





[34;1H[34;1H[34;1H[33;8H[33;8H[33;8H[32;8H[32;8H[32;8H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[7C[?25h[?25l[7C[?25h[?25l[7C[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;68H[K[28;8H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;68H[K[28;8H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;68H[K[28;8H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l         "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;9H[?25h[?25l         "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;9H[?25h[?25l         "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;9H[?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?2004h[>4;2m[?25l[8C"overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;68H[K[28;8H[?25h[?4m[?2004h[>4;2m[?25l[8C"overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;68H[K[28;8H[?25h[?4m[?2004h[>4;2m[?25l[8C"overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;68H[K[28;8H[?25h[?4m[27;8H[27;8H[27;8H[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[27;9H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[27;9H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[27;9H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;9H}[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;9H}[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;9H}[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[27;9H[?25h[?25l[27;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[27;9H[?25h[?25l[27;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[27;9H[?25h[?25l[27;37r[37;1H
[1;38r[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[27;17H[?25h[?25l[27;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[27;17H[?25h[28;8H[28;8H[28;8H[27;17H[27;17H[27;17H[?25l[27;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[27;8H[?25h[?25l[27;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[27;8H[?25h[?25l[27;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[27;8H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[27;1H[27;1H[27;1H                  [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l [?25h[?25l [?25h[?25l [?25h[?25ldashboard_uids = {
    "overview": get_dashboard_uid_from_title("SHEMS Overview"),
    "power": get_dashboard_uid_from_title("Power Analysis"),
    "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;63H[K[31;5H"devices": get_dashboard_uid_from_title("Device Details")[31;62H[K[32;1H}[32;13H[K[33;1Hif not all(dashboard_uids.values()):[33;37H[K[34;5Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")
    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[37;5H[K[36;1H[?25h[?25ldashboard_uids = {
    "overview": get_dashboard_uid_from_title("SHEMS Overview"),
    "power": get_dashboard_uid_from_title("Power Analysis"),
    "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;63H[K[31;5H"devices": get_dashboard_uid_from_title("Device Details")[31;62H[K[32;1H}[32;13H[K[33;1Hif not all(dashboard_uids.values()):[33;37H[K[34;5Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")
    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[37;5H[K[36;1H[?25h[?25ldashboard_uids = {
    "overview": get_dashboard_uid_from_title("SHEMS Overview"),
    "power": get_dashboard_uid_from_title("Power Analysis"),
    "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;63H[K[31;5H"devices": get_dashboard_uid_from_title("Device Details")[31;62H[K[32;1H}[32;13H[K[33;1Hif not all(dashboard_uids.values()):[33;37H[K[34;5Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")
    return render_template("error.html", message="Dashboards are not ready. Please try again later.")[37;5H[K[36;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[31;4H[31;4H[31;4H[30;4H[30;4H[30;4H[29;4H[29;4H[29;4H[28;4H[28;4H[28;4H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),     [?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),     [?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),     [?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;7H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;7H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;7H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;8H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;8H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;8H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;9H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;9H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[28;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[29;8H[29;8H[29;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "power": get_dashboard_uid_from_title("Power Analysis"),     [?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),     [?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),     [?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;7H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;7H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;7H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;8H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;8H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;8H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;9H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;9H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[29;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[30;8H[30;8H[30;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),     [?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),     [?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),     [?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;7H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;7H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;7H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;8H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;8H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;8H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;9H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;9H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[30;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[31;8H[31;8H[31;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "devices": get_dashboard_uid_from_title("Device Details")     [?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")     [?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")     [?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;7H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;7H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;7H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;8H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;8H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;8H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;9H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;9H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[31;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m
    
    
    [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?25l }[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[33;8H[33;8H[33;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l if not all(dashboard_uids.values()): [?25h[?25l if not all(dashboard_uids.values()): [?25h[?25l if not all(dashboard_uids.values()): [?25h[?25l if not all(dashboard_uids.values()):  [?25h[?25l if not all(dashboard_uids.values()):  [?25h[?25l if not all(dashboard_uids.values()):  [?25h[?25l if not all(dashboard_uids.values()):   [?25h[?25l if not all(dashboard_uids.values()):   [?25h[?25l if not all(dashboard_uids.values()):   [?25h[?25l if not all(dashboard_uids.values()):    [?25h[?25l if not all(dashboard_uids.values()):    [?25h[?25l if not all(dashboard_uids.values()):    [?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m
   
   
      [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")     [?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")     [?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")     [?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;7H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;7H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;7H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;8H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;8H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;8H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;9H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;9H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[34;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[35;8H[35;8H[35;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")     [?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")     [?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")     [?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;7H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;7H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;7H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;8H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;8H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;8H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;9H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;9H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[35;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m





[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[37;8H[?25h[36;8H[36;8H[36;8H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;8H[33;8H[33;8H[32;8H[32;8H[32;8H[31;8H[31;8H[31;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l if not all(dashboard_uids.values()):     [?25h[?25l if not all(dashboard_uids.values()):     [?25h[?25l if not all(dashboard_uids.values()):     [?25h[?25l if not all(dashboard_uids.values()):[31;7H[?25h[?25l if not all(dashboard_uids.values()):[31;7H[?25h[?25l if not all(dashboard_uids.values()):[31;7H[?25h[?25l if not all(dashboard_uids.values()):[31;8H[?25h[?25l if not all(dashboard_uids.values()):[31;8H[?25h[?25l if not all(dashboard_uids.values()):[31;8H[?25h[?25l if not all(dashboard_uids.values()):[31;9H[?25h[?25l if not all(dashboard_uids.values()):[31;9H[?25h[?25l if not all(dashboard_uids.values()):[31;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[32;8H[32;8H[32;8H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;10H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;10H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;10H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;11H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;11H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;11H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;12H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;12H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;12H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;13H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;13H[?25h[?25l logger.error(f"Dashboard UIDs missing: {dashboard_uids}")[32;13H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[33;12H[33;12H[33;12H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;10H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;10H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;10H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;11H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;11H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;11H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;12H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;12H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;12H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;13H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;13H[?25h[?25l return render_template("error.html", message="Dashboards are not ready. Please try again later.")[33;13H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[32;12H[32;12H[32;12H[31;12H[31;12H[31;12H[30;9H[30;9H[30;9H[29;12H[29;12H[29;12H[28;12H[28;12H[28;12H[27;12H[27;12H[27;12H[26;12H[26;12H[26;12H[25;12H[25;12H[25;12H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l dashboard_uids = {[25;9H[?25h[?25l dashboard_uids = {[25;9H[?25h[?25l dashboard_uids = {[25;9H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[26;8H[26;8H[26;8H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;10H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;10H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;10H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;11H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;11H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;11H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;12H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;12H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;12H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;13H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;13H[?25h[?25l "overview": get_dashboard_uid_from_title("SHEMS Overview"),[26;13H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[27;12H[27;12H[27;12H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;10H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;10H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;10H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;11H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;11H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;11H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;12H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;12H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;12H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;13H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;13H[?25h[?25l "power": get_dashboard_uid_from_title("Power Analysis"),[27;13H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[28;12H[28;12H[28;12H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;10H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;10H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;10H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;11H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;11H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;11H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;12H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;12H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;12H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;13H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;13H[?25h[?25l "energy": get_dashboard_uid_from_title("Energy Analysis"),[28;13H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[29;12H[29;12H[29;12H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;10H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;10H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;10H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;11H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;11H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;11H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;12H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;12H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;12H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;13H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;13H[?25h[?25l "devices": get_dashboard_uid_from_title("Device Details")[29;13H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[30;9H[30;9H[30;9H[31;12H[31;12H[31;12H[32;12H[32;12H[32;12H[33;12H[33;12H[33;12H





[36;12H[36;12H[36;12H[37;12H[37;12H[37;12H[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;12H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[37;12H[?25h[?25l
:[?25h[?25l
:[?25h[?25l
:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 490 lines, 18951 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 490 lines, 18951 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m 490 lines, 18951 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[7@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[7@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -lrth [Kls -lrth [Kls -lrth [Kpython -mpython -mpython -m./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 10:42:54 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:42:54 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:42:54 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 10:42:54 PM IST 2025
Checking for existing processes...
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Installing required packages...
Installing required packages...
Configuring MariaDB...
Configuring MariaDB...
Configuring MariaDB...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Setting up Python environment...
Setting up Python environment...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 10:43:07 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Starting Grafana deployment at Fri Apr 18 10:43:07 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Starting Grafana deployment at Fri Apr 18 10:43:07 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Starting Grafana deployment at Fri Apr 18 10:43:07 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.

E: The list of sources could not be read.

E: The list of sources could not be read.

E: The list of sources could not be read.
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.

E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.

Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Grafana installed successfully
Grafana installed successfully
Grafana installed successfully
Waiting for Grafana to start...
Waiting for Grafana to start...
Waiting for Grafana to start...
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 10:43:14 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:43:14 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:43:14 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:43:14 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Starting monitoring server...
Waiting for server to start...
Starting monitoring server...
Waiting for server to start...
Starting monitoring server...
Waiting for server to start...



[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m llllll[K[K[Ksss   ---lll
[?2004l
[?2004l
[?2004ltotal 56
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
-rwxr-xr-x 1 shems-mis shems-mis  3731 Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  3437 Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 18951 Apr 18 22:42 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis 11054 Apr 18 21:40 shems_monitoring_server.py_bkp2
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
total 56
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
-rwxr-xr-x 1 shems-mis shems-mis  3731 Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  3437 Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 18951 Apr 18 22:42 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis 11054 Apr 18 21:40 shems_monitoring_server.py_bkp2
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
total 56
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
-rwxr-xr-x 1 shems-mis shems-mis  3731 Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  3437 Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 18951 Apr 18 22:42 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis 11054 Apr 18 21:40 shems_monitoring_server.py_bkp2
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m pppyyyttthhhooonnn   ---mmm   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lTraceback (most recent call last):
Traceback (most recent call last):
  File "<frozen runpy>", line 189, in _run_module_as_main
Traceback (most recent call last):
  File "<frozen runpy>", line 112, in _get_module_details
  File "<frozen runpy>", line 189, in _run_module_as_main
  File "<frozen runpy>", line 189, in _run_module_as_main
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 402
  File "<frozen runpy>", line 112, in _get_module_details
  File "<frozen runpy>", line 112, in _get_module_details
    dashboards = {
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 402
TabError: inconsistent use of tabs and spaces in indentation
  File "/app/smarthome/dev/bin/shems_monitoring_server.py", line 402
    dashboards = {
TabError: inconsistent use of tabs and spaces in indentation
    dashboards = {
TabError: inconsistent use of tabs and spaces in indentation
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccaaattt   ---nnn   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l     1	#!/usr/bin/env python3
     2	
     3	import os
     4	import sys
     5	import time
     6	import subprocess
     7	import logging
     8	from datetime import datetime, timedelta
     9	from functools import wraps
    10	from werkzeug.security import generate_password_hash, check_password_hash
    11	import secrets
    12	import json
    13	import pymysql
    14	from pymysql.cursors import DictCursor
    15	from pymysql import MySQLError
    16	from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
    17	
    18	# ===== Get Current PID =====
    19	current_pid = os.getpid()
    20	
    21	# ===== Configuration =====
    22	HTML_DIR = '/app/smarthome/dev/templates/'
    23	SCRIPT_DIR = '/app/smarthome/dev/bin'
    24	DB_DIR = '/app/smarthome/data/'
    25	LOG_DIR = '/app/smarthome/data/logs/'
    26	DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
    27	GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")
    28	
    29	# Ensure directories exist
    30	os.makedirs(HTML_DIR, exist_ok=True)
    31	os.makedirs(SCRIPT_DIR, exist_ok=True)
    32	os.makedirs(DB_DIR, exist_ok=True)
    33	os.makedirs(LOG_DIR, exist_ok=True)
    34	
    35	# ===== Logging Configuration =====
    36	logging.basicConfig(
    37	    level=logging.DEBUG,
    38	    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    39	    handlers=[
    40	        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
    41	        logging.StreamHandler()
    42	    ]
    43	)
    44	logger = logging.getLogger('SHEMS-Server')
    45	
    46	# ===== Application Setup =====
    47	app = Flask(__name__, template_folder=HTML_DIR)
    48	app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
    49	app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
    50	app.config['SESSION_COOKIE_SECURE'] = True
    51	app.config['SESSION_COOKIE_HTTPONLY'] = True
    52	app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'
    53	
    54	# ===== Database Configuration =====
    55	class DatabaseManager:
    56	    MAX_RETRIES = 3
    57	    RETRY_DELAY = 2
    58	    
    59	    def __init__(self):
    60	        self.db_user = os.getenv('DB_USER', 'shems_mis')
    61	        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
    62	        self.db_name = os.getenv('DB_NAME', 'shems_db')
    63	        
    64	    def get_connection(self):
    65	        """Get a database connection with retry logic"""
    66	        attempts = 0
    67	        last_error = None
    68	        
    69	        while attempts < self.MAX_RETRIES:
    70	            try:
    71	                conn = pymysql.connect(
    72	                    host='localhost',
    73	                    user=self.db_user,
    74	                    password=self.db_pass,
    75	                    database=self.db_name,
    76	                    cursorclass=DictCursor,
    77	                    connect_timeout=5,
    78	                    autocommit=False
    79	                )
    80	                logger.info("Database connection established")
    81	                return conn
    82	            except MySQLError as e:
    83	                last_error = e
    84	                attempts += 1
    85	                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
    86	                time.sleep(self.RETRY_DELAY)
    87	        
    88	        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
    89	        raise ConnectionError(f"Could not connect to database: {str(last_error)}")
    90	
    91	db_manager = DatabaseManager()
    92	
    93	# ===== Helper Functions =====
    94	def get_pi_ip():
    95	    """Get Raspberry Pi IP address with fallback"""
    96	    try:
    97	        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
    98	        return ip if ip else '127.0.0.1'
    99	    except:
   100	        return '127.0.0.1'
   101	
   102	def is_service_running(service_name):
   103	    """Check if a systemd service is running"""
   104	    try:
   105	        result = subprocess.run(
   106	            ['systemctl', 'is-active', service_name],
   107	            stdout=subprocess.PIPE,
   108	            stderr=subprocess.PIPE,
   109	            text=True
   110	        )
   111	        return result.stdout.strip() == 'active'
   112	    except Exception as e:
   113	        logger.error(f"Service check failed for {service_name}: {str(e)}")
   114	        return False
   115	
   116	def get_dashboard_uid_from_title(title):
   117	    try:
   118	        response = subprocess.check_output([
   119	            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
   120	            "-H", "Content-Type: application/json",
   121	            "-u", "admin:admin"
   122	        ])
   123	        dashboards = json.loads(response)
   124	        for dash in dashboards:
   125	            if dash.get("title", "").strip().lower() == title.strip().lower():
   126	                uid = dash.get("uid")
   127	                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
   128	                return uid
   129	        logger.warning(f"No dashboard matched title '{title}'")
   130	    except Exception as e:
   131	        logger.error(f"Error fetching dashboard UID for '{title}': {e}")
   132	    return None
   133	
   134	def grafana_dashboard_url(uid):
   135	    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None
   136	
   137	def validate_submission(form_data):
   138	    """Validate user submission data"""
   139	    required_fields = ['username', 'password', 'numDevices', 'numDays']
   140	    errors = []
   141	    
   142	    # Check required fields
   143	    for field in required_fields:
   144	        if field not in form_data or not form_data[field]:
   145	            errors.append(f"Missing required field: {field}")
   146	    
   147	    # Validate numeric fields
   148	    try:
   149	        num_devices = int(form_data.get('numDevices', 0))
   150	        if num_devices <= 0:
   151	            errors.append("Number of devices must be positive")
   152	    except ValueError:
   153	        errors.append("Invalid number of devices")
   154	    
   155	    try:
   156	        num_days = int(form_data.get('numDays', 0))
   157	        if num_days <= 0:
   158	            errors.append("Number of days must be positive")
   159	    except ValueError:
   160	        errors.append("Invalid number of days")
   161	    
   162	    return errors if errors else None
   163	
   164	def setup_grafana_dashboards(user_id):
   165	    """Import Grafana dashboards after data exists and ensure dashboards exist"""
   166	    max_retries = 5
   167	    retry_delay = 10
   168	    dashboards_expected = {
   169	        "SHEMS Overview": "overview-dashboard.json",
   170	        "Power Analysis": "power-analysis.json",
   171	        "Energy Analysis": "energy-analysis.json",
   172	        "Device Details": "device-details.json"
   173	    }
   174	    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"
   175	
   176	    for attempt in range(max_retries):
   177	        try:
   178	            with db_manager.get_connection() as conn:
   179	                with conn.cursor() as cursor:
   180	                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
   181	                    if cursor.fetchone()["COUNT(*)"] > 0:
   182	                        logger.info("Device data available, verifying Grafana dashboards...")
   183	
   184	                        for title, filename in dashboards_expected.items():
   185	                            uid = get_dashboard_uid_from_title(title)
   186	                            if uid:
   187	                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
   188	                                continue
   189	
   190	                            logger.warning(f"Dashboard '{title}' missing, importing...")
   191	                            dashboard_path = os     1	#!/usr/bin/env python3
     2	
     3	import os
     4	import sys
     5	import time
     6	import subprocess
     7	import logging
     8	from datetime import datetime, timedelta
     9	from functools import wraps
    10	from werkzeug.security import generate_password_hash, check_password_hash
    11	import secrets
    12	import json
    13	import pymysql
    14	from pymysql.cursors import DictCursor
    15	from pymysql import MySQLError
    16	from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
    17	
    18	# ===== Get Current PID =====
    19	current_pid = os.getpid()
    20	
    21	# ===== Configuration =====
    22	HTML_DIR = '/app/smarthome/dev/templates/'
    23	SCRIPT_DIR = '/app/smarthome/dev/bin'
    24	DB_DIR = '/app/smarthome/data/'
    25	LOG_DIR = '/app/smarthome/data/logs/'
    26	DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
    27	GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")
    28	
    29	# Ensure directories exist
    30	os.makedirs(HTML_DIR, exist_ok=True)
    31	os.makedirs(SCRIPT_DIR, exist_ok=True)
    32	os.makedirs(DB_DIR, exist_ok=True)
    33	os.makedirs(LOG_DIR, exist_ok=True)
    34	
    35	# ===== Logging Configuration =====
    36	logging.basicConfig(
    37	    level=logging.DEBUG,
    38	    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    39	    handlers=[
    40	        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
    41	        logging.StreamHandler()
    42	    ]
    43	)
    44	logger = logging.getLogger('SHEMS-Server')
    45	
    46	# ===== Application Setup =====
    47	app = Flask(__name__, template_folder=HTML_DIR)
    48	app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
    49	app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
    50	app.config['SESSION_COOKIE_SECURE'] = True
    51	app.config['SESSION_COOKIE_HTTPONLY'] = True
    52	app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'
    53	
    54	# ===== Database Configuration =====
    55	class DatabaseManager:
    56	    MAX_RETRIES = 3
    57	    RETRY_DELAY = 2
    58	    
    59	    def __init__(self):
    60	        self.db_user = os.getenv('DB_USER', 'shems_mis')
    61	        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
    62	        self.db_name = os.getenv('DB_NAME', 'shems_db')
    63	        
    64	    def get_connection(self):
    65	        """Get a database connection with retry logic"""
    66	        attempts = 0
    67	        last_error = None
    68	        
    69	        while attempts < self.MAX_RETRIES:
    70	            try:
    71	                conn = pymysql.connect(
    72	                    host='localhost',
    73	                    user=self.db_user,
    74	                    password=self.db_pass,
    75	                    database=self.db_name,
    76	                    cursorclass=DictCursor,
    77	                    connect_timeout=5,
    78	                    autocommit=False
    79	                )
    80	                logger.info("Database connection established")
    81	                return conn
    82	            except MySQLError as e:
    83	                last_error = e
    84	                attempts += 1
    85	                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
    86	                time.sleep(self.RETRY_DELAY)
    87	        
    88	        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
    89	        raise ConnectionError(f"Could not connect to database: {str(last_error)}")
    90	
    91	db_manager = DatabaseManager()
    92	
    93	# ===== Helper Functions =====
    94	def get_pi_ip():
    95	    """Get Raspberry Pi IP address with fallback"""
    96	    try:
    97	        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
    98	        return ip if ip else '127.0.0.1'
    99	    except:
   100	        return '127.0.0.1'
   101	
   102	def is_service_running(service_name):
   103	    """Check if a systemd service is running"""
   104	    try:
   105	        result = subprocess.run(
   106	            ['systemctl', 'is-active', service_name],
   107	            stdout=subprocess.PIPE,
   108	            stderr=subprocess.PIPE,
   109	            text=True
   110	        )
   111	        return result.stdout.strip() == 'active'
   112	    except Exception as e:
   113	        logger.error(f"Service check failed for {service_name}: {str(e)}")
   114	        return False
   115	
   116	def get_dashboard_uid_from_title(title):
   117	    try:
   118	        response = subprocess.check_output([
   119	            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
   120	            "-H", "Content-Type: application/json",
   121	            "-u", "admin:admin"
   122	        ])
   123	        dashboards = json.loads(response)
   124	        for dash in dashboards:
   125	            if dash.get("title", "").strip().lower() == title.strip().lower():
   126	                uid = dash.get("uid")
   127	                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
   128	                return uid
   129	        logger.warning(f"No dashboard matched title '{title}'")
   130	    except Exception as e:
   131	        logger.error(f"Error fetching dashboard UID for '{title}': {e}")
   132	    return None
   133	
   134	def grafana_dashboard_url(uid):
   135	    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None
   136	
   137	def validate_submission(form_data):
   138	    """Validate user submission data"""
   139	    required_fields = ['username', 'password', 'numDevices', 'numDays']
   140	    errors = []
   141	    
   142	    # Check required fields
   143	    for field in required_fields:
   144	        if field not in form_data or not form_data[field]:
   145	            errors.append(f"Missing required field: {field}")
   146	    
   147	    # Validate numeric fields
   148	    try:
   149	        num_devices = int(form_data.get('numDevices', 0))
   150	        if num_devices <= 0:
   151	            errors.append("Number of devices must be positive")
   152	    except ValueError:
   153	        errors.append("Invalid number of devices")
   154	    
   155	    try:
   156	        num_days = int(form_data.get('numDays', 0))
   157	        if num_days <= 0:
   158	            errors.append("Number of days must be positive")
   159	    except ValueError:
   160	        errors.append("Invalid number of days")
   161	    
   162	    return errors if errors else None
   163	
   164	def setup_grafana_dashboards(user_id):
   165	    """Import Grafana dashboards after data exists and ensure dashboards exist"""
   166	    max_retries = 5
   167	    retry_delay = 10
   168	    dashboards_expected = {
   169	        "SHEMS Overview": "overview-dashboard.json",
   170	        "Power Analysis": "power-analysis.json",
   171	        "Energy Analysis": "energy-analysis.json",
   172	        "Device Details": "device-details.json"
   173	    }
   174	    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"
   175	
   176	    for attempt in range(max_retries):
   177	        try:
   178	            with db_manager.get_connection() as conn:
   179	                with conn.cursor() as cursor:
   180	                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
   181	                    if cursor.fetchone()["COUNT(*)"] > 0:
   182	                        logger.info("Device data available, verifying Grafana dashboards...")
   183	
   184	                        for title, filename in dashboards_expected.items():
   185	                            uid = get_dashboard_uid_from_title(title)
   186	                            if uid:
   187	                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
   188	                                continue
   189	
   190	                            logger.warning(f"Dashboard '{title}' missing, importing...")
   191	                            dashboard_path = os.path.join(dashboard_dir, filename)
   192	                            if not os.path.exists(dashboard_path):
   193	                                logger.error(f"Dashboard file missing: {dashboard_path}")
   194	                                continue
   195	
   196	                            with open(dashboard_path, 'r') as f:
   197	                                dashboard_json = json.load(f)
   198	
   199	                            import_payload = {
   200	                                "dashboard": dashboard_json,
   201	                                "overwrite": True,
   202	                                "folderId": 0
   203	                            }
   204	
   205	                            result = subprocess.run(
   206	                                ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",
   207	                                 "-H", "Content-Type: application/json",
   208	                                 "-u", "admin:admin",
   209	                                 "-d", json.dumps(import_payload)],
   210	                                capture_output=True, text=True
   211	                            )
   212	
   213	                            if '"status":"success"' in result.stdout:
   214	                                logger.info(f"Successfully imported '{title}'")
   215	                            else:
   216	                                logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")
   217	
   218	                        return True
   219	
   220	                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
   221	                    time.sleep(retry_delay)
   222	
   223	        except Exception as e:
   224	            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
   225	            time.sleep(retry_delay)
   226	
   227	    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
   228	    return False
   229	
   230	def check_grafana_dashboards_exist():
   231	    """Check if dashboards exist using Grafana API"""
   232	    try:
   233	        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
   234	        response = requests.get(
   235	            grafana_url,
   236	            auth=('admin', 'admin'),
   237	            timeout=5
   238	        )
   239	        return response.status_code == 200
   240	    except Exception as e:
   241	        logger.warning(f"Grafana API check failed: {str(e)}")
   242	        return False
   243	
   244	def verify_dashboard_data(user_id):
   245	    """Check if data exists for dashboard rendering"""
   246	    try:
   247	        with db_manager.get_connection() as conn:
   248	            with conn.cursor() as cursor:
   249	                # Check if user has any device data
   250	                cursor.execute(
   251	                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
   252	                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
   253	                    (user_id,)
   254	                )
   255	                return cursor.fetchone()[0] > 0
   256	    except Exception as e:
   257	        logger.error(f"Data verification failed: {str(e)}")
   258	        return False
   259	
   260	# ===== Decorators =====
   261	def login_required(f):
   262	    """Decorator to ensure user is logged in"""
   263	    @wraps(f)
   264	    def decorated_function(*args, **kwargs):
   265	        if 'user_id' not in session:
   266	            logger.warning("Unauthorized access attempt")
   267	            return redirect(url_for('index'))
   268	        return f(*args, **kwargs)
   269	    return decorated_function
   270	
   271	def handle_db_errors(f):
   272	    @wraps(f)
   273	    def decorated_function(*args, **kwargs):
   274	        try:
   275	            return f(*args, **kwargs)
   276	        except MySQLError as e:
   277	            logger.error(f"Database error in {f.__name__}: {str(e)}")
   278	            abort(500, description="Database operation failed")
   279	        except Exception as e:
   280	            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
   281	            abort(500)
   282	    return decorated_function
   283	
   284	# ===== Routes =====
   285	@app.route('/')
   286	def index():
   287	    try:
   288	        if 'user_id' in session:
   289	            return redirect(url_for('dashboard'))
   290	        return render_template('shems_dashboard_input.html')
   291	    except Exception as e:
   292	        logger.error(f"Index route error: {str(e)}")
   293	        return render_template('error.html'), 500
   294	
   295	@app.route('/api/access-points')
   296	def access_points():
   297	    pi_ip = get_pi_ip()
   298	    access_points = [f"http://{pi_ip}:5000"]
   299	    
   300	    try:
   301	        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
   302	        if tailscale_ip:
   303	            access_points.append(f"http://{tailscale_ip}:5000")
   304	    except:
   305	        pass
   306	        
   307	    return jsonify({
   308	        'access_points': access_points,
   309	        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
   310	    })
   311	
   312	@app.route('/submit', methods=['POST'])
   313	@handle_db_errors
   314	def submit():
   315	    try:
   316	        # Validate input
   317	        if errors := validate_submission(request.form):
   318	            logger.warning(f"Invalid submission: {errors}")
   319	            return jsonify({"errors": errors}), 400
   320	
   321	        username = request.form['username']
   322	        password = request.form['password']
   323	        num_devices = int(request.form['numDevices'])
   324	        num_days = int(request.form['numDays'])
   325	
   326	        with db_manager.get_connection() as conn:
   327	            with conn.cursor() as cursor:
   328	                # Check existing user
   329	                cursor.execute(
   330	                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
   331	                    (username,)
   332	                )
   333	                user = cursor.fetchone()
   334	
   335	                if user:
   336	                    if not check_password_hash(user['PasswordHash'], password):
   337	                        logger.warning("Invalid password attempt")
   338	                        return jsonify({"error": "Invalid credentials"}), 401
   339	                    user_id = user['UserId']
   340	                else:
   341	                    # Create new user
   342	                    password_hash = generate_password_hash(password)
   343	                    cursor.execute(
   344	                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
   345	                        (username, password_hash)
   346	                    )
   347	                    user_id = cursor.lastrowid
   348	                    conn.commit()
   349	                    logger.info(f"Created new user {user_id}")
   350	
   351	                # Store session
   352	                session.permanent = True
   353	                session['user_id'] = user_id
   354	                session['username'] = username
   355	                logger.debug(f"Session created for {user_id}")
   356	
   357	                # Start data simulation
   358	                try:
   359	                    subprocess.Popen([
   360	                        sys.executable,
   361	                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
   362	                        str(user_id),
   363	                        str(num_devices),
   364	                        str(num_days)
   365	                    ])
   366	                    logger.info(f"Started simulation for user {user_id}")
   367	                except Exception as e:
   368	                    logger.error(f"Simulation startup failed: {str(e)}")
   369	                    return jsonify({"error": "Data generation failed"}), 500
   370	
   371	               .path.join(dashboard_dir, filename)
   192	                            if not os.path.exists(dashboard_path):
   193	                                logger.error(f"Dashboard file missing: {dashboard_path}")
   194	                                continue
   195	
   196	                            with open(dashboard_path, 'r') as f:
   197	                                dashboard_json = json.load(f)
   198	
   199	                            import_payload = {
   200	                                "dashboard": dashboard_json,
   201	                                "overwrite": True,
   202	                                "folderId": 0
   203	                            }
   204	
   205	                            result = subprocess.run(
   206	                                ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",
   207	                                 "-H", "Content-Type: application/json",
   208	                                 "-u", "admin:admin",
   209	                                 "-d", json.dumps(import_payload)],
   210	                                capture_output=True, text=True
   211	                            )
   212	
   213	                            if '"status":"success"' in result.stdout:
   214	                                logger.info(f"Successfully imported '{title}'")
   215	                            else:
   216	                                logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")
   217	
   218	                        return True
   219	
   220	                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
   221	                    time.sleep(retry_delay)
   222	
   223	        except Exception as e:
   224	            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
   225	            time.sleep(retry_delay)
   226	
   227	    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
   228	    return False
   229	
   230	def check_grafana_dashboards_exist():
   231	    """Check if dashboards exist using Grafana API"""
   232	    try:
   233	        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
   234	        response = requests.get(
   235	            grafana_url,
   236	            auth=('admin', 'admin'),
   237	            timeout=5
   238	        )
   239	        return response.status_code == 200
   240	    except Exception as e:
   241	        logger.warning(f"Grafana API check failed: {str(e)}")
   242	        return False
   243	
   244	def verify_dashboard_data(user_id):
   245	    """Check if data exists for dashboard rendering"""
   246	    try:
   247	        with db_manager.get_connection() as conn:
   248	            with conn.cursor() as cursor:
   249	                # Check if user has any device data
   250	                cursor.execute(
   251	                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
   252	                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
   253	                    (user_id,)
   254	                )
   255	                return cursor.fetchone()[0] > 0
   256	    except Exception as e:
   257	        logger.error(f"Data verification failed: {str(e)}")
   258	        return False
   259	
   260	# ===== Decorators =====
   261	def login_required(f):
   262	    """Decorator to ensure user is logged in"""
   263	    @wraps(f)
   264	    def decorated_function(*args, **kwargs):
   265	        if 'user_id' not in session:
   266	            logger.warning("Unauthorized access attempt")
   267	            return redirect(url_for('index'))
   268	        return f(*args, **kwargs)
   269	    return decorated_function
   270	
   271	def handle_db_errors(f):
   272	    @wraps(f)
   273	    def decorated_function(*args, **kwargs):
   274	        try:
   275	            return f(*args, **kwargs)
   276	        except MySQLError as e:
   277	            logger.error(f"Database error in {f.__name__}: {str(e)}")
   278	            abort(500, description="Database operation failed")
   279	        except Exception as e:
   280	            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
   281	            abort(500)
   282	    return decorated_function
   283	
   284	# ===== Routes =====
   285	@app.route('/')
   286	def index():
   287	    try:
   288	        if 'user_id' in session:
   289	            return redirect(url_for('dashboard'))
   290	        return render_template('shems_dashboard_input.html')
   291	    except Exception as e:
   292	        logger.error(f"Index route error: {str(e)}")
   293	        return render_template('error.html'), 500
   294	
   295	@app.route('/api/access-points')
   296	def access_points():
   297	    pi_ip = get_pi_ip()
   298	    access_points = [f"http://{pi_ip}:5000"]
   299	    
   300	    try:
   301	        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
   302	        if tailscale_ip:
   303	            access_points.append(f"http://{tailscale_ip}:5000")
   304	    except:
   305	        pass
   306	        
   307	    return jsonify({
   308	        'access_points': access_points,
   309	        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
   310	    })
   311	
   312	@app.route('/submit', methods=['POST'])
   313	@handle_db_errors
   314	def submit():
   315	    try:
   316	        # Validate input
   317	        if errors := validate_submission(request.form):
   318	            logger.warning(f"Invalid submission: {errors}")
   319	            return jsonify({"errors": errors}), 400
   320	
   321	        username = request.form['username']
   322	        password = request.form['password']
   323	        num_devices = int(request.form['numDevices'])
   324	        num_days = int(request.form['numDays'])
   325	
   326	        with db_manager.get_connection() as conn:
   327	            with conn.cursor() as cursor:
   328	                # Check existing user
   329	                cursor.execute(
   330	                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
   331	                    (username,)
   332	                )
   333	                user = cursor.fetchone()
   334	
   335	                if user:
   336	                    if not check_password_hash(user['PasswordHash'], password):
   337	                        logger.warning("Invalid password attempt")
   338	                        return jsonify({"error": "Invalid credentials"}), 401
   339	                    user_id = user['UserId']
   340	                else:
   341	                    # Create new user
   342	                    password_hash = generate_password_hash(password)
   343	                    cursor.execute(
   344	                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
   345	                        (username, password_hash)
   346	                    )
   347	                    user_id = cursor.lastrowid
   348	                    conn.commit()
   349	                    logger.info(f"Created new user {user_id}")
   350	
   351	                # Store session
   352	                session.permanent = True
   353	                session['user_id'] = user_id
   354	                session['username'] = username
   355	                logger.debug(f"Session created for {user_id}")
   356	
   357	                # Start data simulation
   358	                try:
   359	                    subprocess.Popen([
   360	                        sys.executable,
   361	                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
   362	                        str(user_id),
   363	                        str(num_devices),
   364	                        str(num_days)
   365	                    ])
   366	                    logger.info(f"Started simulation for user {user_id}")
   367	                except Exception as e:
   368	                    logger.error(f"Simulation startup failed: {str(e)}")
   369	                    return jsonify({"error": "Data generation failed"}), 500
   370	
   371	                # Setup dashboards after delay
   372	                time.sleep(DASHBOARD_IMPORT_DELAY)
   373	                setup_grafana_dashboards(user_id)
   374	
   375	                return redirect(url_for('dashboard'))
   376	
   377	    except Exception as e:
   378	        logger.critical(f"Submit error: {str(e)}", exc_info=True)
   379	        return jsonify({"error": "Internal server error"}), 500
   380	
   381	@app.route('/dashboard')
   382	@login_required
   383	def dashboard():
   384	    try:
   385	        user_id = session['user_id']
   386	        with db_manager.get_connection() as conn:
   387	            with conn.cursor() as cursor:
   388	                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
   389	                if cursor.fetchone()['count'] == 0:
   390	                    return render_template('error.html', message="No device data found for your account.")
   391	        dashboard_uids = {
   392	            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
   393	            "power": get_dashboard_uid_from_title("Power Analysis"),
   394	            "energy": get_dashboard_uid_from_title("Energy Analysis"),
   395	            "devices": get_dashboard_uid_from_title("Device Details")
   396	        }
   397	        if not all(dashboard_uids.values()):
   398	            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
   399	            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
   400	 
   401	 
   402		dashboards = {
   403	            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
   404	            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
   405	            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
   406	            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
   407	        }
   408	        return render_template('shems_dashboard_visuals.html', **dashboards)
   409	
   410	    except Exception as e:
   411	        logger.error(f"Dashboard error: {str(e)}")
   412	        return render_template('error.html', message="Dashboard failed to load."), 500
   413	
   414	@app.route('/logout', methods=['POST'])
   415	def logout():
   416	    session.clear()
   417	    return redirect(url_for('index'))
   418	
   419	@app.route('/api/user-data')
   420	@login_required
   421	def api_user_data():
   422	    try:
   423	        user_id = session['user_id']
   424	        username = session['username']
   425	        with db_manager.get_connection() as conn:
   426	            with conn.cursor() as cursor:
   427	                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
   428	                total_devices = cursor.fetchone()['count']
   429	
   430	                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
   431	                active_devices = cursor.fetchone()['active']
   432	
   433	                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
   434	                result = cursor.fetchone()
   435	
   436	        return jsonify({
   437	            "username": username,
   438	            "total_devices": total_devices,
   439	            "active_devices": active_devices,
   440	            "total_power": result['power'] or 0,
   441	            "total_energy": result['energy'] or 0,
   442	            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
   443	            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
   444	            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
   445	            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
   446	        })
   447	    except Exception as e:
   448	        logger.error(f"User data fetch failed: {str(e)}")
   449	        return jsonify({"error": "Data unavailable"}), 500
   450	
   451	# ===== Main Execution =====
   452	def safe_shutdown(signum, frame):
   453	    """Handle shutdown signals gracefully"""
   454	    logger.info("Received shutdown signal, terminating...")
   455	    sys.exit(0)
   456	
   457	def main():
   458	    try:
   459	        import signal
   460	        signal.signal(signal.SIGINT, safe_shutdown)
   461	        signal.signal(signal.SIGTERM, safe_shutdown)
   462	
   463	        try:
   464	            subprocess.run(
   465	                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
   466	                stderr=subprocess.DEVNULL,
   467	                timeout=5
   468	            )
   469	        except subprocess.TimeoutExpired:
   470	            logger.warning("Process cleanup timed out")
   471	        except Exception as e:
   472	            logger.warning(f"Process cleanup failed: {str(e)}")
   473	
   474	        try:
   475	            test_conn = db_manager.get_connection()
   476	            test_conn.close()
   477	        except Exception as e:
   478	            logger.critical(f"Startup database test failed: {str(e)}")
   479	            sys.exit(1)
   480	
   481	        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
   482	        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)
   483	
   484	    except Exception as e:
   485	        logger.critical(f"Fatal startup error: {str(e)}")
   486	        sys.exit(1)
   487	
   488	if __name__ == '__main__':
   489	    main()
   490	
 # Setup dashboards after delay
   372	                time.sleep(DASHBOARD_IMPORT_DELAY)
   373	                setup_grafana_dashboards(user_id)
   374	
   375	                return redirect(url_for('dashboard'))
   376	
   377	    except Exception as e:
   378	        logger.critical(f"Submit error: {str(e)}", exc_info=True)
   379	        return jsonify({"error": "Internal server error"}), 500
   380	
   381	@app.route('/dashboard')
   382	@login_required
   383	def dashboard():
   384	    try:
   385	        user_id = session['user_id']
   386	        with db_manager.get_connection() as conn:
   387	            with conn.cursor() as cursor:
   388	                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
   389	                if cursor.fetchone()['count'] == 0:
   390	                    return render_template('error.html', message="No device data found for your account.")
   391	        dashboard_uids = {
   392	            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
   393	            "power": get_dashboard_uid_from_title("Power Analysis"),
   394	            "energy": get_dashboard_uid_from_title("Energy Analysis"),
   395	            "devices": get_dashboard_uid_from_title("Device Details")
   396	        }
   397	        if not all(dashboard_uids.values()):
   398	            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
   399	            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
   400	 
   401	 
   402		dashboards = {
   403	            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
   404	            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
   405	            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
   406	            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
   407	        }
   408	        return render_template('shems_dashboard_visuals.html', **dashboards)
   409	
   410	    except Exception as e:
   411	        logger.error(f"Dashboard error: {str(e)}")
   412	        return render_template('error.html', message="Dashboard failed to load."), 500
   413	
   414	@app.route('/logout', methods=['POST'])
   415	def logout():
   416	    session.clear()
   417	    return redirect(url_for('index'))
   418	
   419	@app.route('/api/user-data')
   420	@login_required
   421	def api_user_data():
   422	    try:
   423	        user_id = session['user_id']
   424	        username = session['username']
   425	        with db_manager.get_connection() as conn:
   426	            with conn.cursor() as cursor:
   427	                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
   428	                total_devices = cursor.fetchone()['count']
   429	
   430	                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
   431	                active_devices = cursor.fetchone()['active']
   432	
   433	                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
   434	                result = cursor.fetchone()
   435	
   436	        return jsonify({
   437	            "username": username,
   438	            "total_devices": total_devices,
   439	            "active_devices": active_devices,
   440	            "total_power": result['power'] or 0,
   441	            "total_energy": result['energy'] or 0,
   442	            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
   443	            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
   444	            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
   445	            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
   446	        })
   447	    except Exception as e:
   448	        logger.error(f"User data fetch failed: {str(e)}")
   449	        return jsonify({"error": "Data unavailable"}), 500
   450	
   451	# ===== Main Execution =====
   452	def safe_shutdown(signum, frame):
   453	    """Handle shutdown signals gracefully"""
   454	    logger.info("Received shutdown signal, terminating...")
   455	    sys.exit(0)
   456	
   457	def main():
   458	    try:
   459	        import signal
   460	        signal.signal(signal.SIGINT, safe_shutdown)
   461	        signal.signal(signal.SIGTERM, safe_shutdown)
   462	
   463	        try:
   464	            subprocess.run(
   465	                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
   466	                stderr=subprocess.DEVNULL,
   467	                timeout=5
   468	            )
   469	        except subprocess.TimeoutExpired:
   470	            logger.warning("Process cleanup timed out")
   471	        except Exception as e:
   472	            logger.warning(f"Process cleanup failed: {str(e)}")
   473	
   474	        try:
   475	            test_conn = db_manager.get_connection()
   476	            test_conn.close()
   477	        except Exception as e:
   478	            logger.critical(f"Startup database test failed: {str(e)}")
   479	            sys.exit(1)
   480	
   481	        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
   482	        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)
   483	
   484	    except Exception as e:
   485	        logger.critical(f"Fatal startup error: {str(e)}")
   486	        sys.exit(1)
   487	
   488	if __name__ == '__main__':
   489	    main()
   490	
     1	#!/usr/bin/env python3
     2	
     3	import os
     4	import sys
     5	import time
     6	import subprocess
     7	import logging
     8	from datetime import datetime, timedelta
     9	from functools import wraps
    10	from werkzeug.security import generate_password_hash, check_password_hash
    11	import secrets
    12	import json
    13	import pymysql
    14	from pymysql.cursors import DictCursor
    15	from pymysql import MySQLError
    16	from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
    17	
    18	# ===== Get Current PID =====
    19	current_pid = os.getpid()
    20	
    21	# ===== Configuration =====
    22	HTML_DIR = '/app/smarthome/dev/templates/'
    23	SCRIPT_DIR = '/app/smarthome/dev/bin'
    24	DB_DIR = '/app/smarthome/data/'
    25	LOG_DIR = '/app/smarthome/data/logs/'
    26	DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
    27	GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")
    28	
    29	# Ensure directories exist
    30	os.makedirs(HTML_DIR, exist_ok=True)
    31	os.makedirs(SCRIPT_DIR, exist_ok=True)
    32	os.makedirs(DB_DIR, exist_ok=True)
    33	os.makedirs(LOG_DIR, exist_ok=True)
    34	
    35	# ===== Logging Configuration =====
    36	logging.basicConfig(
    37	    level=logging.DEBUG,
    38	    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    39	    handlers=[
    40	        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
    41	        logging.StreamHandler()
    42	    ]
    43	)
    44	logger = logging.getLogger('SHEMS-Server')
    45	
    46	# ===== Application Setup =====
    47	app = Flask(__name__, template_folder=HTML_DIR)
    48	app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
    49	app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
    50	app.config['SESSION_COOKIE_SECURE'] = True
    51	app.config['SESSION_COOKIE_HTTPONLY'] = True
    52	app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'
    53	
    54	# ===== Database Configuration =====
    55	class DatabaseManager:
    56	    MAX_RETRIES = 3
    57	    RETRY_DELAY = 2
    58	    
    59	    def __init__(self):
    60	        self.db_user = os.getenv('DB_USER', 'shems_mis')
    61	        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
    62	        self.db_name = os.getenv('DB_NAME', 'shems_db')
    63	        
    64	    def get_connection(self):
    65	        """Get a database connection with retry logic"""
    66	        attempts = 0
    67	        last_error = None
    68	        
    69	        while attempts < self.MAX_RETRIES:
    70	            try:
    71	                conn = pymysql.connect(
    72	                    host='localhost',
    73	                    user=self.db_user,
    74	                    password=self.db_pass,
    75	                    database=self.db_name,
    76	                    cursorclass=DictCursor,
    77	                    connect_timeout=5,
    78	                    autocommit=False
    79	                )
    80	                logger.info("Database connection established")
    81	                return conn
    82	            except MySQLError as e:
    83	                last_error = e
    84	                attempts += 1
    85	                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
    86	                time.sleep(self.RETRY_DELAY)
    87	        
    88	        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
    89	        raise ConnectionError(f"Could not connect to database: {str(last_error)}")
    90	
    91	db_manager = DatabaseManager()
    92	
    93	# ===== Helper Functions =====
    94	def get_pi_ip():
    95	    """Get Raspberry Pi IP address with fallback"""
    96	    try:
    97	        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
    98	        return ip if ip else '127.0.0.1'
    99	    except:
   100	        return '127.0.0.1'
   101	
   102	def is_service_running(service_name):
   103	    """Check if a systemd service is running"""
   104	    try:
   105	        result = subprocess.run(
   106	            ['systemctl', 'is-active', service_name],
   107	            stdout=subprocess.PIPE,
   108	            stderr=subprocess.PIPE,
   109	            text=True
   110	        )
   111	        return result.stdout.strip() == 'active'
   112	    except Exception as e:
   113	        logger.error(f"Service check failed for {service_name}: {str(e)}")
   114	        return False
   115	
   116	def get_dashboard_uid_from_title(title):
   117	    try:
   118	        response = subprocess.check_output([
   119	            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
   120	            "-H", "Content-Type: application/json",
   121	            "-u", "admin:admin"
   122	        ])
   123	        dashboards = json.loads(response)
   124	        for dash in dashboards:
   125	            if dash.get("title", "").strip().lower() == title.strip().lower():
   126	                uid = dash.get("uid")
   127	                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
   128	                return uid
   129	        logger.warning(f"No dashboard matched title '{title}'")
   130	    except Exception as e:
   131	        logger.error(f"Error fetching dashboard UID for '{title}': {e}")
   132	    return None
   133	
   134	def grafana_dashboard_url(uid):
   135	    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None
   136	
   137	def validate_submission(form_data):
   138	    """Validate user submission data"""
   139	    required_fields = ['username', 'password', 'numDevices', 'numDays']
   140	    errors = []
   141	    
   142	    # Check required fields
   143	    for field in required_fields:
   144	        if field not in form_data or not form_data[field]:
   145	            errors.append(f"Missing required field: {field}")
   146	    
   147	    # Validate numeric fields
   148	    try:
   149	        num_devices = int(form_data.get('numDevices', 0))
   150	        if num_devices <= 0:
   151	            errors.append("Number of devices must be positive")
   152	    except ValueError:
   153	        errors.append("Invalid number of devices")
   154	    
   155	    try:
   156	        num_days = int(form_data.get('numDays', 0))
   157	        if num_days <= 0:
   158	            errors.append("Number of days must be positive")
   159	    except ValueError:
   160	        errors.append("Invalid number of days")
   161	    
   162	    return errors if errors else None
   163	
   164	def setup_grafana_dashboards(user_id):
   165	    """Import Grafana dashboards after data exists and ensure dashboards exist"""
   166	    max_retries = 5
   167	    retry_delay = 10
   168	    dashboards_expected = {
   169	        "SHEMS Overview": "overview-dashboard.json",
   170	        "Power Analysis": "power-analysis.json",
   171	        "Energy Analysis": "energy-analysis.json",
   172	        "Device Details": "device-details.json"
   173	    }
   174	    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"
   175	
   176	    for attempt in range(max_retries):
   177	        try:
   178	            with db_manager.get_connection() as conn:
   179	                with conn.cursor() as cursor:
   180	                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
   181	                    if cursor.fetchone()["COUNT(*)"] > 0:
   182	                        logger.info("Device data available, verifying Grafana dashboards...")
   183	
   184	                        for title, filename in dashboards_expected.items():
   185	                            uid = get_dashboard_uid_from_title(title)
   186	                            if uid:
   187	                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
   188	                                continue
   189	
   190	                            logger.warning(f"Dashboard '{title}' missing, importing...")
   191	                            dashboard_path = os[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m .path.join(dashboard_dir, filename)
   192	                            if not os.path.exists(dashboard_path):
   193	                                logger.error(f"Dashboard file missing: {dashboard_path}")
   194	                                continue
   195	
   196	                            with open(dashboard_path, 'r') as f:
   197	                                dashboard_json = json.load(f)
   198	
   199	                            import_payload = {
   200	                                "dashboard": dashboard_json,
   201	                                "overwrite": True,
   202	                                "folderId": 0
   203	                            }
   204	
   205	                            result = subprocess.run(
   206	                                ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",
   207	                                 "-H", "Content-Type: application/json",
   208	                                 "-u", "admin:admin",
   209	                                 "-d", json.dumps(import_payload)],
   210	                                capture_output=True, text=True
   211	                            )
   212	
   213	                            if '"status":"success"' in result.stdout:
   214	                                logger.info(f"Successfully imported '{title}'")
   215	                            else:
   216	                                logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")
   217	
   218	                        return True
   219	
   220	                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
   221	                    time.sleep(retry_delay)
   222	
   223	        except Exception as e:
   224	            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
   225	            time.sleep(retry_delay)
   226	
   227	    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
   228	    return False
   229	
   230	def check_grafana_dashboards_exist():
   231	    """Check if dashboards exist using Grafana API"""
   232	    try:
   233	        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
   234	        response = requests.get(
   235	            grafana_url,
   236	            auth=('admin', 'admin'),
   237	            timeout=5
   238	        )
   239	        return response.status_code == 200
   240	    except Exception as e:
   241	        logger.warning(f"Grafana API check failed: {str(e)}")
   242	        return False
   243	
   244	def verify_dashboard_data(user_id):
   245	    """Check if data exists for dashboard rendering"""
   246	    try:
   247	        with db_manager.get_connection() as conn:
   248	            with conn.cursor() as cursor:
   249	                # Check if user has any device data
   250	                cursor.execute(
   251	                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
   252	                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
   253	                    (user_id,)
   254	                )
   255	                return cursor.fetchone()[0] > 0
   256	    except Exception as e:
   257	        logger.error(f"Data verification failed: {str(e)}")
   258	        return False
   259	
   260	# ===== Decorators =====
   261	def login_required(f):
   262	    """Decorator to ensure user is logged in"""
   263	    @wraps(f)
   264	    def decorated_function(*args, **kwargs):
   265	        if 'user_id' not in session:
   266	            logger.warning("Unauthorized access attempt")
   267	            return redirect(url_for('index'))
   268	        return f(*args, **kwargs)
   269	    return decorated_function
   270	
   271	def handle_db_errors(f):
   272	    @wraps(f)
   273	    def decorated_function(*args, **kwargs):
   274	        try:
   275	            return f(*args, **kwargs)
   276	        except MySQLError as e:
   277	            logger.error(f"Database error in {f.__name__}: {str(e)}")
   278	            abort(500, description="Database operation failed")
   279	        except Exception as e:
   280	            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
   281	            abort(500)
   282	    return decorated_function
   283	
   284	# ===== Routes =====
   285	@app.route('/')
   286	def index():
   287	    try:
   288	        if 'user_id' in session:
   289	            return redirect(url_for('dashboard'))
   290	        return render_template('shems_dashboard_input.html')
   291	    except Exception as e:
   292	        logger.error(f"Index route error: {str(e)}")
   293	        return render_template('error.html'), 500
   294	
   295	@app.route('/api/access-points')
   296	def access_points():
   297	    pi_ip = get_pi_ip()
   298	    access_points = [f"http://{pi_ip}:5000"]
   299	    
   300	    try:
   301	        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
   302	        if tailscale_ip:
   303	            access_points.append(f"http://{tailscale_ip}:5000")
   304	    except:
   305	        pass
   306	        
   307	    return jsonify({
   308	        'access_points': access_points,
   309	        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
   310	    })
   311	
   312	@app.route('/submit', methods=['POST'])
   313	@handle_db_errors
   314	def submit():
   315	    try:
   316	        # Validate input
   317	        if errors := validate_submission(request.form):
   318	            logger.warning(f"Invalid submission: {errors}")
   319	            return jsonify({"errors": errors}), 400
   320	
   321	        username = request.form['username']
   322	        password = request.form['password']
   323	        num_devices = int(request.form['numDevices'])
   324	        num_days = int(request.form['numDays'])
   325	
   326	        with db_manager.get_connection() as conn:
   327	            with conn.cursor() as cursor:
   328	                # Check existing user
   329	                cursor.execute(
   330	                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
   331	                    (username,)
   332	                )
   333	                user = cursor.fetchone()
   334	
   335	                if user:
   336	                    if not check_password_hash(user['PasswordHash'], password):
   337	                        logger.warning("Invalid password attempt")
   338	                        return jsonify({"error": "Invalid credentials"}), 401
   339	                    user_id = user['UserId']
   340	                else:
   341	                    # Create new user
   342	                    password_hash = generate_password_hash(password)
   343	                    cursor.execute(
   344	                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
   345	                        (username, password_hash)
   346	                    )
   347	                    user_id = cursor.lastrowid
   348	                    conn.commit()
   349	                    logger.info(f"Created new user {user_id}")
   350	
   351	                # Store session
   352	                session.permanent = True
   353	                session['user_id'] = user_id
   354	                session['username'] = username
   355	                logger.debug(f"Session created for {user_id}")
   356	
   357	                # Start data simulation
   358	                try:
   359	                    subprocess.Popen([
   360	                        sys.executable,
   361	                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
   362	                        str(user_id),
   363	                        str(num_devices),
   364	                        str(num_days)
   365	                    ])
   366	                    logger.info(f"Started simulation for user {user_id}")
   367	                except Exception as e:
   368	                    logger.error(f"Simulation startup failed: {str(e)}")
   369	                    return jsonify({"error": "Data generation failed"}), 500
   370	
   371	                # Setup dashboards after delay
   372	                time.sleep(DASHBOARD_IMPORT_DELAY)
   373	                setup_grafana_dashboards(user_id)
   374	
   375	                return redirect(url_for('dashboard'))
   376	
   377	    except Exception as e:
   378	        logger.critical(f"Submit error: {str(e)}", exc_info=True)
   379	        return jsonify({"error": "Internal server error"}), 500
   380	
   381	@app.route('/dashboard')
   382	@login_required
   383	def dashboard():
   384	    try:
   385	        user_id = session['user_id']
   386	        with db_manager.get_connection() as conn:
   387	            with conn.cursor() as cursor:
   388	                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
   389	                if cursor.fetchone()['count'] == 0:
   390	                    return render_template('error.html', message="No device data found for your account.")
   391	        dashboard_uids = {
   392	            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
   393	            "power": get_dashboard_uid_from_title("Power Analysis"),
   394	            "energy": get_dashboard_uid_from_title("Energy Analysis"),
   395	            "devices": get_dashboard_uid_from_title("Device Details")
   396	        }
   397	        if not all(dashboard_uids.values()):
   398	            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
   399	            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
   400	 
   401	 
   402		dashboards = {
   403	            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
   404	            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
   405	            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
   406	            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
   407	        }
   408	        return render_template('shems_dashboard_visuals.html', **dashboards)
   409	
   410	    except Exception as e:
   411	        logger.error(f"Dashboard error: {str(e)}")
   412	        return render_template('error.html', message="Dashboard failed to load."), 500
   413	
   414	@app.route('/logout', methods=['POST'])
   415	def logout():
   416	    session.clear()
   417	    return redirect(url_for('index'))
   418	
   419	@app.route('/api/user-data')
   420	@login_required
   421	def api_user_data():
   422	    try:
   423	        user_id = session['user_id']
   424	        username = session['username']
   425	        with db_manager.get_connection() as conn:
   426	            with conn.cursor() as cursor:
   427	                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
   428	                total_devices = cursor.fetchone()['count']
   429	
   430	                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
   431	                active_devices = cursor.fetchone()['active']
   432	
   433	                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
   434	                result = cursor.fetchone()
   435	
   436	        return jsonify({
   437	            "username": username,
   438	            "total_devices": total_devices,
   439	            "active_devices": active_devices,
   440	            "total_power": result['power'] or 0,
   441	            "total_energy": result['energy'] or 0,
   442	            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
   443	            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
   444	            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
   445	            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
   446	        })
   447	    except Exception as e:
   448	        logger.error(f"User data fetch failed: {str(e)}")
   449	        return jsonify({"error": "Data unavailable"}), 500
   450	
   451	# ===== Main Execution =====
   452	def safe_shutdown(signum, frame):
   453	    """Handle shutdown signals gracefully"""
   454	    logger.info("Received shutdown signal, terminating...")
   455	    sys.exit(0)
   456	
   457	def main():
   458	    try:
   459	        import signal
   460	        signal.signal(signal.SIGINT, safe_shutdown)
   461	        signal.signal(signal.SIGTERM, safe_shutdown)
   462	
   463	        try:
   464	            subprocess.run(
   465	                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
   466	                stderr=subprocess.DEVNULL,
   467	                timeout=5
   468	            )
   469	        except subprocess.TimeoutExpired:
   470	            logger.warning("Process cleanup timed out")
   471	        except Exception as e:
   472	            logger.warning(f"Process cleanup failed: {str(e)}")
   473	
   474	        try:
   475	            test_conn = db_manager.get_connection()
   476	            test_conn.close()
   477	        except Exception as e:
   478	            logger.critical(f"Startup database test failed: {str(e)}")
   479	            sys.exit(1)
   480	
   481	        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
   482	        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)
   483	
   484	    except Exception as e:
   485	        logger.critical(f"Fatal startup error: {str(e)}")
   486	        sys.exit(1)
   487	
   488	if __name__ == '__main__':
   489	    main()
   490	
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cat -n shems_monitoring_server.pycat -n shems_monitoring_server.pycat -n shems_monitoring_server.py[3@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -l[Kls -l[Kls -l[K./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py
[?2004l
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[22;1t[1;38r[?12h[?12l[22;2t[22;1t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 490 lines, 18951 bytes 490 lines, 18951 bytes 490 lines, 18951 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_visuals.html', **dashboards)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Dashboard error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html', message="Dashboard failed to load."), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/logout', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef logout():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hsession.clear()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/user-data')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef api_user_data():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = session['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Htotal_devices = cursor.fetchone()['count'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHEREE[37;1H di.UserId=%s AND dud.Status='ON'", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Hactive_devices = cursor.fetchone()['active'][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[1;1H[2M[1;38r[36;17Hcursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di OO[37;1HN dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))[36;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hresult = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;8H[1;8H[1;8H[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H}[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[37;1H[1m[34m@                                                                                                                                     [1;1H[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[m[1;1H[L[1;38r[1;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboard_uids = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboard_uids = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboard_uids = {[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hif cursor.fetchone()['count'] == 0:[?25h



































[14;8H[14;8H[14;8H


   [14;8H[14;8H[14;8H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;2H[11;2H[11;2H   


[?25l[12;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[12;1H[?25h[?25l[12;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[12;9H[?25h[?25l[12;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[12;9H[?25h[?25l[12;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[12;9H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 488 lines, 18947 bytes written 488 lines, 18947 bytes written 488 lines, 18947 bytes written[23;2t[23;2t[23;2t[23;1t[23;1t
[?2004l[?1l>
[?2004l[?1l>[23;1t[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[4@cat -n[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@cat -n[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@cat -n[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[3@python -m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls -l[Kls -l[Kls -l[K./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.sh


[?2004l[?2004l[?2004lStarting SHEMS deployment at Fri Apr 18 10:44:33 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:44:33 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:44:33 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:44:33 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Installing required packages...
Installing required packages...
Configuring MariaDB...
No existing simulation process found
Configuring MariaDB...
Installing required packages...
Configuring MariaDB...
Configuring MariaDB...
Setting up Python environment...
Setting up Python environment...
Setting up Python environment...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 10:44:45 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Starting Grafana deployment at Fri Apr 18 10:44:45 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Starting Grafana deployment at Fri Apr 18 10:44:45 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Starting Grafana deployment at Fri Apr 18 10:44:45 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.

E: The list of sources could not be read.

E: The list of sources could not be read.

E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
EE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
EE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: The list of sources could not be read.
: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 10:44:53 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:44:53 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:44:53 PM IST 2025
Starting monitoring server...
Grafana deployment completed at Fri Apr 18 10:44:53 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...



[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 22:44 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 22:44 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 22:44 shems_monitoring_server.py
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.pyshems_monitoring_server.py
shems_monitoring_server.py

[?2004l[?2004l[?2004l-bash: shems_monitoring_server.py: command not found
-bash: shems_monitoring_server.py: command not found
-bash: shems_monitoring_server.py: command not found
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccaaattt   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def get_dashboard_uid_from_title(title):
    try:
        response = subprocess.check_output([
            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"
        ])
        dashboards = json.loads(response)
        for dash in dashboards:
            if dash.get("title", "").strip().lower() == title.strip().lower():
                uid = dash.get("uid")
                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
                return uid
        logger.warning(f"No dashboard matched title '{title}'")
    except Exception as e:
        logger.error(f"Error fetching dashboard UID for '{title}': {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists and ensure dashboards exist"""
    max_retries = 5
    retry_delay = 10
    dashboards_expected = {
        "SHEMS Overview": "overview-dashboard.json",
        "Power Analysis": "power-analysis.json",
        "Energy Analysis": "energy-analysis.json",
        "Device Details": "device-details.json"
    }
    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"

    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
                    if cursor.fetchone()["COUNT(*)"] > 0:
                        logger.info("Device data available, verifying Grafana dashboards...")

                        for title, filename in dashboards_expected.items():
                            uid = get_dashboard_uid_from_title(title)
                            if uid:
                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
                                continue

                            logger.warning(f"Dashboard '{title}' missing, importing...")
                            dashboard_path = os.path.join(dashboard_dir, filename)
                            if not os.path.exists(dashboard_path):
                                logger.error(f"Dashboard file missing: {dashboard_path}")
                                continue

                            with open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)

                            import_payload = {
                                "dashboard": dashboard_json,
                                "overwrite": True,
                                "folderId": 0
                            }

                            result = subprocess.run(
                                ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",
                                 "-H", "Content-Type: application/json",
                                 "-u", "admin:admin",
                                 "-d", json.dumps(import_payload)],
                                capture_output=True, text=True
                            )

                            if '"status":"success"' in result.stdout:
                                logger.info(f"Successfully imported '{title}'")
                            else:
                                logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def get_dashboard_uid_from_title(title):
    try:
        response = subprocess.check_output([
            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"
        ])
        dashboards = json.loads(response)
        for dash in dashboards:
            if dash.get("title", "").strip().lower() == title.strip().lower():
                uid = dash.get("uid")
                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
                return uid
        logger.warning(f"No dashboard matched title '{title}'")
    except Exception as e:
        logger.error(f"Error fetching dashboard UID for '{title}': {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists and ensure dashboards exist"""
    max_retries = 5
    retry_delay = 10
    dashboards_expected = {
        "SHEMS Overview": "overview-dashboard.json",
        "Power Analysis": "power-analysis.json",
        "Energy Analysis": "energy-analysis.json",
        "Device Details": "device-details.json"
    }
    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"

    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
                    if cursor.fetchone()["COUNT(*)"] > 0:
                        logger.info("Device data available, verifying Grafana dashboards...")

                        for title, filename in dashboards_expected.items():
                            uid = get_dashboard_uid_from_title(title)
                            if uid:
                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
                                continue

                            logger.warning(f"Dashboard '{title}' missing, importing...")
                            dashboard_path = os.path.join(dashboard_dir, filename)
                            if not os.path.exists(dashboard_path):
                                logger.error(f"Dashboard file missing: {dashboard_path}")
                                continue

                            with open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)

                            import_payload = {
                                "dashboard": dashboard_json,
                                "overwrite": True,
                                "folderId": 0
                            }

                            result = subprocess.run(
                                ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",
                                 "-H", "Content-Type: application/json",
                                 "-u", "admin:admin",
                                 "-d", json.dumps(import_payload)],
                                capture_output=True, text=True
                            )

                            if '"status":"success"' in result.stdout:
                                logger.info(f"Successfully imported '{title}'")
                            else:
                                logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")

                        return True

                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)

        except Exception as e:
            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)

    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")
        dashboard_uids = {
            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
            "power": get_dashboard_uid_from_title("Power Analysis"),
            "energy": get_dashboard_uid_from_title("Energy Analysis"),
            "devices": get_dashboard_uid_from_title("Device Details")
        }
        if not all(dashboard_uids.values()):
            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
	dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECstrip()}")

                        return True

                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)

        except Exception as e:
            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)

    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")
        dashboard_uids = {
            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
            "power": get_dashboard_uid_from_title("Power Analysis"),
            "energy": get_dashboard_uid_from_title("Energy Analysis"),
            "devices": get_dashboard_uid_from_title("Device Details")
        }
        if not all(dashboard_uids.values()):
            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
	dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

T COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def get_dashboard_uid_from_title(title):
    try:
        response = subprocess.check_output([
            "curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",
            "-H", "Content-Type: application/json",
            "-u", "admin:admin"
        ])
        dashboards = json.loads(response)
        for dash in dashboards:
            if dash.get("title", "").strip().lower() == title.strip().lower():
                uid = dash.get("uid")
                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
                return uid
        logger.warning(f"No dashboard matched title '{title}'")
    except Exception as e:
        logger.error(f"Error fetching dashboard UID for '{title}': {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists and ensure dashboards exist"""
    max_retries = 5
    retry_delay = 10
    dashboards_expected = {
        "SHEMS Overview": "overview-dashboard.json",
        "Power Analysis": "power-analysis.json",
        "Energy Analysis": "energy-analysis.json",
        "Device Details": "device-details.json"
    }
    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"

    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
                    if cursor.fetchone()["COUNT(*)"] > 0:
                        logger.info("Device data available, verifying Grafana dashboards...")

                        for title, filename in dashboards_expected.items():
                            uid = get_dashboard_uid_from_title(title)
                            if uid:
                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
                                continue

                            logger.warning(f"Dashboard '{title}' missing, importing...")
                            dashboard_path = os.path.join(dashboard_dir, filename)
                            if not os.path.exists(dashboard_path):
                                logger.error(f"Dashboard file missing: {dashboard_path}")
                                continue

                            with open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)

                            import_payload = {
                                "dashboard": dashboard_json,
                                "overwrite": True,
                                "folderId": 0
                            }

                            result = subprocess.run(
                                ["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",
                                 "-H", "Content-Type: application/json",
                                 "-u", "admin:admin",
                                 "-d", json.dumps(import_payload)],
                                capture_output=True, text=True
                            )

                            if '"status":"success"' in result.stdout:
                                logger.info(f"Successfully imported '{title}'")
                            else:
                                logger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m strip()}")

                        return True

                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)

        except Exception as e:
            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)

    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")
        dashboard_uids = {
            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
            "power": get_dashboard_uid_from_title("Power Analysis"),
            "energy": get_dashboard_uid_from_title("Energy Analysis"),
            "devices": get_dashboard_uid_from_title("Device Details")
        }
        if not all(dashboard_uids.values()):
            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
	dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cat shems_monitoring_server.pycat shems_monitoring_server.pycat shems_monitoring_server.py[4Pshems_monitoring_server.py[4Pshems_monitoring_server.py[4Pshems_monitoring_server.py[17Pls -lrth [17Pls -lrth [17Pls -lrth ./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py
[?2004l
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 488 lines, 18947 bytes 488 lines, 18947 bytes 488 lines, 18947 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = subprocess.check_output([[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"curl", "-s", f"{GRAFANA_URL}/api/search?query={title}",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"-u", "admin:admin"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9H])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(response)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[36;1H[36;1H[36;1H


[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef check_grafana_dashboards_exist():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if dashboards exist using Grafana API"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hgrafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresponse = requests.get([?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hgrafana_url,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hauth=('admin', 'admin'),[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htimeout=5[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn response.status_code == 200[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"Grafana API check failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef verify_dashboard_data(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if data exists for dashboard rendering"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check if user has any device data[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(user_id,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn cursor.fetchone()[0] > 0[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Data verification failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Decorators =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef login_required(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Decorator to ensure user is logged in"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' not in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning("Unauthorized access attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('index'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef handle_db_errors(f):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5H@wraps(f)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef decorated_function(*args, **kwargs):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn f(*args, **kwargs)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Database error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500, description="Database operation failed")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Unexpected error in {f.__name__}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;13Habort(500)[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn decorated_function[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Routes =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef index():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif 'user_id' in session:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('shems_dashboard_input.html')[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Index route error: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn render_template('error.html'), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/api/access-points')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef access_points():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hpi_ip = get_pi_ip()[?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;5Haccess_points = [f"http://{pi_ip}:5000"][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htailscale_ip = subprocess.getoutput("tailscale ip -4").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif tailscale_ip:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Haccess_points.append(f"http://{tailscale_ip}:5000")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpass[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn jsonify({[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'access_points': access_points,[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;9H'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;5H})[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/submit', methods=['POST'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@handle_db_errors[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef submit():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9H# Validate input[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif errors := validate_submission(request.form):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Invalid submission: {errors}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn jsonify({"errors": errors}), 400[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Husername = request.form['username'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hpassword = request.form['password'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(request.form['numDevices'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(request.form['numDays'])[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Check existing user[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H"SELECT UserId, PasswordHash FROM Users WHERE Username = %s",[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H(username,)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huser = cursor.fetchone()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif user:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif not check_password_hash(user['PasswordHash'], password):[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.warning("Invalid password attempt")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn jsonify({"error": "Invalid credentials"}), 401[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = user['UserId'][?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21H# Create new user[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword_hash = generate_password_hash(password)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute([?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H"INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;25H(username, password_hash)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H)[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser_id = cursor.lastrowid[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconn.commit()[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Created new user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Store session[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession.permanent = True[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['user_id'] = user_id[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsession['username'] = username[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Session created for {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Start data simulation[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hsubprocess.Popen([[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hsys.executable,[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hos.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(user_id),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_devices),[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hstr(num_days)[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21H])[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"Started simulation for user {user_id}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.error(f"Simulation startup failed: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn jsonify({"error": "Data generation failed"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17H# Setup dashboards after delay[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(DASHBOARD_IMPORT_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hsetup_grafana_dashboards(user_id)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn redirect(url_for('dashboard'))[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.critical(f"Submit error: {str(e)}", exc_info=True)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn jsonify({"error": "Internal server error"}), 500[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@app.route('/dashboard')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1H@login_required[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef dashboard():[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Huser_id = session['user_id'][?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hcursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hif cursor.fetchone()['count'] == 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn render_template('error.html', message="No device data found for your account.")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboard_uids = {[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"overview": get_dashboard_uid_from_title("SHEMS Overview"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"power": get_dashboard_uid_from_title("Power Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"energy": get_dashboard_uid_from_title("Energy Analysis"),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;13H"devices": get_dashboard_uid_from_title("Device Details")[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9H}[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif not all(dashboard_uids.values()):[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Dashboard UIDs missing: {dashboard_uids}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn render_template("error.html", message="Dashboards are not ready. Please try again later.")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = {[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[?25l[1;37r[37;1H
[1;38r[37;13H'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H


[35;1H[35;1H[35;1H[34;8H[34;8H[34;8H[?25ldashboards = {[34;15H[K[34;1H[?25h[?25ldashboards = {[34;15H[K[34;1H[?25h[?25ldashboards = {[34;15H[K[34;1H[?25h[33;1H[33;1H[33;1H[108C[108C[108C[?2004l[>4;m)[?2004l[>4;m)[?2004l[>4;m)[?25ld[?25h[?25ld[?25h[?25ld[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[33;110H[K[33;109H[?25h[?25l[33;110H[K[33;109H[?25h[?25l[33;110H[K[33;109H[?25h[34;14H[34;14H[34;14H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l dashboards = { [?25h[?25l dashboards = { [?25h[?25l dashboards = { [?25h[?25l dashboards = {  [?25h[?25l dashboards = {  [?25h[?25l dashboards = {  [?25h[?25l dashboards = {   [?25h[?25l dashboards = {   [?25h[?25l dashboards = {   [?25h[?25l dashboards = {    [?25h[?25l dashboards = {    [?25h[?25l dashboards = {    [?25h[?25l[?25h[?25l[?25h[?25l[?25h[?2004h[>4;2m[?25ldashboards = {[34;18H[K[34;3H[?25h[?4m[?2004h[>4;2m[?25ldashboards = {[34;18H[K[34;3H[?25h[?4m[?2004h[>4;2m[?25ldashboards = {[34;18H[K[34;3H[?25h[?4m[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hqqq!!![?25l[?2004l[>4;m[?25l[?2004l[>4;m[23;2t[?25l[?2004l[>4;m[23;2t[23;2t[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[23;1t[38;1H[K[38;1H[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@cat[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4Pshems_monitoring_server.py[4Pshems_monitoring_server.py[4Pshems_monitoring_server.py[17Pls -lrth [17Pls -lrth [17Pls -lrth ./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 10:52:34 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:52:34 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:52:34 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 10:52:34 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 10:52:49 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:52:49 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:52:49 PM IST 2025
Starting Grafana deployment at Fri Apr 18 10:52:49 PM IST 2025
Grafana not found. Installing...
Grafana not found. Installing...
Grafana not found. Installing...
Grafana not found. Installing...
/usr/sbin/grafana-server
/usr/sbin/grafana-server
/usr/sbin/grafana-server
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
EE: EConflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
EE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: The list of sources could not be read.
: The list of sources could not be read.
: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Data source already exists
Data source already exists
Data source already exists
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 10:53:00 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:53:00 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:53:00 PM IST 2025
Grafana deployment completed at Fri Apr 18 10:53:00 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running
Server is running
Server is running




Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 10:53:04 PM IST 2025
Deployment completed at Fri Apr 18 10:53:04 PM IST 2025
Deployment completed at Fri Apr 18 10:53:04 PM IST 2025
Deployment completed at Fri Apr 18 10:53:04 PM IST 2025
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   ttteeemmmppp...pppyyy
[?2004l
[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"temp.py" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"temp.py" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"temp.py" [New File][2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[mdef get_dashboard_uid_from_title(title):
    try:[2;9H[K[3;1H[K[3;1H[?25h[?25l[mdef get_dashboard_uid_from_title(title):
    try:[2;9H[K[3;1H[K[3;1H[?25h[?25l[mdef get_dashboard_uid_from_title(title):
    try:[2;9H[K[3;1H[K[3;1H[?25h[?25l[8Cresult = subprocess.run(
            [[4;14H[K[5;1H                "curl", "-s", "-u", "admin:admin",[5;51H[K[6;1H                f"{GRAFANA_URL}/api/search?query={title}"[6;58H[K[7;1H            ],[7;15H[K[8;1H            capture_output=True,[8;33H[K[9;1H            text=True,[9;23H[K[10;1H            check=False[10;24H[K[11;1H        )[11;10H[K[12;1H        if result.returncode != 0:[12;35H[K[13;1H            logger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[13;94H[K[14;1H            return None[14;24H[K[15;1H[K[16;1H        dashboards = json.loads(result.stdout)[16;47H[K[17;1H        for dash in dashboards:[17;32H[K[18;1H            if dash.get("title", "").strip().lower() == title.strip().lower():[18;79H[K[19;1H                uid = dash.get("uid")[19;38H[K[20;1H                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[20;82H[K[21;1H                return uid[21;27H[K[22;1H[K[23;1H        logger.warning(f"No dashboard matched title '{title}'")[23;64H[K[24;1H    except Exception as e:[24;27H[K[25;1H        logger.error(f"Error fetching dashboard UID for '{title}': {e}")[25;73H[K[26;1H    return None[26;16H[K[27;1H[K[27;1H[?25h[?25l[8Cresult = subprocess.run(
            [[4;14H[K[5;1H                "curl", "-s", "-u", "admin:admin",[5;51H[K[6;1H                f"{GRAFANA_URL}/api/search?query={title}"[6;58H[K[7;1H            ],[7;15H[K[8;1H            capture_output=True,[8;33H[K[9;1H            text=True,[9;23H[K[10;1H            check=False[10;24H[K[11;1H        )[11;10H[K[12;1H        if result.returncode != 0:[12;35H[K[13;1H            logger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[13;94H[K[14;1H            return None[14;24H[K[15;1H[K[16;1H        dashboards = json.loads(result.stdout)[16;47H[K[17;1H        for dash in dashboards:[17;32H[K[18;1H            if dash.get("title", "").strip().lower() == title.strip().lower():[18;79H[K[19;1H                uid = dash.get("uid")[19;38H[K[20;1H                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[20;82H[K[21;1H                return uid[21;27H[K[22;1H[K[23;1H        logger.warning(f"No dashboard matched title '{title}'")[23;64H[K[24;1H    except Exception as e:[24;27H[K[25;1H        logger.error(f"Error fetching dashboard UID for '{title}': {e}")[25;73H[K[26;1H    return None[26;16H[K[27;1H[K[27;1H[?25h[?25l[8Cresult = subprocess.run(
            [[4;14H[K[5;1H                "curl", "-s", "-u", "admin:admin",[5;51H[K[6;1H                f"{GRAFANA_URL}/api/search?query={title}"[6;58H[K[7;1H            ],[7;15H[K[8;1H            capture_output=True,[8;33H[K[9;1H            text=True,[9;23H[K[10;1H            check=False[10;24H[K[11;1H        )[11;10H[K[12;1H        if result.returncode != 0:[12;35H[K[13;1H            logger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[13;94H[K[14;1H            return None[14;24H[K[15;1H[K[16;1H        dashboards = json.loads(result.stdout)[16;47H[K[17;1H        for dash in dashboards:[17;32H[K[18;1H            if dash.get("title", "").strip().lower() == title.strip().lower():[18;79H[K[19;1H                uid = dash.get("uid")[19;38H[K[20;1H                logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[20;82H[K[21;1H                return uid[21;27H[K[22;1H[K[23;1H        logger.warning(f"No dashboard matched title '{title}'")[23;64H[K[24;1H    except Exception as e:[24;27H[K[25;1H        logger.error(f"Error fetching dashboard UID for '{title}': {e}")[25;73H[K[26;1H    return None[26;16H[K[27;1H[K[27;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m[?25l[?2004l[>4;m[?25l[?2004l[>4;m"temp.py""temp.py""temp.py" [New File] 27 lines, 952 bytes written [New File] 27 lines, 952 bytes written [New File] 27 lines, 952 bytes written[23;2t[23;2t[23;2t[23;1t[23;1t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 60K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rw-r--r-- 1 shems-mis shems-mis  952 Apr 18 22:59 temp.py
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:00 shems_monitoring_server.py
total 60K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rw-r--r-- 1 shems-mis shems-mis  952 Apr 18 22:59 temp.py
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:00 shems_monitoring_server.py
total 60K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rw-r--r-- 1 shems-mis shems-mis  952 Apr 18 22:59 temp.py
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:00 shems_monitoring_server.py
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m rrrmmm   ---rrrfff   [7mtemp.py[27m[7mtemp.py[27m[7mtemp.py[27mtemp.py
[?2004ltemp.py
[?2004ltemp.py
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l
[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l
[?2004l
[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ...///[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27mshems_deploy_interface.shshems_deploy_interface.shshems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 11:01:48 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:01:48 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:01:48 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 11:01:48 PM IST 2025
Checking for existing processes...
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Installing required packages...
Configuring MariaDB...
No existing simulation process found
No existing simulation process found
Setting up Python environment...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 11:02:01 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:02:01 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:02:01 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:02:01 PM IST 2025
Grafana not found. Installing...
Grafana not found. Installing...
Grafana not found. Installing...
/usr/sbin/grafana-server
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
EEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Waiting for Grafana to start...
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 11:02:08 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:02:08 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:02:08 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:02:08 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server is running
Server is running
Server is running
Server is running




Deployment completed successfully!
Deployment completed successfully!
Deployment completed successfully!



Access points:
Access points:
Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Local): http://192.168.1.223:5000
Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Tailscale): http://100.97.72.36:3000
  - Grafana (Tailscale): http://100.97.72.36:3000




Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)
Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs

Log files are available in: /app/smarthome/data/logs

Log files are available in: /app/smarthome/data/logs

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 11:02:09 PM IST 2025
Deployment completed at Fri Apr 18 11:02:09 PM IST 2025
Deployment completed at Fri Apr 18 11:02:09 PM IST 2025
Deployment completed at Fri Apr 18 11:02:09 PM IST 2025
[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:00 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:00 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:00 shems_monitoring_server.py
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py"[27m[23m[29m[m[H[2J[?25l[38;1H"shems_monitoring_server.py" 498 lines, 19237 bytes 498 lines, 19237 bytes 498 lines, 19237 bytes[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m[1;1H#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")

# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,[1;1H[?25h[?4m











































































































[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[38;1H[K[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([?25h[?25l[1;37r[37;1H
[1;38r[37;13H[[?25h[?25l[1;37r[37;1H
[1;38r[37;13H[[?25h[?25l[1;37r[37;1H
[1;38r[37;13H[[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"curl", "-s", "-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"curl", "-s", "-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"curl", "-s", "-u", "admin:admin",[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hf"{GRAFANA_URL}/api/search?query={title}"[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hf"{GRAFANA_URL}/api/search?query={title}"[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hf"{GRAFANA_URL}/api/search?query={title}"[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcapture_output=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcapture_output=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcapture_output=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True,[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcheck=False[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcheck=False[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcheck=False[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif result.returncode != 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif result.returncode != 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif result.returncode != 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(result.stdout)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(result.stdout)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(result.stdout)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[36;1H[36;1H[36;1H


[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif num_devices <= 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hnum_devices = int(form_data.get('numDevices', 0))[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Validate numeric fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Herrors.append(f"Missing required field: {field}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif field not in form_data or not form_data[field]:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hfor field in required_fields:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H# Check required fields[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Herrors = [][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Validate user submission data"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn uid[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Huid = dash.get("uid")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hfor dash in dashboards:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(result.stdout)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(result.stdout)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hdashboards = json.loads(result.stdout)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn None[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif result.returncode != 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif result.returncode != 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif result.returncode != 0:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcheck=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcheck=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcheck=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcapture_output=True,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcapture_output=True,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcapture_output=True,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hf"{GRAFANA_URL}/api/search?query={title}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hf"{GRAFANA_URL}/api/search?query={title}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hf"{GRAFANA_URL}/api/search?query={title}"[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"curl", "-s", "-u", "admin:admin",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"curl", "-s", "-u", "admin:admin",[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"curl", "-s", "-u", "admin:admin",[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H[[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H[[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H[[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h











































































































[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[?25h[36;1H[36;1H[36;1H[35;1H[35;1H[35;1H[34;1H[34;1H[34;1H[33;1H[33;1H[33;1H[32;1H[32;1H[32;1H[31;1H[31;1H[31;1H[30;1H[30;1H[30;1H[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H[14;1H[14;1H[14;1H[13;1H[13;1H[13;1H[12;1H[12;1H[12;1H[11;1H[11;1H[11;1H[10;1H[10;1H[10;1H[9;1H[9;1H[9;1H[8;1H[8;1H[8;1H[7;1H[7;1H[7;1H[6;1H[6;1H[6;1H[5;1H[5;1H[5;1H[4;1H[4;1H[4;1H[3;1H[3;1H[3;1H[2;1H[2;1H[2;1H[1;1H[1;1H[1;1H[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Htime.sleep(self.RETRY_DELAY)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hattempts += 1[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlast_error = e[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hexcept MySQLError as e:[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn conn[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn conn[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hreturn conn[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hlogger.info("Database connection established")[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hautocommit=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hautocommit=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hautocommit=False[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconnect_timeout=5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconnect_timeout=5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hconnect_timeout=5,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hcursorclass=DictCursor,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hdatabase=self.db_name,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hdatabase=self.db_name,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hdatabase=self.db_name,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword=self.db_pass,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword=self.db_pass,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hpassword=self.db_pass,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser=self.db_user,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser=self.db_user,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Huser=self.db_user,[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hhost='localhost',[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hhost='localhost',[?25h[?25l[1;37r[1;1H[L[1;38r[1;21Hhost='localhost',[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hconn = pymysql.connect([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hconn = pymysql.connect([?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hconn = pymysql.connect([?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hwhile attempts < self.MAX_RETRIES:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlast_error = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlast_error = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlast_error = None[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hattempts = 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hattempts = 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hattempts = 0[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H"""Get a database connection with retry logic"""[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef get_connection(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef get_connection(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef get_connection(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef __init__(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef __init__(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hdef __init__(self):[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRETRY_DELAY = 2[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRETRY_DELAY = 2[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HRETRY_DELAY = 2[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HMAX_RETRIES = 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HMAX_RETRIES = 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;5HMAX_RETRIES = 3[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hclass DatabaseManager:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hclass DatabaseManager:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hclass DatabaseManager:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Database Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Database Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Database Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['SESSION_COOKIE_SECURE'] = True[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Happ = Flask(__name__, template_folder=HTML_DIR)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Application Setup =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Application Setup =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Application Setup =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogger = logging.getLogger('SHEMS-Server')[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H][?25h[?25l[1;37r[1;1H[L[1;38r[1;5H][?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.StreamHandler()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.StreamHandler()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.StreamHandler()[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hhandlers=[[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hhandlers=[[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hhandlers=[[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hlevel=logging.DEBUG,[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogging.basicConfig([?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogging.basicConfig([?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hlogging.basicConfig([?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Logging Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Logging Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Logging Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(LOG_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(LOG_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(LOG_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(DB_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(DB_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(DB_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(SCRIPT_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(SCRIPT_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(SCRIPT_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(HTML_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(HTML_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hos.makedirs(HTML_DIR, exist_ok=True)[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Ensure directories exist[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Ensure directories exist[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# Ensure directories exist[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HGRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR = '/app/smarthome/data/logs/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR = '/app/smarthome/data/logs/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HLOG_DIR = '/app/smarthome/data/logs/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR = '/app/smarthome/data/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR = '/app/smarthome/data/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HDB_DIR = '/app/smarthome/data/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR = '/app/smarthome/dev/bin'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR = '/app/smarthome/dev/bin'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HSCRIPT_DIR = '/app/smarthome/dev/bin'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR = '/app/smarthome/dev/templates/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR = '/app/smarthome/dev/templates/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1HHTML_DIR = '/app/smarthome/dev/templates/'[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Configuration =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcurrent_pid = os.getpid()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcurrent_pid = os.getpid()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hcurrent_pid = os.getpid()[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Get Current PID =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Get Current PID =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Get Current PID =====[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql import MySQLError[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql import MySQLError[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql import MySQLError[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql.cursors import DictCursor[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql.cursors import DictCursor[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom pymysql.cursors import DictCursor[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport pymysql[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport pymysql[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport pymysql[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport json[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport json[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport json[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport secrets[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport secrets[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport secrets[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom werkzeug.security import generate_password_hash, check_password_hash[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom werkzeug.security import generate_password_hash, check_password_hash[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom werkzeug.security import generate_password_hash, check_password_hash[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom functools import wraps[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom functools import wraps[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom functools import wraps[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom datetime import datetime, timedelta[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom datetime import datetime, timedelta[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hfrom datetime import datetime, timedelta[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport logging[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport logging[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport logging[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport subprocess[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport subprocess[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport subprocess[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport time[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport time[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport time[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport sys[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport sys[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport sys[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport os[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport os[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Himport os[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/usr/bin/env python3[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/usr/bin/env python3[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H#!/usr/bin/env python3[?25h






























































[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H




















[62C[62C[62C[?2004l[>4;m)[?2004l[>4;m)[?2004l[>4;m)[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?25l[28;37r[28;1H[L[1;38r[28;1H[?25h[?25l[29;37r[29;1H[2L[1;38r[28;1HGRAFANA_USER = os.getenv("GRAFANA_USER", "admin")
GRAFANA_PASS = os.getenv("GRAFANA_PASS", "admin")
[?25h[?25l[29;37r[29;1H[2L[1;38r[28;1HGRAFANA_USER = os.getenv("GRAFANA_USER", "admin")
GRAFANA_PASS = os.getenv("GRAFANA_PASS", "admin")
[?25h[?25l[29;37r[29;1H[2L[1;38r[28;1HGRAFANA_USER = os.getenv("GRAFANA_USER", "admin")
GRAFANA_PASS = os.getenv("GRAFANA_PASS", "admin")
[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[29;1H[29;1H[29;1H[28;1H[28;1H[28;1H[27;1H[27;1H[27;1H[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[21;1H[21;1H[21;1H[20;1H[20;1H[20;1H[19;1H[19;1H[19;1H[18;1H[18;1H[18;1H[17;1H[17;1H[17;1H[16;1H[16;1H[16;1H[15;1H[15;1H[15;1H


[92C[92C[92C[?2004l[>4;mt[?2004l[>4;mt[?2004l[>4;mt[?25l[17;37r[17;1H[L[1;38r[17;1H[?25h[?25l[17;37r[17;1H[L[1;38r[17;1H[?25h[?25l[17;37r[17;1H[L[1;38r[17;1H[?25h[?25li[?25h[?25li[?25h[?25li[?25h[?25lm[?25h[?25lm[?25h[?25lm[?25h[?25lp[?25h[?25lp[?25h[?25lp[?25h[?25lo[?25h[?25lo[?25h[?25lo[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25lp[?25h[?25lp[?25h[?25lp[?25h[?25lo[?25h[?25lo[?25h[?25lo[?25h[?25lr[?25h[?25lr[?25h[?25lr[?25h[?25lt[?25h[?25lt[?25h[?25lt[?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25lr[?25h[?25lr[?25h[?25lr[?25h[?25le[?25h[?25le[?25h[?25le[?25h[?25lq[?25h[?25lq[?25h[?25lq[?25h[?25lu[?25h[?25lu[?25h[?25lu[?25h[?25le[?25h[?25le[?25h[?25le[?25h[?25ls[?25h[?25ls[?25h[?25ls[?25h[?25lt[?25h[?25lt[?25h[?25lt[?25h[?25ls[?25h[?25ls[?25h[?25ls[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m


[19;15H[19;15H[19;15H[20;15H[20;15H[20;15H


[22;15H[22;15H[22;15H[23;15H[23;15H[23;15H[24;15H[24;15H[24;15H[25;15H[25;15H[25;15H[26;15H[26;15H[26;15H[27;15H[27;15H[27;15H[28;15H[28;15H[28;15H[29;15H[29;15H[29;15H[30;15H[30;15H[30;15H





[33;15H[33;15H[33;15H[34;15H[34;15H[34;15H[35;15H[35;15H[35;15H[36;15H[36;15H[36;15H[37;15H[37;15H[37;15H[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Logging Configuration =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Logging Configuration =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Logging Configuration =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogging.basicConfig([?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogging.basicConfig([?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogging.basicConfig([?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hlevel=logging.DEBUG,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hformat='%(asctime)s - %(name)s - %(levelname)s - %(message)s',[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hhandlers=[[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogging.StreamHandler()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;5H][?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1H)[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hlogger = logging.getLogger('SHEMS-Server')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Application Setup =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ = Flask(__name__, template_folder=HTML_DIR)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SECURE'] = True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_HTTPONLY'] = True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Happ.config['SESSION_COOKIE_SAMESITE'] = 'Lax'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Database Configuration =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hclass DatabaseManager:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HMAX_RETRIES = 3[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;5HRETRY_DELAY = 2[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef __init__(self):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_user = os.getenv('DB_USER', 'shems_mis')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_pass = os.getenv('DB_PASS', 'RAS@23')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hself.db_name = os.getenv('DB_NAME', 'shems_db')[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdef get_connection(self):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"""Get a database connection with retry logic"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hattempts = 0[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlast_error = None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hwhile attempts < self.MAX_RETRIES:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hconn = pymysql.connect([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hhost='localhost',[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Huser=self.db_user,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hpassword=self.db_pass,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hdatabase=self.db_name,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursorclass=DictCursor,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hconnect_timeout=5,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hautocommit=False[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17H)[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.info("Database connection established")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn conn[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hexcept MySQLError as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlast_error = e[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hattempts += 1[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Htime.sleep(self.RETRY_DELAY)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;8H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdb_manager = DatabaseManager()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H# ===== Helper Functions =====[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_pi_ip():[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Get Raspberry Pi IP address with fallback"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn ip if ip else '127.0.0.1'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn '127.0.0.1'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef is_service_running(service_name):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Check if a systemd service is running"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H['systemctl', 'is-active', service_name],[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstdout=subprocess.PIPE,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hstderr=subprocess.PIPE,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn result.stdout.strip() == 'active'[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hreturn False[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef get_dashboard_uid_from_title(title):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H[[?25h[?25l[1;37r[37;1H
[1;38r[37;13H[[?25h[?25l[1;37r[37;1H
[1;38r[37;13H[[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"curl", "-s", "-u", "admin:admin",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"curl", "-s", "-u", "admin:admin",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17H"curl", "-s", "-u", "admin:admin",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hf"{GRAFANA_URL}/api/search?query={title}"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hf"{GRAFANA_URL}/api/search?query={title}"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hf"{GRAFANA_URL}/api/search?query={title}"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13H],[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcapture_output=True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcapture_output=True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcapture_output=True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Htext=True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcheck=False[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcheck=False[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hcheck=False[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9H)[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif result.returncode != 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif result.returncode != 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif result.returncode != 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hreturn None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(result.stdout)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(result.stdout)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hdashboards = json.loads(result.stdout)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hfor dash in dashboards:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hif dash.get("title", "").strip().lower() == title.strip().lower():[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Huid = dash.get("uid")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hreturn uid[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.warning(f"No dashboard matched title '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Error fetching dashboard UID for '{title}': {e}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[37;15H[?25h[36;15H[36;15H[36;15H[35;15H[35;15H[35;15H[34;8H[34;8H[34;8H[33;4H[33;4H[33;4H[32;15H[32;15H[32;15H[31;15H[31;15H[31;15H[30;15H[30;15H[30;15H[29;15H[29;15H[29;15H[28;15H[28;15H[28;15H[27;8H[27;8H[27;8H[26;15H[26;15H[26;15H[25;4H[25;4H[25;4H[24;15H[24;15H[24;15H[23;15H[23;15H[23;15H[22;15H[22;15H[22;15H[21;15H[21;15H[21;15H[20;4H[20;4H[20;4H[19;15H[19;15H[19;15H[18;15H[18;15H[18;15H[17;15H[17;15H[17;15H[16;15H[16;15H[16;15H[15;1H[15;1H[15;1H[14;15H[14;15H[14;15H[13;15H[13;15H[13;15H[12;1H[12;1H[12;1H[11;15H[11;15H[11;15H[10;15H[10;15H[10;15H[9;15H[9;15H[9;15H[8;15H[8;15H[8;15H[7;1H[7;1H[7;1H[6;15H[6;15H[6;15H[5;15H[5;15H[5;15H[4;15H[4;15H[4;15H[3;15H[3;15H[3;15H[2;15H[2;15H[2;15H[1;15H[1;15H[1;15H[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn None[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn None[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hreturn None[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hlogger.error(f"curl command failed for title '{title}': {result.stderr.strip()}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif result.returncode != 0:[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif result.returncode != 0:[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hif result.returncode != 0:[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcheck=False[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcheck=False[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcheck=False[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcapture_output=True,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcapture_output=True,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hcapture_output=True,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H],[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hf"{GRAFANA_URL}/api/search?query={title}"[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hf"{GRAFANA_URL}/api/search?query={title}"[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17Hf"{GRAFANA_URL}/api/search?query={title}"[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"curl", "-s", "-u", "admin:admin",[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"curl", "-s", "-u", "admin:admin",[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;17H"curl", "-s", "-u", "admin:admin",[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H[[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H[[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H[[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_dashboard_uid_from_title(title):[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn False[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hlogger.error(f"Service check failed for {service_name}: {str(e)}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept Exception as e:[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn result.stdout.strip() == 'active'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;9H)[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Htext=True[1;15H[?25h[2;9H[2;9H[2;9H[3;15H[3;15H[3;15H[4;15H[4;15H[4;15H[5;15H[5;15H[5;15H[6;15H[6;15H[6;15H[7;15H[7;15H[7;15H[6;15H[6;15H[6;15H   FFFaaalllsss[?2004l[>4;me[?2004l[>4;me[?2004l[>4;me[?25l[7;37r[7;1H[L[1;38r[7;1H[?25h[?25l[7;37r[7;1H[L[1;38r[7;1H[?25h[?25l[7;37r[7;1H[L[1;38r[7;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m


[?25l[8;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Herrors = [][8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Herrors = [][8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Herrors = [][8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H# Check required fields[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H# Check required fields[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H# Check required fields[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H# Validate numeric fields[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H# Validate numeric fields[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5H# Validate numeric fields[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Htry:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Htry:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Htry:[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept ValueError:[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept ValueError:[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept ValueError:[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[8;13H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Htry:[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Htry:[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Htry:[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[8;17H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept ValueError:[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept ValueError:[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hexcept ValueError:[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[8;9H[?25h[?25l[8;37r[37;1H
[1;38r[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[8;5H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[8;1H[?25h[?25l[8;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[8;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[9;37r[9;1H[L[1;38r[9;1H[?25h[?25l[9;37r[9;1H[L[1;38r[9;1H[?25h[?25l[9;37r[9;1H[L[1;38r[9;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[8;1H[8;1H[8;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[9;37r[9;1H[16L[1;38r[8;1Hdef get_dashboard_uid_from_title(title):
    try:[10;9Hurl = f"{GRAFANA_URL}/api/search?query={title}"[11;9Hresponse = requests.get(url, auth=(GRAFANA_USER, GRAFANA_PASS), timeout=5)[12;9Hif response.status_code == 200:[13;13Hdashboards = response.json()[14;13Hfor dash in dashboards:[15;17Hif dash.get("title", "").strip().lower() == title.strip().lower():[16;21Huid = dash.get("uid")[17;21Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[18;21Hreturn uid[19;13Hlogger.warning(f"No dashboard matched title '{title}'")[20;9Helse:[21;13Hlogger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")
    except Exception as e:[23;9Hlogger.error(f"Exception during Grafana dashboard UID fetch: {e}")
    return None[?25h[?25l[9;37r[9;1H[16L[1;38r[8;1Hdef get_dashboard_uid_from_title(title):
    try:[10;9Hurl = f"{GRAFANA_URL}/api/search?query={title}"[11;9Hresponse = requests.get(url, auth=(GRAFANA_USER, GRAFANA_PASS), timeout=5)[12;9Hif response.status_code == 200:[13;13Hdashboards = response.json()[14;13Hfor dash in dashboards:[15;17Hif dash.get("title", "").strip().lower() == title.strip().lower():[16;21Huid = dash.get("uid")[17;21Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[18;21Hreturn uid[19;13Hlogger.warning(f"No dashboard matched title '{title}'")[20;9Helse:[21;13Hlogger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")
    except Exception as e:[23;9Hlogger.error(f"Exception during Grafana dashboard UID fetch: {e}")
    return None[?25h[?25l[9;37r[9;1H[16L[1;38r[8;1Hdef get_dashboard_uid_from_title(title):
    try:[10;9Hurl = f"{GRAFANA_URL}/api/search?query={title}"[11;9Hresponse = requests.get(url, auth=(GRAFANA_USER, GRAFANA_PASS), timeout=5)[12;9Hif response.status_code == 200:[13;13Hdashboards = response.json()[14;13Hfor dash in dashboards:[15;17Hif dash.get("title", "").strip().lower() == title.strip().lower():[16;21Huid = dash.get("uid")[17;21Hlogger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")[18;21Hreturn uid[19;13Hlogger.warning(f"No dashboard matched title '{title}'")[20;9Helse:[21;13Hlogger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")
    except Exception as e:[23;9Hlogger.error(f"Exception during Grafana dashboard UID fetch: {e}")
    return None[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwwqqq!!![?25l[38;4H[K[38;4H[?25h[?25l[38;4H[K[38;4H[?25h[?25l[38;4H[K[38;4H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;3H[K[38;3H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h[?25l[38;2H[K[38;2H[?25h [24;15H [24;15H [24;15H[23;15H[23;15H[23;15H[22;15H[22;15H[22;15H[21;15H[21;15H[21;15H[20;13H[20;13H[20;13H[19;15H[19;15H[19;15H[18;15H[18;15H[18;15H[17;15H[17;15H[17;15H[16;15H[16;15H[16;15H[15;15H[15;15H[15;15H[14;15H[14;15H[14;15H[13;15H[13;15H[13;15H[12;15H[12;15H[12;15H[11;15H[11;15H[11;15H[10;15H[10;15H[10;15H[9;8H[9;8H[9;8H[8;15H[8;15H[8;15H[7;1H[7;1H[7;1H[6;15H[6;15H[6;15H[5;15H[5;15H[5;15H[4;15H[4;15H[4;15H[3;15H[3;15H[3;15H[2;9H[2;9H[2;9H[1;15H[1;15H[1;15H[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstderr=subprocess.PIPE,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13Hstdout=subprocess.PIPE,[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;13H['systemctl', 'is-active', service_name],[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hresult = subprocess.run([1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Check if a systemd service is running"""[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef is_service_running(service_name):[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn '127.0.0.1'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hexcept:[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hreturn ip if ip else '127.0.0.1'[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Htry:[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5H"""Get Raspberry Pi IP address with fallback"""[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdef get_pi_ip():[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H# ===== Helper Functions =====[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1Hdb_manager = DatabaseManager()[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;9Hraise ConnectionError(f"Could not connect to database: {str(last_error)}")[1;15H[?25h


[3;15H[3;15H[3;15H


[5;15H[5;15H[5;15H[6;15H[6;15H[6;15H[7;15H[7;15H[7;15H[8;8H[8;8H[8;8H[9;15H[9;15H[9;15H[10;15H[10;15H[10;15H[11;11H[11;11H[11;11H[12;15H[12;15H[12;15H


[14;15H[14;15H[14;15H[15;15H[15;15H[15;15H[16;8H[16;8H[16;8H[17;15H[17;15H[17;15H[18;15H[18;15H[18;15H[19;15H[19;15H[19;15H[20;15H[20;15H[20;15H[21;15H[21;15H[21;15H[22;9H[22;9H[22;9H[23;15H[23;15H[23;15H[24;15H[24;15H[24;15H[25;15H[25;15H[25;15H[26;15H[26;15H[26;15H


[28;15H[28;15H[28;15H[29;8H[29;8H[29;8H[30;15H[30;15H[30;15H[31;15H[31;15H[31;15H[32;15H[32;15H[32;15H[33;15H[33;15H[33;15H[34;15H[34;15H[34;15H[35;15H[35;15H[35;15H[36;15H[36;15H[36;15H[37;15H[37;15H[37;15H[?25l[1;37r[37;1H
[1;38r[37;21Hreturn uid[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn uid[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hreturn uid[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No dashboard matched title '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No dashboard matched title '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.warning(f"No dashboard matched title '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Helse:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hlogger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept Exception as e:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Exception during Grafana dashboard UID fetch: {e}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Exception during Grafana dashboard UID fetch: {e}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hlogger.error(f"Exception during Grafana dashboard UID fetch: {e}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn None[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef grafana_dashboard_url(uid):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef validate_submission(form_data):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Validate user submission data"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hrequired_fields = ['username', 'password', 'numDevices', 'numDays'][37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;5Herrors = [][?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Check required fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor field in required_fields:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif field not in form_data or not form_data[field]:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append(f"Missing required field: {field}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H# Validate numeric fields[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_devices = int(form_data.get('numDevices', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_devices <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of devices must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of devices")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;5Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hnum_days = int(form_data.get('numDays', 0))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Hif num_days <= 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Herrors.append("Number of days must be positive")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hexcept ValueError:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Herrors.append("Invalid number of days")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;4H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hreturn errors if errors else None[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1Hdef setup_grafana_dashboards(user_id):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H"""Import Grafana dashboards after data exists and ensure dashboards exist"""[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hmax_retries = 5[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hretry_delay = 10[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboards_expected = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"SHEMS Overview": "overview-dashboard.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Power Analysis": "power-analysis.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Energy Analysis": "energy-analysis.json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9H"Device Details": "device-details.json"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5H}[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hdashboard_dir = "/app/smarthome/grafana/grafana_dashboards"[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;5Hfor attempt in range(max_retries):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;9Htry:[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;13Hwith db_manager.get_connection() as conn:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;17Hwith conn.cursor() as cursor:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hcursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hif cursor.fetchone()["COUNT(*)"] > 0:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hlogger.info("Device data available, verifying Grafana dashboards...")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hfor title, filename in dashboards_expected.items():[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Huid = get_dashboard_uid_from_title(title)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif uid:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Dashboard '{title}' already exists (UID: {uid})")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hlogger.warning(f"Dashboard '{title}' missing, importing...")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hdashboard_path = os.path.join(dashboard_dir, filename)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif not os.path.exists(dashboard_path):[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Dashboard file missing: {dashboard_path}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcontinue[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hwith open(dashboard_path, 'r') as f:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hdashboard_json = json.load(f)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[37;15H[?25h[36;15H[36;15H[36;15H[35;1H[35;1H[35;1H[34;15H[34;15H[34;15H[33;15H[33;15H[33;15H[32;1H[32;1H[32;1H[31;15H[31;15H[31;15H[30;15H[30;15H[30;15H[29;15H[29;15H[29;15H[28;15H[28;15H[28;15H[27;15H[27;15H[27;15H[26;1H[26;1H[26;1H[25;15H[25;15H[25;15H[24;15H[24;15H[24;15H[23;15H[23;15H[23;15H[22;15H[22;15H[22;15H[21;15H[21;15H[21;15H[20;1H[20;1H[20;1H[19;15H[19;15H[19;15H[18;15H[18;15H[18;15H[17;15H[17;15H[17;15H[16;15H[16;15H[16;15H[15;15H[15;15H[15;15H[14;12H[14;12H[14;12H[13;15H[13;15H[13;15H[12;1H[12;1H[12;1H[11;15H[11;15H[11;15H[10;5H[10;5H[10;5H[9;15H[9;15H[9;15H[8;15H[8;15H[8;15H[7;15H[7;15H[7;15H[6;15H[6;15H[6;15H[5;15H[5;15H[5;15H[4;15H[4;15H[4;15H[3;15H[3;15H[3;15H[2;15H[2;15H[2;15H[1;15H[1;15H[1;15H[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;1H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;5Hreturn errors if errors else None[1;15H[?25h[?25l[1;37r[1;1H[L[1;38r[1;4H[?25h[?25l[1;37r[1;1H[L[1;38r[1;4H[?25h[?25l[1;37r[1;1H[L[1;38r[1;4H[?25h[2;15H[2;15H[2;15H


[4;15H[4;15H[4;15H[5;15H[5;15H[5;15H[6;15H[6;15H[6;15H[7;15H[7;15H[7;15H[8;15H[8;15H[8;15H[9;15H[9;15H[9;15H[10;15H[10;15H[10;15H[11;15H[11;15H[11;15H[12;15H[12;15H[12;15H
    
    
    [14;15H[14;15H[14;15H


[16;15H[16;15H[16;15H[17;12H[17;12H[17;12H[18;15H[18;15H[18;15H[19;15H[19;15H[19;15H[20;15H[20;15H[20;15H[21;15H[21;15H[21;15H[22;15H[22;15H[22;15H


[24;15H[24;15H[24;15H[25;15H[25;15H[25;15H[26;15H[26;15H[26;15H[27;15H[27;15H[27;15H[28;15H[28;15H[28;15H


[30;15H[30;15H[30;15H[31;15H[31;15H[31;15H[32;15H[32;15H[32;15H[33;15H[33;15H[33;15H[34;15H[34;15H[34;15H


[36;15H[36;15H[36;15H[37;15H[37;15H[37;15H[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Himport_payload = {[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"dashboard": dashboard_json,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"overwrite": True,[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H"folderId": 0[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29H}[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hresult = subprocess.run([37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33H["curl", "-s", "-X", "POST", f"{GRAFANA_URL}/api/dashboards/db",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-H", "Content-Type: application/json",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-u", "admin:admin",[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;34H"-d", json.dumps(import_payload)],[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hcapture_output=True, text=True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29H)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Hif '"status":"success"' in result.stdout:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.info(f"Successfully imported '{title}'")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;29Helse:[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;33Hlogger.error(f"Failed to import '{title}': {result.stdout.strip() or result.stderr.strip()}")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;25Hreturn True[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;1H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Hlogger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[37;15H[?25h[?25l[1;37r[37;1H
[1;38r[37;21Htime.sleep(retry_delay)[37;15H[?25h[36;15H[36;15H[36;15H[35;1H[35;1H[35;1H[34;15H[34;15H[34;15H[33;1H[33;1H[33;1H[32;15H[32;15H[32;15H[31;15H[31;15H[31;15H[30;15H[30;15H[30;15H[29;15H[29;15H[29;15H[28;1H[28;1H[28;1H[27;15H[27;15H[27;15H[26;15H[26;15H[26;15H[25;15H[25;15H[25;15H[24;15H[24;15H[24;15H[23;15H[23;15H[23;15H[22;15H[22;15H[22;15H[21;15H[21;15H[21;15H[22;15H[22;15H[22;15H[21;15H[21;15H[21;15H[?25l[21;37r[37;1H
[1;38r[21;33H[?25h[?25l[21;37r[37;1H
[1;38r[21;33H[?25h[?25l[21;37r[37;1H
[1;38r[21;33H[?25h[?25l[21;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[21;34H[?25h[?25l[21;37r[37;1H
[1;38r[21;33H[?25h[?25l[21;37r[37;1H
[1;38r[21;33H[?25h[?25l[21;37r[37;1H
[1;38r[21;33H[?25h[?25l[21;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[21;29H[?25h[?25l[21;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[21;29H[?25h[?25l[21;37r[37;1H
[1;38r[37;5Hlogger.error("Dashboard import timeout - no data generated or dashboards failed to import")[21;29H[?25h[?25l[21;37r[37;1H
[1;38r[37;5Hreturn False[21;1H[?25h[?25l[21;37r[37;1H
[1;38r[37;5Hreturn False[21;1H[?25h[?25l[21;37r[37;1H
[1;38r[37;5Hreturn False[21;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[21;25H[?25h[?25l[21;25H[?25h[?25l[21;25H[?25h[?25li[?25h[?25li[?25h[?25li[?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?2004h[>4;2m[?25l[21;25H[K[21;24H[?25h[?4m[?2004h[>4;2m[?25l[21;25H[K[21;24H[?25h[?4m[?2004h[>4;2m[?25l[21;25H[K[21;24H[?25h[?4m[?25l[21;16H[?25h[?25l[21;16H[?25h[?25l[21;16H[?25h[?2004l[>4;m[21;9H[?2004l[>4;m[21;9H[?2004l[>4;m[21;9H[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l [?25h[?25l[22;37r[22;1H[6L[1;38r[21;29Hresponse = requests.post(
    f"{GRAFANA_URL}/api/dashboards/db",
    auth=(GRAFANA_USER, GRAFANA_PASS),
    headers={"Content-Type": "application/json"},
    json=import_payload,
    timeout=10
)[?25h[?25l[22;37r[22;1H[6L[1;38r[21;29Hresponse = requests.post(
    f"{GRAFANA_URL}/api/dashboards/db",
    auth=(GRAFANA_USER, GRAFANA_PASS),
    headers={"Content-Type": "application/json"},
    json=import_payload,
    timeout=10
)[?25h[?25l[22;37r[22;1H[6L[1;38r[21;29Hresponse = requests.post(
    f"{GRAFANA_URL}/api/dashboards/db",
    auth=(GRAFANA_USER, GRAFANA_PASS),
    headers={"Content-Type": "application/json"},
    json=import_payload,
    timeout=10
)[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[26;1H[26;1H[26;1H[25;1H[25;1H[25;1H[24;1H[24;1H[24;1H[23;1H[23;1H[23;1H[22;1H[22;1H[22;1H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;9H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;9H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;9H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;17H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;17H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;17H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;25H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;25H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;25H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;33H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;33H[?25h[?25l            f"{GRAFANA_URL}/api/dashboards/db",[22;33H[?25h[?25l[22;25H[?25h[?25l[22;25H[?25h[?25l[22;25H[?25h[?25l[22;17H[?25h[?25l[22;17H[?25h[?25l[22;17H[?25h[?25l[22;9H[?25h[?25l[22;9H[?25h[?25l[22;9H[?25h[?25lx[?25h[?25lx[?25h[?25lx[?25h[?2004h[>4;2m[?25l    f"{GRAFANA_URL}/api/dashboards/db",[22;49H[K[22;9H[?25h[?4m[?2004h[>4;2m[?25l    f"{GRAFANA_URL}/api/dashboards/db",[22;49H[K[22;9H[?25h[?4m[?2004h[>4;2m[?25l    f"{GRAFANA_URL}/api/dashboards/db",[22;49H[K[22;9H[?25h[?4m[?25l    f"{GRAFANA_URL}/api/dashboards/db",[22;48H[K[22;9H[?25h[?25l    f"{GRAFANA_URL}/api/dashboards/db",[22;48H[K[22;9H[?25h[?25l    f"{GRAFANA_URL}/api/dashboards/db",[22;48H[K[22;9H[?25h[?25l   f"{GRAFANA_URL}/api/dashboards/db",[22;47H[K[22;9H[?25h[?25l   f"{GRAFANA_URL}/api/dashboards/db",[22;47H[K[22;9H[?25h[?25l   f"{GRAFANA_URL}/api/dashboards/db",[22;47H[K[22;9H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;46H[K[22;9H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;46H[K[22;9H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;46H[K[22;9H[?25h[?25l f"{GRAFANA_URL}/api/dashboards/db",[22;45H[K[22;9H[?25h[?25l f"{GRAFANA_URL}/api/dashboards/db",[22;45H[K[22;9H[?25h[?25l f"{GRAFANA_URL}/api/dashboards/db",[22;45H[K[22;9H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;10H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;10H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;10H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;11H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;11H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;11H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;12H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;12H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;12H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;13H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;13H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;13H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;14H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;14H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;14H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;15H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;15H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;15H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;16H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;16H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;16H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;17H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;17H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;17H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;18H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;18H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;18H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;19H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;19H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;19H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;20H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;20H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;20H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;21H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;21H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;21H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;22H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;22H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;22H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;23H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;23H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;23H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;24H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;24H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;24H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;25H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;25H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;25H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;26H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;26H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;26H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;27H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;27H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;27H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;28H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;28H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;28H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;29H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;29H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;29H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;30H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;30H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;30H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;31H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;31H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;31H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;32H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;32H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;32H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;33H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;33H[?25h[?25l  f"{GRAFANA_URL}/api/dashboards/db",[22;33H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[23;32H[23;32H[23;32H   [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l auth=(GRAFANA_USER, GRAFANA_PASS),     [?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),     [?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),     [?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;7H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;7H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;7H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;8H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;8H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;8H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;9H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;9H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;9H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;10H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;10H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;10H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;11H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;11H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;11H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;12H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;12H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;12H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;13H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;13H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;13H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;14H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;14H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;14H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;15H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;15H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;15H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;16H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;16H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;16H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;17H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;17H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;17H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;18H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;18H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;18H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;19H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;19H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;19H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;20H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;20H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;20H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;21H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;21H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;21H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;22H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;22H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;22H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;23H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;23H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;23H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;24H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;24H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;24H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;25H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;25H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;25H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;26H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;26H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;26H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;27H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;27H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;27H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;28H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;28H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;28H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;29H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;29H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;29H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;30H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;30H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;30H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;31H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;31H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;31H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;32H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;32H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;32H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;33H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;33H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;33H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;34H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;34H[?25h[?25l auth=(GRAFANA_USER, GRAFANA_PASS),[23;34H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[24;33H[24;33H[24;33H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l headers={"Content-Type": "application/json"},     [?25h[?25l headers={"Content-Type": "application/json"},     [?25h[?25l headers={"Content-Type": "application/json"},     [?25h[?25l headers={"Content-Type": "application/json"},[24;7H[?25h[?25l headers={"Content-Type": "application/json"},[24;7H[?25h[?25l headers={"Content-Type": "application/json"},[24;7H[?25h[?25l headers={"Content-Type": "application/json"},[24;8H[?25h[?25l headers={"Content-Type": "application/json"},[24;8H[?25h[?25l headers={"Content-Type": "application/json"},[24;8H[?25h[?25l headers={"Content-Type": "application/json"},[24;9H[?25h[?25l headers={"Content-Type": "application/json"},[24;9H[?25h[?25l headers={"Content-Type": "application/json"},[24;9H[?25h[?25l headers={"Content-Type": "application/json"},[24;10H[?25h[?25l headers={"Content-Type": "application/json"},[24;10H[?25h[?25l headers={"Content-Type": "application/json"},[24;10H[?25h[?25l headers={"Content-Type": "application/json"},[24;11H[?25h[?25l headers={"Content-Type": "application/json"},[24;11H[?25h[?25l headers={"Content-Type": "application/json"},[24;11H[?25h[?25l headers={"Content-Type": "application/json"},[24;12H[?25h[?25l headers={"Content-Type": "application/json"},[24;12H[?25h[?25l headers={"Content-Type": "application/json"},[24;12H[?25h[?25l headers={"Content-Type": "application/json"},[24;13H[?25h[?25l headers={"Content-Type": "application/json"},[24;13H[?25h[?25l headers={"Content-Type": "application/json"},[24;13H[?25h[?25l headers={"Content-Type": "application/json"},[24;14H[?25h[?25l headers={"Content-Type": "application/json"},[24;14H[?25h[?25l headers={"Content-Type": "application/json"},[24;14H[?25h[?25l headers={"Content-Type": "application/json"},[24;15H[?25h[?25l headers={"Content-Type": "application/json"},[24;15H[?25h[?25l headers={"Content-Type": "application/json"},[24;15H[?25h[?25l headers={"Content-Type": "application/json"},[24;16H[?25h[?25l headers={"Content-Type": "application/json"},[24;16H[?25h[?25l headers={"Content-Type": "application/json"},[24;16H[?25h[?25l headers={"Content-Type": "application/json"},[24;17H[?25h[?25l headers={"Content-Type": "application/json"},[24;17H[?25h[?25l headers={"Content-Type": "application/json"},[24;17H[?25h[?25l headers={"Content-Type": "application/json"},[24;18H[?25h[?25l headers={"Content-Type": "application/json"},[24;18H[?25h[?25l headers={"Content-Type": "application/json"},[24;18H[?25h[?25l headers={"Content-Type": "application/json"},[24;19H[?25h[?25l headers={"Content-Type": "application/json"},[24;19H[?25h[?25l headers={"Content-Type": "application/json"},[24;19H[?25h[?25l headers={"Content-Type": "application/json"},[24;20H[?25h[?25l headers={"Content-Type": "application/json"},[24;20H[?25h[?25l headers={"Content-Type": "application/json"},[24;20H[?25h[?25l headers={"Content-Type": "application/json"},[24;21H[?25h[?25l headers={"Content-Type": "application/json"},[24;21H[?25h[?25l headers={"Content-Type": "application/json"},[24;21H[?25h[?25l headers={"Content-Type": "application/json"},[24;22H[?25h[?25l headers={"Content-Type": "application/json"},[24;22H[?25h[?25l headers={"Content-Type": "application/json"},[24;22H[?25h[?25l headers={"Content-Type": "application/json"},[24;23H[?25h[?25l headers={"Content-Type": "application/json"},[24;23H[?25h[?25l headers={"Content-Type": "application/json"},[24;23H[?25h[?25l headers={"Content-Type": "application/json"},[24;24H[?25h[?25l headers={"Content-Type": "application/json"},[24;24H[?25h[?25l headers={"Content-Type": "application/json"},[24;24H[?25h[?25l headers={"Content-Type": "application/json"},[24;25H[?25h[?25l headers={"Content-Type": "application/json"},[24;25H[?25h[?25l headers={"Content-Type": "application/json"},[24;25H[?25h[?25l headers={"Content-Type": "application/json"},[24;26H[?25h[?25l headers={"Content-Type": "application/json"},[24;26H[?25h[?25l headers={"Content-Type": "application/json"},[24;26H[?25h[?25l headers={"Content-Type": "application/json"},[24;27H[?25h[?25l headers={"Content-Type": "application/json"},[24;27H[?25h[?25l headers={"Content-Type": "application/json"},[24;27H[?25h[?25l headers={"Content-Type": "application/json"},[24;28H[?25h[?25l headers={"Content-Type": "application/json"},[24;28H[?25h[?25l headers={"Content-Type": "application/json"},[24;28H[?25h[?25l headers={"Content-Type": "application/json"},[24;29H[?25h[?25l headers={"Content-Type": "application/json"},[24;29H[?25h[?25l headers={"Content-Type": "application/json"},[24;29H[?25h[?25l headers={"Content-Type": "application/json"},[24;30H[?25h[?25l headers={"Content-Type": "application/json"},[24;30H[?25h[?25l headers={"Content-Type": "application/json"},[24;30H[?25h[?25l headers={"Content-Type": "application/json"},[24;31H[?25h[?25l headers={"Content-Type": "application/json"},[24;31H[?25h[?25l headers={"Content-Type": "application/json"},[24;31H[?25h[?25l headers={"Content-Type": "application/json"},[24;32H[?25h[?25l headers={"Content-Type": "application/json"},[24;32H[?25h[?25l headers={"Content-Type": "application/json"},[24;32H[?25h[?25l headers={"Content-Type": "application/json"},[24;33H[?25h[?25l headers={"Content-Type": "application/json"},[24;33H[?25h[?25l headers={"Content-Type": "application/json"},[24;33H[?25h[?25l headers={"Content-Type": "application/json"},[24;34H[?25h[?25l headers={"Content-Type": "application/json"},[24;34H[?25h[?25l headers={"Content-Type": "application/json"},[24;34H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[25;24H[25;24H[25;24H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l json=import_payload,     [?25h[?25l json=import_payload,     [?25h[?25l json=import_payload,     [?25h[?25l json=import_payload,[25;7H[?25h[?25l json=import_payload,[25;7H[?25h[?25l json=import_payload,[25;7H[?25h[?25l json=import_payload,[25;8H[?25h[?25l json=import_payload,[25;8H[?25h[?25l json=import_payload,[25;8H[?25h[?25l json=import_payload,[25;9H[?25h[?25l json=import_payload,[25;9H[?25h[?25l json=import_payload,[25;9H[?25h[?25l json=import_payload,[25;10H[?25h[?25l json=import_payload,[25;10H[?25h[?25l json=import_payload,[25;10H[?25h[?25l json=import_payload,[25;11H[?25h[?25l json=import_payload,[25;11H[?25h[?25l json=import_payload,[25;11H[?25h[?25l json=import_payload,[25;12H[?25h[?25l json=import_payload,[25;12H[?25h[?25l json=import_payload,[25;12H[?25h[?25l json=import_payload,[25;13H[?25h[?25l json=import_payload,[25;13H[?25h[?25l json=import_payload,[25;13H[?25h[?25l json=import_payload,[25;14H[?25h[?25l json=import_payload,[25;14H[?25h[?25l json=import_payload,[25;14H[?25h[?25l json=import_payload,[25;15H[?25h[?25l json=import_payload,[25;15H[?25h[?25l json=import_payload,[25;15H[?25h[?25l json=import_payload,[25;16H[?25h[?25l json=import_payload,[25;16H[?25h[?25l json=import_payload,[25;16H[?25h[?25l json=import_payload,[25;17H[?25h[?25l json=import_payload,[25;17H[?25h[?25l json=import_payload,[25;17H[?25h[?25l json=import_payload,[25;18H[?25h[?25l json=import_payload,[25;18H[?25h[?25l json=import_payload,[25;18H[?25h[?25l json=import_payload,[25;19H[?25h[?25l json=import_payload,[25;19H[?25h[?25l json=import_payload,[25;19H[?25h[?25l json=import_payload,[25;20H[?25h[?25l json=import_payload,[25;20H[?25h[?25l json=import_payload,[25;20H[?25h[?25l json=import_payload,[25;21H[?25h[?25l json=import_payload,[25;21H[?25h[?25l json=import_payload,[25;21H[?25h[?25l json=import_payload,[25;22H[?25h[?25l json=import_payload,[25;22H[?25h[?25l json=import_payload,[25;22H[?25h[?25l json=import_payload,[25;23H[?25h[?25l json=import_payload,[25;23H[?25h[?25l json=import_payload,[25;23H[?25h[?25l json=import_payload,[25;24H[?25h[?25l json=import_payload,[25;24H[?25h[?25l json=import_payload,[25;24H[?25h[?25l json=import_payload,[25;25H[?25h[?25l json=import_payload,[25;25H[?25h[?25l json=import_payload,[25;25H[?25h[?25l json=import_payload,[25;26H[?25h[?25l json=import_payload,[25;26H[?25h[?25l json=import_payload,[25;26H[?25h[?25l json=import_payload,[25;27H[?25h[?25l json=import_payload,[25;27H[?25h[?25l json=import_payload,[25;27H[?25h[?25l json=import_payload,[25;28H[?25h[?25l json=import_payload,[25;28H[?25h[?25l json=import_payload,[25;28H[?25h[?25l json=import_payload,[25;29H[?25h[?25l json=import_payload,[25;29H[?25h[?25l json=import_payload,[25;29H[?25h[?25l json=import_payload,[25;30H[?25h[?25l json=import_payload,[25;30H[?25h[?25l json=import_payload,[25;30H[?25h[?25l json=import_payload,[25;31H[?25h[?25l json=import_payload,[25;31H[?25h[?25l json=import_payload,[25;31H[?25h[?25l json=import_payload,[25;32H[?25h[?25l json=import_payload,[25;32H[?25h[?25l json=import_payload,[25;32H[?25h[?25l json=import_payload,[25;33H[?25h[?25l json=import_payload,[25;33H[?25h[?25l json=import_payload,[25;33H[?25h[?25l json=import_payload,[25;34H[?25h[?25l json=import_payload,[25;34H[?25h[?25l json=import_payload,[25;34H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[26;14H[26;14H[26;14H         [?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l timeout=10     [?25h[?25l timeout=10     [?25h[?25l timeout=10     [?25h[?25l timeout=10[26;7H[?25h[?25l timeout=10[26;7H[?25h[?25l timeout=10[26;7H[?25h[?25l timeout=10[26;8H[?25h[?25l timeout=10[26;8H[?25h[?25l timeout=10[26;8H[?25h[?25l timeout=10[26;9H[?25h[?25l timeout=10[26;9H[?25h[?25l timeout=10[26;9H[?25h[?25l timeout=10[26;10H[?25h[?25l timeout=10[26;10H[?25h[?25l timeout=10[26;10H[?25h[?25l timeout=10[26;11H[?25h[?25l timeout=10[26;11H[?25h[?25l timeout=10[26;11H[?25h[?25l timeout=10[26;12H[?25h[?25l timeout=10[26;12H[?25h[?25l timeout=10[26;12H[?25h[?25l timeout=10[26;13H[?25h[?25l timeout=10[26;13H[?25h[?25l timeout=10[26;13H[?25h[?25l timeout=10[26;14H[?25h[?25l timeout=10[26;14H[?25h[?25l timeout=10[26;14H[?25h[?25l timeout=10[26;15H[?25h[?25l timeout=10[26;15H[?25h[?25l timeout=10[26;15H[?25h[?25l timeout=10[26;16H[?25h[?25l timeout=10[26;16H[?25h[?25l timeout=10[26;16H[?25h[?25l timeout=10[26;17H[?25h[?25l timeout=10[26;17H[?25h[?25l timeout=10[26;17H[?25h[?25l timeout=10[26;18H[?25h[?25l timeout=10[26;18H[?25h[?25l timeout=10[26;18H[?25h[?25l timeout=10[26;19H[?25h[?25l timeout=10[26;19H[?25h[?25l timeout=10[26;19H[?25h[?25l timeout=10[26;20H[?25h[?25l timeout=10[26;20H[?25h[?25l timeout=10[26;20H[?25h[?25l timeout=10[26;21H[?25h[?25l timeout=10[26;21H[?25h[?25l timeout=10[26;21H[?25h[?25l timeout=10[26;22H[?25h[?25l timeout=10[26;22H[?25h[?25l timeout=10[26;22H[?25h[?25l timeout=10[26;23H[?25h[?25l timeout=10[26;23H[?25h[?25l timeout=10[26;23H[?25h[?25l timeout=10[26;24H[?25h[?25l timeout=10[26;24H[?25h[?25l timeout=10[26;24H[?25h[?25l timeout=10[26;25H[?25h[?25l timeout=10[26;25H[?25h[?25l timeout=10[26;25H[?25h[?25l timeout=10[26;26H[?25h[?25l timeout=10[26;26H[?25h[?25l timeout=10[26;26H[?25h[?25l timeout=10[26;27H[?25h[?25l timeout=10[26;27H[?25h[?25l timeout=10[26;27H[?25h[?25l timeout=10[26;28H[?25h[?25l timeout=10[26;28H[?25h[?25l timeout=10[26;28H[?25h[?25l timeout=10[26;29H[?25h[?25l timeout=10[26;29H[?25h[?25l timeout=10[26;29H[?25h[?25l timeout=10[26;30H[?25h[?25l timeout=10[26;30H[?25h[?25l timeout=10[26;30H[?25h[?25l timeout=10[26;31H[?25h[?25l timeout=10[26;31H[?25h[?25l timeout=10[26;31H[?25h[?25l timeout=10[26;32H[?25h[?25l timeout=10[26;32H[?25h[?25l timeout=10[26;32H[?25h[?25l timeout=10[26;33H[?25h[?25l timeout=10[26;33H[?25h[?25l timeout=10[26;33H[?25h[?25l timeout=10[26;34H[?25h[?25l timeout=10[26;34H[?25h[?25l timeout=10[26;34H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[27;8H[27;8H[27;8H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?25l )[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[28;28H[28;28H[28;28H[?25l[28;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[28;33H[?25h[?25l[28;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[28;33H[?25h[?25l[28;37r[37;1H
[1;38r[37;9Hexcept Exception as e:[28;33H[?25h[?25l[28;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[28;29H[?25h[?25l[28;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[28;29H[?25h[?25l[28;37r[37;1H
[1;38r[37;13Hlogger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[28;29H[?25h[?25l[28;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[28;33H[?25h[?25l[28;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[28;33H[?25h[?25l[28;37r[37;1H
[1;38r[37;13Htime.sleep(retry_delay)[28;33H[?25h[?25l[28;37r[37;1H
[1;38r[28;1H[?25h[?25l[28;37r[37;1H
[1;38r[28;1H[?25h[?25l[28;37r[37;1H
[1;38r[28;1H[?25h[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[8C[?25h[?25l[29;37r[29;1H[3L[1;38r[28;25Hif response.status_code == 200 and '"status":"success"' in response.text:
    logger.info(f"Successfully imported '{title}'")
else:
    logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[?25h[?25l[29;37r[29;1H[3L[1;38r[28;25Hif response.status_code == 200 and '"status":"success"' in response.text:
    logger.info(f"Successfully imported '{title}'")
else:
    logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[?25h[?25l[29;37r[29;1H[3L[1;38r[28;25Hif response.status_code == 200 and '"status":"success"' in response.text:
    logger.info(f"Successfully imported '{title}'")
else:
    logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[30;5H[30;5H[30;5H[29;4H[29;4H[29;4H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l  logger.info(f"Successfully imported '{title}'")    [?25h[?25l  logger.info(f"Successfully imported '{title}'")    [?25h[?25l  logger.info(f"Successfully imported '{title}'")    [?25h[?25l  logger.info(f"Successfully imported '{title}'")     [?25h[?25l  logger.info(f"Successfully imported '{title}'")     [?25h[?25l  logger.info(f"Successfully imported '{title}'")     [?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;7H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;7H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;7H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;8H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;8H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;8H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;9H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;9H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;9H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;10H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;10H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;10H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;11H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;11H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;11H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;12H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;12H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;12H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;13H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;13H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;13H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;14H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;14H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;14H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;15H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;15H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;15H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;16H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;16H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;16H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;17H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;17H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;17H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;18H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;18H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;18H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;19H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;19H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;19H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;20H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;20H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;20H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;21H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;21H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;21H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;22H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;22H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;22H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;23H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;23H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;23H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;24H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;24H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;24H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;25H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;25H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;25H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;26H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;26H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;26H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;27H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;27H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;27H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;28H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;28H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;28H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;29H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;29H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;29H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;30H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;30H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;30H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;31H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;31H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;31H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;32H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;32H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;32H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;33H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;33H[?25h[?25l  logger.info(f"Successfully imported '{title}'")[29;33H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[28;32H[28;32H[28;32H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;26H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;26H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;26H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;27H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;27H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;27H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;28H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;28H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;28H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;29H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;29H[?25h[?25l if response.status_code == 200 and '"status":"success"' in response.text:[28;29H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[29;28H[29;28H[29;28H
else
else
else
   
   
   [30;3H[30;3H[30;3H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l else: [?25h[?25l else: [?25h[?25l else: [?25h[?25l else:  [?25h[?25l else:  [?25h[?25l else:  [?25h[?25l else:   [?25h[?25l else:   [?25h[?25l else:   [?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?25l else:[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[31;28H[31;28H[31;28H[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")     [?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")     [?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")     [?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;7H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;7H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;7H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;8H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;8H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;8H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;9H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;9H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;9H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;10H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;10H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;10H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;11H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;11H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;11H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;12H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;12H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;12H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;13H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;13H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;13H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;14H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;14H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;14H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;15H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;15H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;15H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;16H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;16H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;16H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;17H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;17H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;17H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;18H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;18H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;18H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;19H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;19H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;19H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;20H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;20H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;20H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;21H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;21H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;21H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;22H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;22H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;22H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;23H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;23H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;23H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;24H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;24H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;24H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;25H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;25H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;25H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;26H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;26H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;26H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;27H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;27H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;27H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;28H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;28H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;28H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;29H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;29H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;29H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;30H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;30H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;30H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;31H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;31H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;31H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;32H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;32H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;32H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;33H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;33H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;33H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;34H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;34H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;34H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;35H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;35H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;35H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;36H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;36H[?25h[?25l logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;36H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?2004h[>4;2m[?25llogger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;119H[K[31;33H[?25h[?4m[?2004h[>4;2m[?25llogger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;119H[K[31;33H[?25h[?4m[?2004h[>4;2m[?25llogger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[31;119H[K[31;33H[?25h[?4m[?25l[38;1H:[?25h[?25l[38;1H:[?25h[?25l[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py"[?25l[?2004l[>4;m"shems_monitoring_server.py" 492 lines, 19204 bytes written 492 lines, 19204 bytes written 492 lines, 19204 bytes written[23;2t[23;2t[23;2t[23;1t[23;1t[23;1t
[?2004l[?1l>
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?1049l[23;0;0t[?25h[>4;m[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.pyls -lrth [Kls -lrth [Kls -lrth [K./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.sh
[?2004l
[?2004l
[?2004lStarting SHEMS deployment at Fri Apr 18 11:15:30 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 11:15:30 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 11:15:30 PM IST 2025
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 11:15:30 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Python scripts...
Deploying Python scripts...
Deploying Grafana...
Deploying Grafana...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 11:15:42 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:15:42 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:15:42 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:15:42 PM IST 2025
Grafana not found. Installing...
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
Grafana not found. Installing...
/usr/sbin/grafana-server
/usr/sbin/grafana-server
/usr/sbin/grafana-server
EEEE: : : : Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.

E: The list of sources could not be read.

E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
EE: The list of sources could not be read.
EE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Grafana installed successfully
Grafana installed successfully
Grafana installed successfully
Waiting for Grafana to start...
Waiting for Grafana to start...
Waiting for Grafana to start...
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Data source already exists
Data source already exists
Importing Grafana dashboards...
Importing Grafana dashboards...
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 11:15:50 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:15:50 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:15:50 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:15:50 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...
Server failed to start within 30 seconds
Server failed to start within 30 seconds
Server failed to start within 30 seconds
Server failed to start within 30 seconds
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ./shems_deploy_interface.sh./shems_deploy_interface.sh./shems_deploy_interface.shvi shems_monitoring_server.pyvi shems_monitoring_server.pyvi shems_monitoring_server.py[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh[2P./shems_deploy_interface.sh


[?2004l[?2004l[?2004lStarting SHEMS deployment at Fri Apr 18 11:17:31 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:17:31 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Starting SHEMS deployment at Fri Apr 18 11:17:31 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:17:31 PM IST 2025
Checking for existing processes...
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 11:17:48 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:17:48 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:17:48 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:17:48 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
EE: EConflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Executing: /lib/systemd/systemd-sysv-install enable grafana-server

[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lllrrrttthhh   
[?2004l
[?2004l
[?2004ltotal 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:17 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:17 shems_monitoring_server.py
total 56K
drwxr-xr-x 5 shems-mis shems-mis 4.0K Apr 18 14:46 venv
-rwxr-xr-x 1 shems-mis shems-mis 7.1K Apr 18 16:24 shems_data_simulation.py
drwxr-xr-x 2 shems-mis shems-mis 4.0K Apr 18 16:24 __pycache__
-rw-r--r-- 1 shems-mis shems-mis  11K Apr 18 21:40 shems_monitoring_server.py_bkp2
-rwxr-xr-x 1 shems-mis shems-mis 3.4K Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 3.7K Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  19K Apr 18 23:17 shems_monitoring_server.py
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccaaattt   [7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27m[7mshems_monitoring_server.py[27mshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004lshems_monitoring_server.py
[?2004l#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
import requests

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")
GRAFANA_USER = os.getenv("GRAFANA_USER", "admin")
GRAFANA_PASS = os.getenv("GRAFANA_PASS", "admin")


# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def get_dashboard_uid_from_title(title):
    try:
        url = f"{GRAFANA_URL}/api/search?query={title}"
        response = requests.get(url, auth=(GRAFANA_USER, GRAFANA_PASS), timeout=5)
        if response.status_code == 200:
            dashboards = response.json()
            for dash in dashboards:
                if dash.get("title", "").strip().lower() == title.strip().lower():
                    uid = dash.get("uid")
                    logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
                    return uid
            logger.warning(f"No dashboard matched title '{title}'")
        else:
            logger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")
    except Exception as e:
        logger.error(f"Exception during Grafana dashboard UID fetch: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists and ensure dashboards exist"""
    max_retries = 5
    retry_delay = 10
    dashboards_expected = {
        "SHEMS Overview": "overview-dashboard.json",
        "Power Analysis": "power-analysis.json",
        "Energy Analysis": "energy-analysis.json",
        "Device Details": "device-details.json"
    }
    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"

    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
                    if cursor.fetchone()["COUNT(*)"] > 0:
                        logger.info("Device data available, verifying Grafana dashboards...")

                        for title, filename in dashboards_expected.items():
                            uid = get_dashboard_uid_from_title(title)
                            if uid:
                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
                                continue

                            logger.warning(f"Dashboard '{title}' missing, importing...")
                            dashboard_path = os.path.join(dashboard_dir, filename)
                            if not os.path.exists(dashboard_path):
                                logger.error(f"Dashboard file missing: {dashboard_path}")
                                continue

                            with open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)

                            import_payload = {
                                "dashboard": dashboard_json,
                                "overwrite": True,
                                "folderId": 0
                            }

                            response = requests.post(
                                 f"{GRAFANA_URL}/api/dashboards/db",
                                 auth=(GRAFANA_USER, GRAFANA_PASS),
                                 headers={"Content-Type": "application/json"},
                                 json=import_payload,
                                 timeout=10
                            )
                            if response.status_code == 200 and '"status":"success"' in response.text:
          #!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
import requests

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")
GRAFANA_USER = os.getenv("GRAFANA_USER", "admin")
GRAFANA_PASS = os.getenv("GRAFANA_PASS", "admin")


# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def get_dashboard_uid_from_title(title):
    try:
        url = f"{GRAFANA_URL}/api/search?query={title}"
        response = requests.get(url, auth=(GRAFANA_USER, GRAFANA_PASS), timeout=5)
        if response.status_code == 200:
            dashboards = response.json()
            for dash in dashboards:
                if dash.get("title", "").strip().lower() == title.strip().lower():
                    uid = dash.get("uid")
                    logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
                    return uid
            logger.warning(f"No dashboard matched title '{title}'")
        else:
            logger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")
    except Exception as e:
        logger.error(f"Exception during Grafana dashboard UID fetch: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists and ensure dashboards exist"""
    max_retries = 5
    retry_delay = 10
    dashboards_expected = {
        "SHEMS Overview": "overview-dashboard.json",
        "Power Analysis": "power-analysis.json",
        "Energy Analysis": "energy-analysis.json",
        "Device Details": "device-details.json"
    }
    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"

    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
                    if cursor.fetchone()["COUNT(*)"] > 0:
                        logger.info("Device data available, verifying Grafana dashboards...")

                        for title, filename in dashboards_expected.items():
                            uid = get_dashboard_uid_from_title(title)
                            if uid:
                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
                                continue

                            logger.warning(f"Dashboard '{title}' missing, importing...")
                            dashboard_path = os.path.join(dashboard_dir, filename)
                            if not os.path.exists(dashboard_path):
                                logger.error(f"Dashboard file missing: {dashboard_path}")
                                continue

                            with open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)

                            import_payload = {
                                "dashboard": dashboard_json,
                                "overwrite": True,
                                "folderId": 0
                            }

                            response = requests.post(
                                 f"{GRAFANA_URL}/api/dashboards/db",
                                 auth=(GRAFANA_USER, GRAFANA_PASS),
                                 headers={"Content-Type": "application/json"},
                                 json=import_payload,
                                 timeout=10
                            )
                            if response.status_code == 200 and '"status":"success"' in response.text:
                                 logger.info(f"Successfully imported '{title}'")
                            else:
                                 logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")
                         return True

                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)

        except Exception as e:
            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)

    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")
        dashboard_uids = {
            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
            "power": get_dashboard_uid_from_title("Power Analysis"),
            "energy": get_dashboard_uid_from_title("Energy Analysis"),
            "devices": get_dashboard_uid_from_title("Device Details")
        }
        if not all(dashboard_uids.values()):
            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
                                   
                                   
        dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
                       logger.info(f"Successfully imported '{title}'")
                            else:
                                 logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")
                         return True

                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)

        except Exception as e:
            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)

    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")
        dashboard_uids = {
            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
            "power": get_dashboard_uid_from_title("Power Analysis"),
            "energy": get_dashboard_uid_from_title("Energy Analysis"),
            "devices": get_dashboard_uid_from_title("Device Details")
        }
        if not all(dashboard_uids.values()):
            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
                                   
                                   
        dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

#!/usr/bin/env python3

import os
import sys
import time
import subprocess
import logging
from datetime import datetime, timedelta
from functools import wraps
from werkzeug.security import generate_password_hash, check_password_hash
import secrets
import json
import pymysql
from pymysql.cursors import DictCursor
from pymysql import MySQLError
from flask import Flask, render_template, request, redirect, url_for, session, jsonify, abort
import requests

# ===== Get Current PID =====
current_pid = os.getpid()

# ===== Configuration =====
HTML_DIR = '/app/smarthome/dev/templates/'
SCRIPT_DIR = '/app/smarthome/dev/bin'
DB_DIR = '/app/smarthome/data/'
LOG_DIR = '/app/smarthome/data/logs/'
DASHBOARD_IMPORT_DELAY = 30  # seconds to wait before dashboard import
GRAFANA_URL = os.getenv("GRAFANA_URL", "http://localhost:3000")
GRAFANA_USER = os.getenv("GRAFANA_USER", "admin")
GRAFANA_PASS = os.getenv("GRAFANA_PASS", "admin")


# Ensure directories exist
os.makedirs(HTML_DIR, exist_ok=True)
os.makedirs(SCRIPT_DIR, exist_ok=True)
os.makedirs(DB_DIR, exist_ok=True)
os.makedirs(LOG_DIR, exist_ok=True)

# ===== Logging Configuration =====
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(os.path.join(LOG_DIR, 'shems_server.log')),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger('SHEMS-Server')

# ===== Application Setup =====
app = Flask(__name__, template_folder=HTML_DIR)
app.secret_key = os.getenv('FLASK_SECRET_KEY', secrets.token_hex(32))
app.config['PERMANENT_SESSION_LIFETIME'] = timedelta(hours=1)
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'

# ===== Database Configuration =====
class DatabaseManager:
    MAX_RETRIES = 3
    RETRY_DELAY = 2
    
    def __init__(self):
        self.db_user = os.getenv('DB_USER', 'shems_mis')
        self.db_pass = os.getenv('DB_PASS', 'RAS@23')
        self.db_name = os.getenv('DB_NAME', 'shems_db')
        
    def get_connection(self):
        """Get a database connection with retry logic"""
        attempts = 0
        last_error = None
        
        while attempts < self.MAX_RETRIES:
            try:
                conn = pymysql.connect(
                    host='localhost',
                    user=self.db_user,
                    password=self.db_pass,
                    database=self.db_name,
                    cursorclass=DictCursor,
                    connect_timeout=5,
                    autocommit=False
                )
                logger.info("Database connection established")
                return conn
            except MySQLError as e:
                last_error = e
                attempts += 1
                logger.warning(f"DB connection failed (attempt {attempts}/{self.MAX_RETRIES}): {str(e)}")
                time.sleep(self.RETRY_DELAY)
        
        logger.error(f"Failed to establish DB connection after {self.MAX_RETRIES} attempts")
        raise ConnectionError(f"Could not connect to database: {str(last_error)}")

db_manager = DatabaseManager()

# ===== Helper Functions =====
def get_pi_ip():
    """Get Raspberry Pi IP address with fallback"""
    try:
        ip = subprocess.getoutput("hostname -I | awk '{print $1}'").strip()
        return ip if ip else '127.0.0.1'
    except:
        return '127.0.0.1'

def is_service_running(service_name):
    """Check if a systemd service is running"""
    try:
        result = subprocess.run(
            ['systemctl', 'is-active', service_name],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        return result.stdout.strip() == 'active'
    except Exception as e:
        logger.error(f"Service check failed for {service_name}: {str(e)}")
        return False

def get_dashboard_uid_from_title(title):
    try:
        url = f"{GRAFANA_URL}/api/search?query={title}"
        response = requests.get(url, auth=(GRAFANA_USER, GRAFANA_PASS), timeout=5)
        if response.status_code == 200:
            dashboards = response.json()
            for dash in dashboards:
                if dash.get("title", "").strip().lower() == title.strip().lower():
                    uid = dash.get("uid")
                    logger.debug(f"Found UID '{uid}' for dashboard titled '{title}'")
                    return uid
            logger.warning(f"No dashboard matched title '{title}'")
        else:
            logger.error(f"Failed to fetch dashboard list: {response.status_code} - {response.text}")
    except Exception as e:
        logger.error(f"Exception during Grafana dashboard UID fetch: {e}")
    return None

def grafana_dashboard_url(uid):
    return f"{GRAFANA_URL}/d/{uid}?orgId=1&refresh=10s&theme=light" if uid else None

def validate_submission(form_data):
    """Validate user submission data"""
    required_fields = ['username', 'password', 'numDevices', 'numDays']
    errors = []
    
    # Check required fields
    for field in required_fields:
        if field not in form_data or not form_data[field]:
            errors.append(f"Missing required field: {field}")
    
    # Validate numeric fields
    try:
        num_devices = int(form_data.get('numDevices', 0))
        if num_devices <= 0:
            errors.append("Number of devices must be positive")
    except ValueError:
        errors.append("Invalid number of devices")
    
    try:
        num_days = int(form_data.get('numDays', 0))
        if num_days <= 0:
            errors.append("Number of days must be positive")
    except ValueError:
        errors.append("Invalid number of days")
    
    return errors if errors else None

def setup_grafana_dashboards(user_id):
    """Import Grafana dashboards after data exists and ensure dashboards exist"""
    max_retries = 5
    retry_delay = 10
    dashboards_expected = {
        "SHEMS Overview": "overview-dashboard.json",
        "Power Analysis": "power-analysis.json",
        "Energy Analysis": "energy-analysis.json",
        "Device Details": "device-details.json"
    }
    dashboard_dir = "/app/smarthome/grafana/grafana_dashboards"

    for attempt in range(max_retries):
        try:
            with db_manager.get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("SELECT COUNT(*) FROM DeviceInfo WHERE UserId = %s", (user_id,))
                    if cursor.fetchone()["COUNT(*)"] > 0:
                        logger.info("Device data available, verifying Grafana dashboards...")

                        for title, filename in dashboards_expected.items():
                            uid = get_dashboard_uid_from_title(title)
                            if uid:
                                logger.info(f"Dashboard '{title}' already exists (UID: {uid})")
                                continue

                            logger.warning(f"Dashboard '{title}' missing, importing...")
                            dashboard_path = os.path.join(dashboard_dir, filename)
                            if not os.path.exists(dashboard_path):
                                logger.error(f"Dashboard file missing: {dashboard_path}")
                                continue

                            with open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)

                            import_payload = {
                                "dashboard": dashboard_json,
                                "overwrite": True,
                                "folderId": 0
                            }

                            response = requests.post(
                                 f"{GRAFANA_URL}/api/dashboards/db",
                                 auth=(GRAFANA_USER, GRAFANA_PASS),
                                 headers={"Content-Type": "application/json"},
                                 json=import_payload,
                                 timeout=10
                            )
                            if response.status_code == 200 and '"status":"success"' in response.text:
          [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m                        logger.info(f"Successfully imported '{title}'")
                            else:
                                 logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")
                         return True

                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")
                    time.sleep(retry_delay)

        except Exception as e:
            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")
            time.sleep(retry_delay)

    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")
    return False

def check_grafana_dashboards_exist():
    """Check if dashboards exist using Grafana API"""
    try:
        grafana_url = f"http://{get_pi_ip()}:3000/api/dashboards"
        response = requests.get(
            grafana_url,
            auth=('admin', 'admin'),
            timeout=5
        )
        return response.status_code == 200
    except Exception as e:
        logger.warning(f"Grafana API check failed: {str(e)}")
        return False

def verify_dashboard_data(user_id):
    """Check if data exists for dashboard rendering"""
    try:
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check if user has any device data
                cursor.execute(
                    "SELECT COUNT(*) FROM DeviceUtilData WHERE DeviceId IN "
                    "(SELECT DeviceId FROM DeviceInfo WHERE UserId = %s)",
                    (user_id,)
                )
                return cursor.fetchone()[0] > 0
    except Exception as e:
        logger.error(f"Data verification failed: {str(e)}")
        return False

# ===== Decorators =====
def login_required(f):
    """Decorator to ensure user is logged in"""
    @wraps(f)
    def decorated_function(*args, **kwargs):
        if 'user_id' not in session:
            logger.warning("Unauthorized access attempt")
            return redirect(url_for('index'))
        return f(*args, **kwargs)
    return decorated_function

def handle_db_errors(f):
    @wraps(f)
    def decorated_function(*args, **kwargs):
        try:
            return f(*args, **kwargs)
        except MySQLError as e:
            logger.error(f"Database error in {f.__name__}: {str(e)}")
            abort(500, description="Database operation failed")
        except Exception as e:
            logger.error(f"Unexpected error in {f.__name__}: {str(e)}")
            abort(500)
    return decorated_function

# ===== Routes =====
@app.route('/')
def index():
    try:
        if 'user_id' in session:
            return redirect(url_for('dashboard'))
        return render_template('shems_dashboard_input.html')
    except Exception as e:
        logger.error(f"Index route error: {str(e)}")
        return render_template('error.html'), 500

@app.route('/api/access-points')
def access_points():
    pi_ip = get_pi_ip()
    access_points = [f"http://{pi_ip}:5000"]
    
    try:
        tailscale_ip = subprocess.getoutput("tailscale ip -4").strip()
        if tailscale_ip:
            access_points.append(f"http://{tailscale_ip}:5000")
    except:
        pass
        
    return jsonify({
        'access_points': access_points,
        'tailscale_ip': tailscale_ip if 'tailscale_ip' in locals() else None
    })

@app.route('/submit', methods=['POST'])
@handle_db_errors
def submit():
    try:
        # Validate input
        if errors := validate_submission(request.form):
            logger.warning(f"Invalid submission: {errors}")
            return jsonify({"errors": errors}), 400

        username = request.form['username']
        password = request.form['password']
        num_devices = int(request.form['numDevices'])
        num_days = int(request.form['numDays'])

        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                # Check existing user
                cursor.execute(
                    "SELECT UserId, PasswordHash FROM Users WHERE Username = %s",
                    (username,)
                )
                user = cursor.fetchone()

                if user:
                    if not check_password_hash(user['PasswordHash'], password):
                        logger.warning("Invalid password attempt")
                        return jsonify({"error": "Invalid credentials"}), 401
                    user_id = user['UserId']
                else:
                    # Create new user
                    password_hash = generate_password_hash(password)
                    cursor.execute(
                        "INSERT INTO Users (Username, PasswordHash) VALUES (%s, %s)",
                        (username, password_hash)
                    )
                    user_id = cursor.lastrowid
                    conn.commit()
                    logger.info(f"Created new user {user_id}")

                # Store session
                session.permanent = True
                session['user_id'] = user_id
                session['username'] = username
                logger.debug(f"Session created for {user_id}")

                # Start data simulation
                try:
                    subprocess.Popen([
                        sys.executable,
                        os.path.join(SCRIPT_DIR, 'shems_data_simulation.py'),
                        str(user_id),
                        str(num_devices),
                        str(num_days)
                    ])
                    logger.info(f"Started simulation for user {user_id}")
                except Exception as e:
                    logger.error(f"Simulation startup failed: {str(e)}")
                    return jsonify({"error": "Data generation failed"}), 500

                # Setup dashboards after delay
                time.sleep(DASHBOARD_IMPORT_DELAY)
                setup_grafana_dashboards(user_id)

                return redirect(url_for('dashboard'))

    except Exception as e:
        logger.critical(f"Submit error: {str(e)}", exc_info=True)
        return jsonify({"error": "Internal server error"}), 500

@app.route('/dashboard')
@login_required
def dashboard():
    try:
        user_id = session['user_id']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                if cursor.fetchone()['count'] == 0:
                    return render_template('error.html', message="No device data found for your account.")
        dashboard_uids = {
            "overview": get_dashboard_uid_from_title("SHEMS Overview"),
            "power": get_dashboard_uid_from_title("Power Analysis"),
            "energy": get_dashboard_uid_from_title("Energy Analysis"),
            "devices": get_dashboard_uid_from_title("Device Details")
        }
        if not all(dashboard_uids.values()):
            logger.error(f"Dashboard UIDs missing: {dashboard_uids}")
            return render_template("error.html", message="Dashboards are not ready. Please try again later.")
                                   
                                   
        dashboards = {
            'grafana_overview_url': grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            'grafana_power_url': grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            'grafana_energy_url': grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            'grafana_devices_url': grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        }
        return render_template('shems_dashboard_visuals.html', **dashboards)

    except Exception as e:
        logger.error(f"Dashboard error: {str(e)}")
        return render_template('error.html', message="Dashboard failed to load."), 500

@app.route('/logout', methods=['POST'])
def logout():
    session.clear()
    return redirect(url_for('index'))

@app.route('/api/user-data')
@login_required
def api_user_data():
    try:
        user_id = session['user_id']
        username = session['username']
        with db_manager.get_connection() as conn:
            with conn.cursor() as cursor:
                cursor.execute("SELECT COUNT(*) as count FROM DeviceInfo WHERE UserId=%s", (user_id,))
                total_devices = cursor.fetchone()['count']

                cursor.execute("SELECT COUNT(*) as active FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s AND dud.Status='ON'", (user_id,))
                active_devices = cursor.fetchone()['active']

                cursor.execute("SELECT SUM(Power_Consmpt) as power, SUM(Energy) as energy FROM DeviceUtilData dud JOIN DeviceInfo di ON dud.DeviceId=di.DeviceId WHERE di.UserId=%s", (user_id,))
                result = cursor.fetchone()

        return jsonify({
            "username": username,
            "total_devices": total_devices,
            "active_devices": active_devices,
            "total_power": result['power'] or 0,
            "total_energy": result['energy'] or 0,
            "grafana_overview_url": grafana_dashboard_url(get_dashboard_uid_from_title("SHEMS Overview")),
            "grafana_power_url": grafana_dashboard_url(get_dashboard_uid_from_title("Power Analysis")),
            "grafana_energy_url": grafana_dashboard_url(get_dashboard_uid_from_title("Energy Analysis")),
            "grafana_devices_url": grafana_dashboard_url(get_dashboard_uid_from_title("Device Details"))
        })
    except Exception as e:
        logger.error(f"User data fetch failed: {str(e)}")
        return jsonify({"error": "Data unavailable"}), 500

# ===== Main Execution =====
def safe_shutdown(signum, frame):
    """Handle shutdown signals gracefully"""
    logger.info("Received shutdown signal, terminating...")
    sys.exit(0)

def main():
    try:
        import signal
        signal.signal(signal.SIGINT, safe_shutdown)
        signal.signal(signal.SIGTERM, safe_shutdown)

        try:
            subprocess.run(
                ['pkill', '-f', f'python.*shems_monitoring_server.py', f'--exclude={current_pid}'],
                stderr=subprocess.DEVNULL,
                timeout=5
            )
        except subprocess.TimeoutExpired:
            logger.warning("Process cleanup timed out")
        except Exception as e:
            logger.warning(f"Process cleanup failed: {str(e)}")

        try:
            test_conn = db_manager.get_connection()
            test_conn.close()
        except Exception as e:
            logger.critical(f"Startup database test failed: {str(e)}")
            sys.exit(1)

        logger.info(f"Starting SHEMS server on port 5000 (PID: {current_pid})")
        app.run(host='0.0.0.0', port=5000, debug=False, threaded=True, use_reloader=False)

    except Exception as e:
        logger.critical(f"Fatal startup error: {str(e)}")
        sys.exit(1)

if __name__ == '__main__':
    main()

[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m vvviii   ttteeemmmppp...pppyyy

[?2004l[?2004l
[?2004lVim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
Vim: Warning: Output is not to a terminal
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[1;38r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[38;1H"temp.py" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"temp.py" [New File][27m[23m[29m[m[H[2J[?25l[38;1H"temp.py" [New File][2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [2;1H[1m[34m~                                                                                                                                     [3;1H~                                                                                                                                     [4;1H~                                                                                                                                     [5;1H~                                                                                                                                     [6;1H~                                                                                                                                     [7;1H~                                                                                                                                     [8;1H~                                                                                                                                     [9;1H~                                                                                                                                     [10;1H~                                                                                                                                     [11;1H~                                                                                                                                     [12;1H~                                                                                                                                     [13;1H~                                                                                                                                     [14;1H~                                                                                                                                     [15;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [16;1H~                                                                                                                                     [17;1H~                                                                                                                                     [18;1H~                                                                                                                                     [19;1H~                                                                                                                                     [20;1H~                                                                                                                                     [21;1H~                                                                                                                                     [22;1H~                                                                                                                                     [23;1H~                                                                                                                                     [24;1H~                                                                                                                                     [25;1H~                                                                                                                                     [26;1H~                                                                                                                                     [27;1H~                                                                                                                                     [28;1H~                                                                                                                                     [29;1H~                                                                                                                                     [30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[30;1H~                                                                                                                                     [31;1H~                                                                                                                                     [32;1H~                                                                                                                                     [33;1H~                                                                                                                                     [34;1H~                                                                                                                                     [35;1H~                                                                                                                                     [36;1H~                                                                                                                                     [37;1H~                                                                                                                                     [1;1H[?25h[?4m[?2004l[>4;m[?2004l[>4;m[?2004l[>4;m[?25l[mimport requests[2;1H[K[3;1HGRAFANA_USER = os.getenv("GRAFANA_USER", "admin")[3;50H[K[4;1H[K[4;1H[?25h[?25l[mimport requests[2;1H[K[3;1HGRAFANA_USER = os.getenv("GRAFANA_USER", "admin")[3;50H[K[4;1H[K[4;1H[?25h[?25l[mimport requests[2;1H[K[3;1HGRAFANA_USER = os.getenv("GRAFANA_USER", "admin")[3;50H[K[4;1H[K[4;1H[?25h[?25l[1;1H               [17Clogger.error(f"Dashboard file missing: {dashboard_path}")[2;33Hcontinue[3;1H[K[4;29Hwith open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)[5;62H[K[6;1H[K[7;1H                            import_payload = {[7;47H[K[8;1H                                "dashboard": dashboard_json,[8;61H[K[9;1H                                "overwrite": True,[9;51H[K[10;1H                                "folderId": 0[10;46H[K[11;1H                            }[11;30H[K[12;1H[K[13;1H                            response = requests.post([13;54H[K[14;1H                                f"{GRAFANA_URL}/api/dashboards/db",[14;68H[K[15;1H                                auth=(GRAFANA_USER, GRAFANA_PASS),[15;67H[K[16;1H                                headers={"Content-Type": "application/json"},[16;78H[K[17;1H                                json=import_payload,[17;53H[K[18;1H                                timeout=10[18;43H[K[19;1H                            )[19;30H[K[20;1H[K[21;1H                            if response.status_code == 200 and '"status":"success"' in response.text:[21;102H[K[22;1H                                logger.info(f"Successfully imported '{title}'")[22;80H[K[23;1H                            else:[23;34H[K[24;1H                                logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[24;118H[K[25;1H[K[26;1H                        return True  # Success after verifying/importing all dashboards[26;88H[K[27;1H[K[28;1H                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[28;93H[K[29;1H                    time.sleep(retry_delay)[29;44H[K[30;1H[K[31;1H        except Exception as e:[31;31H[K[32;1H            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[32;82H[K[33;1H            time.sleep(retry_delay)[?25l[1;1H               [17Clogger.error(f"Dashboard file missing: {dashboard_path}")[2;33Hcontinue[3;1H[K[4;29Hwith open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)[5;62H[K[6;1H[K[7;1H                            import_payload = {[7;47H[K[8;1H                                "dashboard": dashboard_json,[8;61H[K[9;1H                                "overwrite": True,[9;51H[K[10;1H                                "folderId": 0[10;46H[K[11;1H                            }[11;30H[K[12;1H[K[13;1H                            response = requests.post([13;54H[K[14;1H                                f"{GRAFANA_URL}/api/dashboards/db",[14;68H[K[15;1H                                auth=(GRAFANA_USER, GRAFANA_PASS),[15;67H[K[16;1H                                headers={"Content-Type": "application/json"},[16;78H[K[17;1H                                json=import_payload,[17;53H[K[18;1H                                timeout=10[18;43H[K[19;1H                            )[19;30H[K[20;1H[K[21;1H                            if response.status_code == 200 and '"status":"success"' in response.text:[21;102H[K[22;1H                                logger.info(f"Successfully imported '{title}'")[22;80H[K[23;1H                            else:[23;34H[K[24;1H                                logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[24;118H[K[25;1H[K[26;1H                        return True  # Success after verifying/importing all dashboards[26;88H[K[27;1H[K[28;1H                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[28;93H[K[29;1H                    time.sleep(retry_delay)[29;44H[K[30;1H[K[31;1H        except Exception as e:[31;31H[K[32;1H            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[32;82H[K[33;1H            time.sleep(retry_delay)[33;36H[K[34;1H[K[35;1H    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")[35;96H[K[36;1H    return False[36;17H[K[37;1H[K[37;1H[?25h[33;36H[K[34;1H[K[35;1H    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")[35;96H[K[36;1H    return False[36;17H[K[37;1H[K[37;1H[?25h[?25l[1;1H               [17Clogger.error(f"Dashboard file missing: {dashboard_path}")[2;33Hcontinue[3;1H[K[4;29Hwith open(dashboard_path, 'r') as f:
                                dashboard_json = json.load(f)[5;62H[K[6;1H[K[7;1H                            import_payload = {[7;47H[K[8;1H                                "dashboard": dashboard_json,[8;61H[K[9;1H                                "overwrite": True,[9;51H[K[10;1H                                "folderId": 0[10;46H[K[11;1H                            }[11;30H[K[12;1H[K[13;1H                            response = requests.post([13;54H[K[14;1H                                f"{GRAFANA_URL}/api/dashboards/db",[14;68H[K[15;1H                                auth=(GRAFANA_USER, GRAFANA_PASS),[15;67H[K[16;1H                                headers={"Content-Type": "application/json"},[16;78H[K[17;1H                                json=import_payload,[17;53H[K[18;1H                                timeout=10[18;43H[K[19;1H                            )[19;30H[K[20;1H[K[21;1H                            if response.status_code == 200 and '"status":"success"' in response.text:[21;102H[K[22;1H                                logger.info(f"Successfully imported '{title}'")[22;80H[K[23;1H                            else:[23;34H[K[24;1H                                logger.error(f"Failed to import '{title}': {response.status_code} - {response.text}")[24;118H[K[25;1H[K[26;1H                        return True  # Success after verifying/importing all dashboards[26;88H[K[27;1H[K[28;1H                    logger.info(f"No device data found (attempt {attempt+1}/{max_retries})")[28;93H[K[29;1H                    time.sleep(retry_delay)[29;44H[K[30;1H[K[31;1H        except Exception as e:[31;31H[K[32;1H            logger.warning(f"Dashboard setup failed on attempt {attempt+1}: {e}")[32;82H[K[33;1H            time.sleep(retry_delay)[33;36H[K[34;1H[K[35;1H    logger.error("Dashboard import timeout - no data generated or dashboards failed to import")[35;96H[K[36;1H    return False[36;17H[K[37;1H[K[37;1H[?25h[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?2004h[>4;2m[?4m[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25h[?25l[38;1H[K[38;1H:[?25hwwwqqq!!![?25l[?2004l[>4;m[?25l[?2004l[>4;m"temp.py""temp.py"[?25l[?2004l[>4;m"temp.py" [New File] 71 lines, 3260 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m [New File] 71 lines, 3260 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m [New File] 71 lines, 3260 bytes written[23;2t[23;1t
[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m (venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m cccddd
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 
[?2004l[?2004h(venv) ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m lllsss   ---lllaaarrrttthhh[K[K[K...   ...///...ppprrrooofffiiillleee
[?2004l
[?2004l
[?2004l[?2004h[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m [?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 

[?2004l
[?2004l[?2004l[?2004h[?2004h[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 
[?2004l[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 
[?2004l[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 
[?2004l[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m [?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 


[?2004l[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m [?2004l[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m [?2004l[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m 


[?2004l[?2004l[?2004l[?2004h[?2004h[?2004h]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m ]0;shems-mis@raspberrypi: ~[01;32mshems-mis@raspberrypi[00m:[01;34m~ $[00m cccddd   ---
[?2004l/app/smarthome/dev/bin

[?2004l/app/smarthome/dev/bin

[?2004l/app/smarthome/dev/bin
[?2004h[?2004h[?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   [K[K[K[K[K[K[K[K[Klllsss   ---rrrttt   
[?2004l
[?2004l
[?2004lvenv
shems_data_simulation.py
__pycache__
shems_monitoring_server.py_bkp2
shems_deploy_interface.sh
shems_deploy_grafana.sh
shems_monitoring_server.py
temp.py
venv
shems_data_simulation.py
__pycache__
shems_monitoring_server.py_bkp2
shems_deploy_interface.sh
shems_deploy_grafana.sh
shems_monitoring_server.py
temp.py
venv
shems_data_simulation.py
__pycache__
shems_monitoring_server.py_bkp2
shems_deploy_interface.sh
shems_deploy_grafana.sh
shems_monitoring_server.py
temp.py
[?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m lllsss   ---lll
[?2004l
[?2004l
[?2004ltotal 64
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
-rwxr-xr-x 1 shems-mis shems-mis  3731 Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  3437 Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 19285 Apr 18 23:22 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis 11054 Apr 18 21:40 shems_monitoring_server.py_bkp2
-rw-r--r-- 1 shems-mis shems-mis  6385 Apr 18 23:22 temp.py
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
total 64
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
-rwxr-xr-x 1 shems-mis shems-mis  3731 Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  3437 Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 19285 Apr 18 23:22 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis 11054 Apr 18 21:40 shems_monitoring_server.py_bkp2
-rw-r--r-- 1 shems-mis shems-mis  6385 Apr 18 23:22 temp.py
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
total 64
drwxr-xr-x 2 shems-mis shems-mis  4096 Apr 18 16:24 __pycache__
-rwxr-xr-x 1 shems-mis shems-mis  7208 Apr 18 16:24 shems_data_simulation.py
-rwxr-xr-x 1 shems-mis shems-mis  3731 Apr 18 22:02 shems_deploy_grafana.sh
-rwxr-xr-x 1 shems-mis shems-mis  3437 Apr 18 22:00 shems_deploy_interface.sh
-rwxr-xr-x 1 shems-mis shems-mis 19285 Apr 18 23:22 shems_monitoring_server.py
-rw-r--r-- 1 shems-mis shems-mis 11054 Apr 18 21:40 shems_monitoring_server.py_bkp2
-rw-r--r-- 1 shems-mis shems-mis  6385 Apr 18 23:22 temp.py
drwxr-xr-x 5 shems-mis shems-mis  4096 Apr 18 14:46 venv
[?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ...   ...///[K[K[K[K[K[K[K[K[K[K[K[K   [K[K[K...///[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27m[7mshems_deploy_interface.sh[27mshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lshems_deploy_interface.sh
[?2004lStarting SHEMS deployment at Fri Apr 18 11:23:13 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:23:13 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:23:13 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:23:13 PM IST 2025
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
Checking for existing processes...
No existing server process found
No existing server process found
No existing server process found
No existing server process found
No existing simulation process found
No existing simulation process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 11:23:25 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:23:25 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:23:25 PM IST 2025
Starting Grafana deployment at Fri Apr 18 11:23:25 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
OK
OK
OK
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
deb https://packages.grafana.com/oss/deb stable main
EEEE: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: E: E: E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Grafana installed successfully
Waiting for Grafana to start...
Grafana installed successfully
Grafana installed successfully
Waiting for Grafana to start...
Waiting for Grafana to start...
Waiting for Grafana to start...
Grafana is running
Grafana is running
Grafana is running
Grafana is running
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Importing dashboard: device-details
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 11:23:33 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:23:33 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:23:33 PM IST 2025
Grafana deployment completed at Fri Apr 18 11:23:33 PM IST 2025
Starting monitoring server...
Starting monitoring server...
Starting monitoring server...
Waiting for server to start...
Starting monitoring server...
Waiting for server to start...
Waiting for server to start...
Waiting for server to start...


[?2004h
[?2004h[?2004h]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [7msource /app/smarthome/dev/bin/venv/bin/activate[27m
[7msource /app/smarthome/dev/bin/venv/bin/activate[27m
[7msource /app/smarthome/dev/bin/venv/bin/activate[27m
[7mpip install requests[27m
[7mpip install requests[27m
[7mpip install requests[27m
[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csource /app/smarthome/dev/bin/venv/bin/activate
pip install requests
[A
[?2004l[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csource /app/smarthome/dev/bin/venv/bin/activate
pip install requests
[A
[?2004l[A[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Csource /app/smarthome/dev/bin/venv/bin/activate
pip install requests
[A
[?2004lLooking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Looking in indexes: https://pypi.org/simple, https://www.piwheels.org/simple
Collecting requests
Collecting requests
Collecting requests
  Downloading https://www.piwheels.org/simple/requests/requests-2.32.3-py3-none-any.whl (64 kB)
  Downloading https://www.piwheels.org/simple/requests/requests-2.32.3-py3-none-any.whl (64 kB)
  Downloading https://www.piwheels.org/simple/requests/requests-2.32.3-py3-none-any.whl (64 kB)
Collecting charset-normalizer<4,>=2 (from requests)
Collecting charset-normalizer<4,>=2 (from requests)
Collecting charset-normalizer<4,>=2 (from requests)
  Downloading https://www.piwheels.org/simple/charset-normalizer/charset_normalizer-3.4.1-py3-none-any.whl (49 kB)
  Downloading https://www.piwheels.org/simple/charset-normalizer/charset_normalizer-3.4.1-py3-none-any.whl (49 kB)
  Downloading https://www.piwheels.org/simple/charset-normalizer/charset_normalizer-3.4.1-py3-none-any.whl (49 kB)
Requirement already satisfied: idna<4,>=2.5 in ./venv/lib/python3.11/site-packages (from requests) (3.10)
Requirement already satisfied: idna<4,>=2.5 in ./venv/lib/python3.11/site-packages (from requests) (3.10)
Requirement already satisfied: idna<4,>=2.5 in ./venv/lib/python3.11/site-packages (from requests) (3.10)
Collecting urllib3<3,>=1.21.1 (from requests)
Collecting urllib3<3,>=1.21.1 (from requests)
Collecting urllib3<3,>=1.21.1 (from requests)
  Downloading urllib3-2.4.0-py3-none-any.whl.metadata (6.5 kB)
  Downloading urllib3-2.4.0-py3-none-any.whl.metadata (6.5 kB)
  Downloading urllib3-2.4.0-py3-none-any.whl.metadata (6.5 kB)
Collecting certifi>=2017.4.17 (from requests)
Collecting certifi>=2017.4.17 (from requests)
Collecting certifi>=2017.4.17 (from requests)
  Downloading https://www.piwheels.org/simple/certifi/certifi-2025.1.31-py3-none-any.whl (166 kB)
  Downloading https://www.piwheels.org/simple/certifi/certifi-2025.1.31-py3-none-any.whl (166 kB)
  Downloading https://www.piwheels.org/simple/certifi/certifi-2025.1.31-py3-none-any.whl (166 kB)
Downloading urllib3-2.4.0-py3-none-any.whl (128 kB)
Downloading urllib3-2.4.0-py3-none-any.whl (128 kB)
Downloading urllib3-2.4.0-py3-none-any.whl (128 kB)
Installing collected packages: urllib3, charset-normalizer, certifi, requests
Installing collected packages: urllib3, charset-normalizer, certifi, requests
Installing collected packages: urllib3, charset-normalizer, certifi, requests
Successfully installed certifi-2025.1.31 charset-normalizer-3.4.1 requests-2.32.3 urllib3-2.4.0
Successfully installed certifi-2025.1.31 charset-normalizer-3.4.1 requests-2.32.3 urllib3-2.4.0
Successfully installed certifi-2025.1.31 charset-normalizer-3.4.1 requests-2.32.3 urllib3-2.4.0
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m eeexxxiiittt
[?2004llogout

[?2004llogout

[?2004llogout
Starting SHEMS deployment at Fri Apr 18 11:28:50 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 11:29:03 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Get:3 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Get:4 http://raspbian.raspberrypi.com/raspbian bookworm InRelease [15.0 kB]
Fetched 21.6 kB in 2s (10.0 kB/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Reading package lists...
Building dependency tree...
Reading state information...
apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
The following packages were automatically installed and are no longer required:
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 11:29:24 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 11:29:26 PM IST 2025
Starting SHEMS deployment at Fri Apr 18 11:42:21 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Fri Apr 18 11:42:34 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Hit:3 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 6,581 B in 2s (3,066 B/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Reading package lists...
Building dependency tree...
Reading state information...
apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
The following packages were automatically installed and are no longer required:
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Fri Apr 18 11:42:59 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Fri Apr 18 11:43:02 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 12:25:30 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 12:25:44 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 19 12:25:53 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Starting SHEMS deployment at Sat Apr 19 12:47:13 AM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 12:47:26 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 19 12:47:33 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 12:47:35 AM IST 2025
Starting SHEMS deployment at Sat Apr 19 01:29:00 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 01:29:13 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 19 01:29:21 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 01:29:23 AM IST 2025
Starting SHEMS deployment at Sat Apr 19 01:58:49 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 01:59:01 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 19 01:59:10 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 01:59:12 AM IST 2025
Starting SHEMS deployment at Sat Apr 19 02:49:35 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 02:49:49 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source configured successfully
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 02:50:10 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 02:50:13 AM IST 2025
Starting SHEMS deployment at Sat Apr 19 02:57:05 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 02:57:18 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Get:3 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Hit:4 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Fetched 6,581 B in 3s (2,615 B/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Reading package lists...
Building dependency tree...
Reading state information...
apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
The following packages were automatically installed and are no longer required:
  avahi-utils gir1.2-handy-1 gir1.2-polkit-1.0 libcamera0.3 libdrm-nouveau2
  libwlroots12 lxplug-network
Use 'sudo apt autoremove' to remove them.
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 02:57:56 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 02:57:59 AM IST 2025
[?2004h(venv) ]0;shems-mis@raspberrypi: /app/smarthome/dev/bin[01;32mshems-mis@raspberrypi[00m:[01;34m/app/smarthome/dev/bin $[00m [7msudo grafana-cli admin reset-admin-password yournewpassword[27m
Starting SHEMS deployment at Sat Apr 19 03:12:53 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 03:13:06 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 03:13:25 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 03:13:28 AM IST 2025
Starting SHEMS deployment at Sat Apr 19 03:37:57 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 03:38:11 AM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Hit:1 https://packages.grafana.com/oss/deb stable InRelease
Hit:2 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Hit:3 http://archive.raspberrypi.com/debian bookworm InRelease
Err:1 https://packages.grafana.com/oss/deb stable InRelease
  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 963FA27710458545
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 6,581 B in 2s (3,580 B/s)
Reading package lists...
W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: https://packages.grafana.com/oss/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 963FA27710458545
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
W: Failed to fetch https://packages.grafana.com/oss/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 963FA27710458545
W: Some index files failed to download. They have been ignored, or old ones used instead.
Reading package lists...
Building dependency tree...
Reading state information...
apt-transport-https is already the newest version (2.6.1).
software-properties-common is already the newest version (0.99.30-4.1~deb12u1).
wget is already the newest version (1.21.3-1+deb12u1).
0 upgraded, 0 newly installed, 0 to remove and 1 not upgraded.
Warning: apt-key is deprecated. Manage keyring files in trusted.gpg.d instead (see apt-key(8)).
OK
deb https://packages.grafana.com/oss/deb stable main
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
E: Conflicting values set for option Signed-By regarding source https://packages.grafana.com/oss/deb/ stable: /usr/share/keyrings/grafana-archive-keyring.gpg != 
E: The list of sources could not be read.
Synchronizing state of grafana-server.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable grafana-server
Grafana installed successfully
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source configured successfully
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 03:38:47 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 03:38:49 AM IST 2025
Starting SHEMS deployment at Sat Apr 19 05:21:34 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:21:48 PM IST 2025
Grafana not found. Installing...
/usr/sbin/grafana-server
Hit:1 https://apt.grafana.com stable InRelease
Get:2 http://raspbian.raspberrypi.com/raspbian bookworm InRelease [15.0 kB]
Hit:3 http://archive.raspberrypi.com/debian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 21.6 kB in 3s (8,294 B/s)
Reading package lists...Starting SHEMS deployment at Sat Apr 19 05:23:09 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:23:25 PM IST 2025
Grafana installed successfully
/app/smarthome/dev/bin/shems_deploy_grafana.sh: 40: Syntax error: "else" unexpected
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 05:23:29 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 05:25:30 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:25:45 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 05:26:03 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 05:26:05 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 05:26:16 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:26:30 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 05:26:47 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 05:26:49 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 05:29:30 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:29:44 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 05:30:01 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 05:30:03 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 05:39:08 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:39:23 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 05:39:40 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Starting SHEMS deployment at Sat Apr 19 05:43:45 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:43:59 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 05:44:17 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 05:44:19 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 05:45:22 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:45:37 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 05:45:54 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 05:45:56 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 05:46:31 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 05:46:46 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 05:47:03 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 05:47:05 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 06:01:23 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 06:01:38 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Attempt {1..10}: Failed to configure data source, retrying...
Importing Grafana dashboards...
Importing dashboard: device-details
Attempt {1..5}: Failed to import dashboard device-details, retrying...
Importing dashboard: energy-analysis
Attempt {1..5}: Failed to import dashboard energy-analysis, retrying...
Importing dashboard: overview-dashboard
Attempt {1..5}: Failed to import dashboard overview-dashboard, retrying...
Importing dashboard: power-analysis
Attempt {1..5}: Failed to import dashboard power-analysis, retrying...
Grafana deployment completed at Sat Apr 19 06:01:55 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Grafana credentials: admin/admin (change this after first login)

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 06:01:58 PM IST 2025
Starting SHEMS deployment at Sat Apr 19 08:22:45 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 19 08:22:59 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 19 08:23:02 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 19 08:23:04 PM IST 2025
Starting SHEMS deployment at Sun Apr 20 01:21:10 AM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sun Apr 20 01:21:23 AM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sun Apr 20 01:21:26 AM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sun Apr 20 01:21:28 AM IST 2025
Starting SHEMS deployment at Sat Apr 26 02:44:25 PM IST 2025
Checking for existing processes...
No existing server process found
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 26 02:44:38 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 02:44:41 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 26 02:44:44 PM IST 2025
Starting SHEMS deployment at Sat Apr 26 02:51:15 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 26 02:51:28 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 02:51:30 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 26 02:51:33 PM IST 2025
Starting SHEMS deployment at Sat Apr 26 05:01:23 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 26 05:01:37 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 05:01:40 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 26 05:01:42 PM IST 2025
Starting SHEMS deployment at Sat Apr 26 05:04:17 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 26 05:04:32 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 05:04:35 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 26 05:04:37 PM IST 2025
Starting SHEMS deployment at Sat Apr 26 05:07:28 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 26 05:07:41 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 05:07:44 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 26 05:07:47 PM IST 2025
Starting SHEMS deployment at Sat Apr 26 05:18:03 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Configuring MariaDB...
Setting up Python environment...
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 26 05:18:16 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 05:18:18 PM IST 2025
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 26 05:18:21 PM IST 2025
Starting SHEMS deployment at Sat Apr 26 06:56:24 PM IST 2025
Checking for existing processes...
No existing simulation process found
Installing required packages...
Hit:1 https://apt.grafana.com stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Get:3 http://raspbian.raspberrypi.com/raspbian bookworm InRelease [15.0 kB]
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 21.6 kB in 3s (7,480 B/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Configuring MariaDB...
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Setting up Python environment...
 Configuring Python Tools ...
Name: Flask
Version: 3.1.0
Summary: A simple framework for building complex web applications.
Home-page: 
Author: 
Author-email: 
License: 
Location: /app/smarthome/dev/bin/venv/lib/python3.11/site-packages
Requires: blinker, click, itsdangerous, Jinja2, Werkzeug
Required-by: 
Deploying HTML templates...
Deploying Python scripts...
Deploying Grafana...
Starting Grafana deployment at Sat Apr 26 06:56:55 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 06:56:57 PM IST 2025
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
 Configuring Tailscale...
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Starting monitoring server...
Waiting for server to start...
Server is running

Deployment completed successfully!

Access points:
  - Web Interface (Local): http://192.168.1.223:5000
  - Web Interface (Tailscale): http://100.97.72.36:5000
  - Grafana (Local): http://192.168.1.223:3000
  - Grafana (Tailscale): http://100.97.72.36:3000

Log files are available in: /app/smarthome/data/logs
Deployment completed at Sat Apr 26 06:57:01 PM IST 2025
[31m🔥Starting SHEMS deployment at Sat Apr 26 07:44:45 PM IST 2025 [0m
Sat Apr 26 07:44:45 PM IST 2025 [36mℹ️ Checking for existing processes...
No existing simulation process found
Sat Apr 26 07:44:45 PM IST 2025 [35m🛠️ Installing required packages... [0m
Hit:1 https://apt.grafana.com stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Hit:3 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 6,581 B in 2s (2,726 B/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Sat Apr 26 07:45:02 PM IST 2025 [35m🛠️ Configuring MariaDB... [0m
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Sat Apr 26 07:45:02 PM IST 2025 [35m🛠️ Setting up Python environment... [0m
Sat Apr 26 07:45:17 PM IST 2025 [35m🛠️ Configuring Python Tools ... [0m
Name: Flask
Version: 3.1.0
Summary: A simple framework for building complex web applications.
Home-page: 
Author: 
Author-email: 
License: 
Location: /app/smarthome/dev/bin/venv/lib/python3.11/site-packages
Requires: blinker, click, itsdangerous, Jinja2, Werkzeug
Required-by: 
Sat Apr 26 07:45:19 PM IST 2025 [35m🛠️ Deploying HTML templates... [0m
Sat Apr 26 07:45:19 PM IST 2025 [35m🛠️ Deploying Python scripts... [0m
Sat Apr 26 07:45:19 PM IST 2025 [35m🛠️ Configuring Tailscale... [0m
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Sat Apr 26 07:45:19 PM IST 2025 [35m🛠️ Configuring Grafana... [0m
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
Sat Apr 26 07:45:22 PM IST 2025 [34m➡️ Deploying Grafana... [0m
Starting Grafana deployment at Sat Apr 26 07:45:22 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 07:45:25 PM IST 2025
 Sat Apr 26 07:45:25 PM IST 2025 [34m➡️ Starting monitoring server... [0m
Waiting for server to start...
 Sat Apr 26 07:45:27 PM IST 2025 [32m✔️ Server is running [0m

Sat Apr 26 07:45:27 PM IST 2025 [32m✔️ Deployment completed successfully!

 Sat Apr 26 07:45:27 PM IST 2025 [32m✔️ Access points: [0m
 Sat Apr 26 07:45:27 PM IST 2025 [36mℹ️  - Web Interface (Local): http://192.168.1.223:5000 [0m
 Sat Apr 26 07:45:27 PM IST 2025 [36mℹ️ - Web Interface (Tailscale): http://100.97.72.36:5000
 Sat Apr 26 07:45:27 PM IST 2025 [36mℹ️ - Grafana (Local): http://192.168.1.223:3000 [0m
 Sat Apr 26 07:45:27 PM IST 2025 [36mℹ️ - Grafana (Tailscale): http://100.97.72.36:3000 [0m

 Sat Apr 26 07:45:27 PM IST 2025 [32m✔️ Log files are available in: /app/smarthome/data/logs [0m
 Sat Apr 26 07:45:27 PM IST 2025 [32m✔️ Deployment completed !!! Thank you ![0m
[32m✔️  Data processed successfully.[0m
[31m🔥Starting SHEMS deployment at Sat Apr 26 07:47:48 PM IST 2025 [0m
Sat Apr 26 07:47:48 PM IST 2025 [36mℹ️ Checking for existing processes...
No existing simulation process found
Sat Apr 26 07:47:48 PM IST 2025 [35m🛠️ Installing required packages... [0m
Hit:1 https://apt.grafana.com stable InRelease
Hit:2 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Hit:3 http://archive.raspberrypi.com/debian bookworm InRelease
Get:4 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Fetched 6,581 B in 2s (3,419 B/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Sat Apr 26 07:48:00 PM IST 2025 [35m🛠️ Configuring MariaDB... [0m
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Sat Apr 26 07:48:02 PM IST 2025 [35m🛠️ Setting up Python environment... [0m
Sat Apr 26 07:48:16 PM IST 2025 [35m🛠️ Configuring Python Tools ... [0m
Name: Flask
Version: 3.1.0
Summary: A simple framework for building complex web applications.
Home-page: 
Author: 
Author-email: 
License: 
Location: /app/smarthome/dev/bin/venv/lib/python3.11/site-packages
Requires: blinker, click, itsdangerous, Jinja2, Werkzeug
Required-by: 
Sat Apr 26 07:48:18 PM IST 2025 [35m🛠️ Deploying HTML templates... [0m
Sat Apr 26 07:48:18 PM IST 2025 [35m🛠️ Deploying Python scripts... [0m
Sat Apr 26 07:48:18 PM IST 2025 [35m🛠️ Configuring Tailscale... [0m
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Sat Apr 26 07:48:19 PM IST 2025 [35m🛠️ Configuring Grafana... [0m
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
Sat Apr 26 07:48:19 PM IST 2025 [34m➡️ Deploying Grafana... [0m
Starting Grafana deployment at Sat Apr 26 07:48:19 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 07:48:22 PM IST 2025
 Sat Apr 26 07:48:22 PM IST 2025 [34m➡️ Starting monitoring server... [0m
Waiting for server to start...
 Sat Apr 26 07:48:25 PM IST 2025 [32m✔️ Server is running [0m

Sat Apr 26 07:48:25 PM IST 2025 [32m✔️ Deployment completed successfully!

 Sat Apr 26 07:48:25 PM IST 2025 [32m✔️ Access points: [0m
 Sat Apr 26 07:48:25 PM IST 2025 [36mℹ️  - Web Interface (Local): http://192.168.1.223:5000 [0m
 Sat Apr 26 07:48:25 PM IST 2025 [36mℹ️ - Web Interface (Tailscale): http://100.97.72.36:5000
 Sat Apr 26 07:48:25 PM IST 2025 [36mℹ️ - Grafana (Local): http://192.168.1.223:3000 [0m
 Sat Apr 26 07:48:25 PM IST 2025 [36mℹ️ - Grafana (Tailscale): http://100.97.72.36:3000 [0m

 Sat Apr 26 07:48:25 PM IST 2025 [32m✔️ Log files are available in: /app/smarthome/data/logs [0m
 Sat Apr 26 07:48:25 PM IST 2025 [32m✔️ Deployment completed !!! Thank you ![0m
[32m✔️  Data processed successfully.[0m
[31m🔥Starting SHEMS deployment at Sat Apr 26 08:40:41 PM IST 2025 [0m
Sat Apr 26 08:40:41 PM IST 2025 [36mℹ️ Checking for existing processes...
No existing simulation process found
Sat Apr 26 08:40:42 PM IST 2025 [35m🛠️ Installing required packages... [0m
Hit:1 https://apt.grafana.com stable InRelease
Get:2 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Hit:3 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Hit:4 http://archive.raspberrypi.com/debian bookworm InRelease
Fetched 6,581 B in 3s (2,451 B/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Sat Apr 26 08:40:53 PM IST 2025 [35m🛠️ Configuring MariaDB... [0m
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Sat Apr 26 08:40:56 PM IST 2025 [35m🛠️ Setting up Python environment... [0m
Sat Apr 26 08:41:10 PM IST 2025 [35m🛠️ Configuring Python Tools ... [0m
Name: Flask
Version: 3.1.0
Summary: A simple framework for building complex web applications.
Home-page: 
Author: 
Author-email: 
License: 
Location: /app/smarthome/dev/bin/venv/lib/python3.11/site-packages
Requires: blinker, click, itsdangerous, Jinja2, Werkzeug
Required-by: 
Sat Apr 26 08:41:12 PM IST 2025 [35m🛠️ Deploying HTML templates... [0m
Sat Apr 26 08:41:12 PM IST 2025 [35m🛠️ Deploying Python scripts... [0m
Sat Apr 26 08:41:12 PM IST 2025 [35m🛠️ Configuring Tailscale... [0m
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Sat Apr 26 08:41:12 PM IST 2025 [35m🛠️ Configuring Grafana... [0m
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
Sat Apr 26 08:41:13 PM IST 2025 [34m➡️ Deploying Grafana... [0m
Starting Grafana deployment at Sat Apr 26 08:41:13 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sat Apr 26 08:41:16 PM IST 2025
 Sat Apr 26 08:41:16 PM IST 2025 [34m➡️ Starting monitoring server... [0m
Waiting for server to start...
 Sat Apr 26 08:41:18 PM IST 2025 [32m✔️ Server is running [0m

Sat Apr 26 08:41:18 PM IST 2025 [32m✔️ Deployment completed successfully!

 Sat Apr 26 08:41:18 PM IST 2025 [32m✔️ Access points: [0m
 Sat Apr 26 08:41:18 PM IST 2025 [36mℹ️  - Web Interface (Local): http://192.168.1.223:5000 [0m
 Sat Apr 26 08:41:18 PM IST 2025 [36mℹ️ - Web Interface (Tailscale): http://100.97.72.36:5000
 Sat Apr 26 08:41:18 PM IST 2025 [36mℹ️ - Grafana (Local): http://192.168.1.223:3000 [0m
 Sat Apr 26 08:41:18 PM IST 2025 [36mℹ️ - Grafana (Tailscale): http://100.97.72.36:3000 [0m

 Sat Apr 26 08:41:18 PM IST 2025 [32m✔️ Log files are available in: /app/smarthome/data/logs [0m
 Sat Apr 26 08:41:18 PM IST 2025 [32m✔️ Deployment completed !!! Thank you ![0m
[32m✔️  Data processed successfully.[0m
[31m🔥Starting SHEMS deployment at Sun Apr 27 09:45:02 PM IST 2025 [0m
Sun Apr 27 09:45:02 PM IST 2025 [36mℹ️ Checking for existing processes...
No existing server process found
No existing simulation process found
Sun Apr 27 09:45:02 PM IST 2025 [35m🛠️ Installing required packages... [0m
Hit:1 https://apt.grafana.com stable InRelease
Hit:2 http://archive.raspberrypi.com/debian bookworm InRelease
Get:3 https://pkgs.tailscale.com/stable/raspbian bookworm InRelease
Hit:4 http://raspbian.raspberrypi.com/raspbian bookworm InRelease
Fetched 6,581 B in 2s (2,907 B/s)
Reading package lists...
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Sun Apr 27 09:45:16 PM IST 2025 [35m🛠️ Configuring MariaDB... [0m
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Sun Apr 27 09:45:16 PM IST 2025 [35m🛠️ Setting up Python environment... [0m
Sun Apr 27 09:45:28 PM IST 2025 [35m🛠️ Configuring Python Tools ... [0m
Name: Flask
Version: 3.1.0
Summary: A simple framework for building complex web applications.
Home-page: 
Author: 
Author-email: 
License: 
Location: /app/smarthome/dev/bin/venv/lib/python3.11/site-packages
Requires: blinker, click, itsdangerous, Jinja2, Werkzeug
Required-by: 
Sun Apr 27 09:45:30 PM IST 2025 [35m🛠️ Deploying HTML templates... [0m
Sun Apr 27 09:45:30 PM IST 2025 [35m🛠️ Deploying Python scripts... [0m
Sun Apr 27 09:45:30 PM IST 2025 [35m🛠️ Configuring Tailscale... [0m
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Sun Apr 27 09:45:31 PM IST 2025 [35m🛠️ Configuring Grafana... [0m
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
Sun Apr 27 09:45:40 PM IST 2025 [34m➡️ Deploying Grafana... [0m
Starting Grafana deployment at Sun Apr 27 09:45:40 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sun Apr 27 09:45:43 PM IST 2025
 Sun Apr 27 09:45:43 PM IST 2025 [34m➡️ Starting monitoring server... [0m
Waiting for server to start...
 Sun Apr 27 09:45:45 PM IST 2025 [32m✔️ Server is running [0m

Sun Apr 27 09:45:46 PM IST 2025 [32m✔️ Deployment completed successfully!

 Sun Apr 27 09:45:46 PM IST 2025 [32m✔️ Access points: [0m
 Sun Apr 27 09:45:46 PM IST 2025 [36mℹ️  - Web Interface (Local): http://192.168.1.223:5000 [0m
 Sun Apr 27 09:45:46 PM IST 2025 [36mℹ️ - Web Interface (Tailscale): http://100.97.72.36:5000
 Sun Apr 27 09:45:46 PM IST 2025 [36mℹ️ - Grafana (Local): http://192.168.1.223:3000 [0m
 Sun Apr 27 09:45:46 PM IST 2025 [36mℹ️ - Grafana (Tailscale): http://100.97.72.36:3000 [0m

 Sun Apr 27 09:45:46 PM IST 2025 [32m✔️ Log files are available in: /app/smarthome/data/logs [0m
 Sun Apr 27 09:45:46 PM IST 2025 [32m✔️ Deployment completed !!! Thank you ![0m
[32m✔️  Data processed successfully.[0m
[31m🔥Starting SHEMS deployment at Sun Apr 27 09:50:11 PM IST 2025 [0m
Sun Apr 27 09:50:11 PM IST 2025 [36mℹ️ Checking for existing processes...
No existing simulation process found
Sun Apr 27 09:50:12 PM IST 2025 [35m🛠️ Installing required packages... [0m
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Sun Apr 27 09:50:22 PM IST 2025 [35m🛠️ Configuring MariaDB... [0m
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Sun Apr 27 09:50:25 PM IST 2025 [35m🛠️ Setting up Python environment... [0m
Sun Apr 27 09:50:37 PM IST 2025 [35m🛠️ Configuring Flask ... [0m
Python 3.11.2
Flask 3.1.0
Werkzeug 3.1.3
Sun Apr 27 09:50:38 PM IST 2025 [35m🛠️ Deploying HTML templates... [0m
Sun Apr 27 09:50:38 PM IST 2025 [35m🛠️ Deploying Python scripts... [0m
Sun Apr 27 09:50:38 PM IST 2025 [35m🛠️ Configuring Tailscale... [0m
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Sun Apr 27 09:50:38 PM IST 2025 [35m🛠️ Configuring Grafana... [0m
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
Sun Apr 27 09:50:38 PM IST 2025 [34m➡️ Deploying Grafana... [0m
Starting Grafana deployment at Sun Apr 27 09:50:38 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sun Apr 27 09:50:41 PM IST 2025
 Sun Apr 27 09:50:41 PM IST 2025 [34m➡️ Starting monitoring server... [0m
Waiting for server to start...
 Sun Apr 27 09:50:43 PM IST 2025 [32m✔️ Server is running [0m

Sun Apr 27 09:50:43 PM IST 2025 [32m✔️ Deployment completed successfully!

 Sun Apr 27 09:50:43 PM IST 2025 [32m✔️ Access points: [0m
 Sun Apr 27 09:50:43 PM IST 2025 [36mℹ️  - Web Interface (Local): http://192.168.1.223:5000 [0m
 Sun Apr 27 09:50:43 PM IST 2025 [36mℹ️ - Web Interface (Tailscale): http://100.97.72.36:5000
 Sun Apr 27 09:50:43 PM IST 2025 [36mℹ️ - Grafana (Local): http://192.168.1.223:3000 [0m
 Sun Apr 27 09:50:43 PM IST 2025 [36mℹ️ - Grafana (Tailscale): http://100.97.72.36:3000 [0m

 Sun Apr 27 09:50:43 PM IST 2025 [32m✔️ Log files are available in: /app/smarthome/data/logs [0m
 Sun Apr 27 09:50:43 PM IST 2025 [32m✔️ Deployment completed !!! Thank you ![0m
[32m✔️  Data processed successfully.[0m
[31m🔥Starting SHEMS deployment at Sun Apr 27 09:53:28 PM IST 2025 [0m
Sun Apr 27 09:53:28 PM IST 2025 [36mℹ️ Checking for existing processes...
No existing simulation process found
Sun Apr 27 09:53:29 PM IST 2025 [35m🛠️ Installing required packages... [0m
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Sun Apr 27 09:53:41 PM IST 2025 [35m🛠️ Configuring MariaDB... [0m
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Sun Apr 27 09:53:41 PM IST 2025 [35m🛠️ Setting up Python environment... [0m
Sun Apr 27 09:53:52 PM IST 2025 [35m🛠️ Configuring Flask ... [0m
Python 3.11.2
Flask 3.1.0
Werkzeug 3.1.3
Sun Apr 27 09:53:53 PM IST 2025 [35m🛠️ Deploying HTML templates... [0m
Sun Apr 27 09:53:53 PM IST 2025 [35m🛠️ Deploying Python scripts... [0m
Sun Apr 27 09:53:53 PM IST 2025 [35m🛠️ Configuring Tailscale... [0m
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Sun Apr 27 09:53:53 PM IST 2025 [35m🛠️ Configuring Grafana... [0m
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
Sun Apr 27 09:53:54 PM IST 2025 [34m➡️ Deploying Grafana... [0m
Starting Grafana deployment at Sun Apr 27 09:53:54 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sun Apr 27 09:53:56 PM IST 2025
 Sun Apr 27 09:53:56 PM IST 2025 [34m➡️ Starting monitoring server... [0m
Waiting for server to start...
 Sun Apr 27 09:53:58 PM IST 2025 [32m✔️ Server is running [0m

Sun Apr 27 09:53:58 PM IST 2025 [32m✔️ Deployment completed successfully!

 Sun Apr 27 09:53:58 PM IST 2025 [32m✔️ Access points: [0m
 Sun Apr 27 09:53:58 PM IST 2025 [36mℹ️  - Web Interface (Local): http://192.168.1.223:5000 [0m
 Sun Apr 27 09:53:58 PM IST 2025 [36mℹ️ - Web Interface (Tailscale): http://100.97.72.36:5000
 Sun Apr 27 09:53:58 PM IST 2025 [36mℹ️ - Grafana (Local): http://192.168.1.223:3000 [0m
 Sun Apr 27 09:53:58 PM IST 2025 [36mℹ️ - Grafana (Tailscale): http://100.97.72.36:3000 [0m

 Sun Apr 27 09:53:58 PM IST 2025 [32m✔️ Log files are available in: /app/smarthome/data/logs [0m
 Sun Apr 27 09:53:58 PM IST 2025 [32m✔️ Deployment completed !!! Thank you ![0m
[32m✔️  Data processed successfully.[0m
[31m🔥Starting SHEMS deployment at Sun Apr 27 09:55:53 PM IST 2025 [0m
Sun Apr 27 09:55:53 PM IST 2025 [36mℹ️ Checking for existing processes...
No existing simulation process found
Sun Apr 27 09:55:53 PM IST 2025 [35m🛠️ Installing required packages... [0m
W: http://raspbian.raspberrypi.com/raspbian/dists/bookworm/InRelease: Key is stored in legacy trusted.gpg keyring (/etc/apt/trusted.gpg), see the DEPRECATION section in apt-key(8) for details.
Sun Apr 27 09:56:02 PM IST 2025 [35m🛠️ Configuring MariaDB... [0m
mariadb  Ver 15.1 Distrib 10.11.3-MariaDB, for debian-linux-gnueabihf (armv7l) using  EditLine wrapper
Sun Apr 27 09:56:02 PM IST 2025 [35m🛠️ Setting up Python environment... [0m
Sun Apr 27 09:56:14 PM IST 2025 [35m🛠️ Configuring Flask ... [0m
Python 3.11.2
Flask 3.1.0
Werkzeug 3.1.3
Sun Apr 27 09:56:15 PM IST 2025 [35m🛠️ Deploying HTML templates... [0m
Sun Apr 27 09:56:15 PM IST 2025 [35m🛠️ Deploying Python scripts... [0m
Sun Apr 27 09:56:15 PM IST 2025 [35m🛠️ Configuring Tailscale... [0m
1.82.5
  tailscale commit: dec88625eafdcac4dfae8f592705919184ec4df7
  other commit: ec2eb973098fbcd878430fcda1496ca04b9b7328
  go version: go1.24.2
Sun Apr 27 09:56:15 PM IST 2025 [35m🛠️ Configuring Grafana... [0m
Version 11.6.1 (commit: ae23ead4d959aa73a5a0ffada60e4147d679523c, branch: HEAD)
Sun Apr 27 09:56:15 PM IST 2025 [34m➡️ Deploying Grafana... [0m
Starting Grafana deployment at Sun Apr 27 09:56:15 PM IST 2025
Waiting for Grafana to start...
Grafana is running
Configuring Grafana data source...
Data source already exists
Importing Grafana dashboards...
Importing dashboard: device-details
Dashboard device-details imported successfully
Importing dashboard: energy-analysis
Dashboard energy-analysis imported successfully
Importing dashboard: overview-dashboard
Dashboard overview-dashboard imported successfully
Importing dashboard: power-analysis
Dashboard power-analysis imported successfully
Grafana deployment completed at Sun Apr 27 09:56:17 PM IST 2025
 Sun Apr 27 09:56:17 PM IST 2025 [34m➡️ Starting monitoring server... [0m
Waiting for server to start...
 Sun Apr 27 09:56:20 PM IST 2025 [32m✔️ Server is running [0m

Sun Apr 27 09:56:20 PM IST 2025 [32m✔️ Deployment completed successfully!

 Sun Apr 27 09:56:20 PM IST 2025 [32m✔️ Access points: [0m
 Sun Apr 27 09:56:20 PM IST 2025 [36mℹ️  - Web Interface (Local): http://192.168.1.223:5000 [0m
 Sun Apr 27 09:56:20 PM IST 2025 [36mℹ️ - Web Interface (Tailscale): http://100.97.72.36:5000
 Sun Apr 27 09:56:20 PM IST 2025 [36mℹ️ - Grafana (Local): http://192.168.1.223:3000 [0m
 Sun Apr 27 09:56:20 PM IST 2025 [36mℹ️ - Grafana (Tailscale): http://100.97.72.36:3000 [0m

 Sun Apr 27 09:56:20 PM IST 2025 [32m✔️ Log files are available in: /app/smarthome/data/logs [0m
 Sun Apr 27 09:56:20 PM IST 2025 [32m✔️ Deployment completed !!! Thank you ![0m
[32m✔️  Data processed successfully.[0m
